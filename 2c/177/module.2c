// Конвертер Метаданных из 1С:Предприятие 7.7 в 2С
// ------------------- Версия 0.56 (21.09.04)
// reminder.lutsk.ua
// ------------------- Версия 0.57 (06.10.04)
// sia@khp-1.uu.ru
// ------------------- Версия 0.59 (13.10.04)
// gre@list.ru

// Я вас замучаю своими комментариями 

Перем Строчка;
Перем СимволовВСтрок ;
Перем НачалоБлока ;
Перем КонецБлока ;
Перем СчетчикГруппыБлоков ;
Перем КонецГруппыБлоков ;
Перем Компаунд ;
Перем ИмяКомпаундФайла ;
Перем ИмяВременногоФайлаПотока;
Перем СтруктураТипизации;
Перем Вывод;
Перем Файл;
// --------------------------------------------
// --------------------------------------------
// --------------------------------------------
// --------------------------------------------
// Модуль разбора МД и парсинга потока ММС и диалогов
// --------------------------------------------
// --------------------------------------------
// --------------------------------------------
// --------------------------------------------

//Функция ЗаполнитьСтруктуруМетаданные()
//Метаданные=СоздатьОбъект("Массив");
//Идентификаторы=ЗаполнитьСтруктуруИдентификаторы();
//Метаданные["Идентификаторы"]=Идентификаторы; 				//MainDataContDef
//СвойстваКонфигурации=ЗаполнитьСтруктуруСвойстваКонфигурации();
//Метаданные["СвойстваКонфигурации"]=СвойстваКонфигурации; 	//TaskItem
//ОбщиеРеквизиты=СоздатьОбъект("Массив");
//Метаданные["ОбщиеРеквизиты"]=ОбщиеРеквизиты; 				//GenJrnlFldDef
//ГрафыОтбора=СоздатьОбъект("Массив");
//Метаданные["ГрафыОтбора"]=ГрафыОтбора; 						//DocSelRefObj
//Нумераторы=СоздатьОбъект("Массив");
//Метаданные["Нумераторы"]=Нумераторы; 						//DocNumDef
//Константы=СоздатьОбъект("Массив");
//Метаданные["Константы"]=Константы; 							//Consts
//Метаданные["Справочники"]=ЗаполнитьСправочники(); 				//SbCnts
//Регистры=СоздатьОбъект("Массив");
//Метаданные["Регистры"]=Регистры; 							//Registers
//Документы=СоздатьОбъект("Массив");
//Метаданные["Документы"]=Документы; 							//Documents
//Журналы=СоздатьОбъект("Массив");
//Метаданные["Журналы"]=Журналы; 								//Journalisters
//Перечисления=СоздатьОбъект("Массив");
//Метаданные["Перечисления"]=Перечисления; 					//EnumList
//Отчеты=СоздатьОбъект("Массив");
//Метаданные["Отчеты"]=Отчеты; 								//ReportList
//ЖурналыРасчетов=СоздатьОбъект("Массив");
//Метаданные["ЖурналыРасчетов"]=ЖурналыРасчетов; 				//CJ (CalcJournal)
//Календари=СоздатьОбъект("Массив");
//Метаданные["Календари"]=Календари; 							//Calendars
//ВидыРасчетов=СоздатьОбъект("Массив");
//Метаданные["ВидыРасчетов"]=ВидыРасчетов; 					//Algorithms
//ПравилаПерерасчета=СоздатьОбъект("Массив");
//Метаданные["ПравилаПерерасчета"]=ПравилаПерерасчета; 		//RecalcRules
//Обработки=СоздатьОбъект("Массив");
//Метаданные["Обработки"]=Обработки; 							//CalcVars
//ГруппыРасчетов=СоздатьОбъект("Массив");
//Метаданные["ГруппыРасчетов"]=ГруппыРасчетов; 				//Groups
//Последовательности=СоздатьОбъект("Массив");
//Метаданные["Последовательности"]=Последовательности; 		//Document Streams
//Бухгалтерия=СоздатьОбъект("Массив");
//Метаданные["Бухгалтерия"]=Бухгалтерия; 						//Buh
//КонтрольнаяСумма=СоздатьОбъект("Массив");
//Метаданные["КонтрольнаяСумма"]=КонтрольнаяСумма; 			//CRC
//Возврат Метаданные;
//КонецФункции

//___________________________________________________________________________________________

Функция ВремяВСтроку(вр) Экспорт
	Часов=Цел(вр/60/60);
	Минут=Цел((вр-Часов*60*60)/60); 
	Секунд=Цел((вр-Часов*60*60-Минут*60));
	Если Часов>99 Тогда
		ЗнаковЧасов=СтрДлина(Строка(Часов));
	Иначе
		ЗнаковЧасов=2;
	КонецЕсли;
	ВремяСтр=Формат(Часов,"Ч(0)"+ЗнаковЧасов+".0")
	+":"+Формат(Минут,"Ч(0)2.0")
	+":"+Формат(Секунд,"Ч(0)2.0");
	Возврат ВремяСтр;
КонецФункции   

//___________________________________________________________________________________________
Функция ЗаполнитьФорму() 
	Массив=СоздатьОбъект("Массив");
	Массив["Неизвестно1"]="";			
	Массив["Неизвестно2"]="";			
	Массив["Неизвестно3"]="";			
	Массив["Неизвестно4"]="";			
	Массив["Неизвестно5"]="";			
	Массив["Неизвестно6"]="";			
	Массив["Неизвестно7"]="";			
	Массив["Неизвестно8"]="";			
	Массив["Неизвестно9"]="";			
	Массив["Неизвестно10"]="";			
	Массив["Неизвестно11"]="";			
	Массив["Неизвестно12"]="";			
	Массив["Неизвестно13"]="";			
	Массив["Неизвестно14"]="";			
	Массив["ШиринаФормы"]="";			//15
	Массив["ВысотаФормы"]="";			//16
	Массив["ЗаголовокФормы"]="";		//17
	Массив["Неизвестно18"]="";			
	Массив["Неизвестно19"]="";			
	Массив["Неизвестно20"]="";			
	Массив["Неизвестно21"]="";			
	Массив["Неизвестно22"]="";			
	Массив["Неизвестно23"]="";			
	Массив["Неизвестно24"]="";			
	Массив["Неизвестно25"]="";			
	Массив["Неизвестно26"]="";			
	Массив["Неизвестно27"]="";			
	Массив["Неизвестно28"]="";			
	Массив["Неизвестно29"]="";			
	Массив["Неизвестно30"]="";			
	Возврат Массив;
КонецФункции

//___________________________________________________________________________________________
Функция ЗаполнитьКонтрол() 
	Массив=СоздатьОбъект("Массив");
	Массив["Заголовок"]="";				// 01				
	Массив["ВидКонтрола"]="";			// 02   (BUTTON - Кнопка
	// 		1CEDIT - Реквизит диалога
	//		BMASKED - Реквизит диалога (но спец типа) 
	// 		TABLE -  ТаблицаЗначений
	// 		CHECKBOX - Флажок
	//		RADIO - Переключатель
	//		LISTBOX - СписокЗначений
	//		COMBOBOX - ПолеСоСписком
	//		1CGROUPBOX - Рамка группы
	//		STATIC - Текст
	//		
	//		PICTURE - Картинка (пока не нет)
	//		SysTreeView32 - Дерево  (пока нет)
	Массив["Комбинированный3"]="";		// 03 
	Массив["КоординатаX"]="";			// 04
	Массив["КоординатаY"]="";			// 05
	Массив["ДлинаКонтрола"]="";			// 06
	Массив["ВысотаКонтрола"]="";		// 07
	Массив["Неизвестно8"]="";
	Массив["Неизвестно9"]="";
	Массив["Неизвестно10"]="";
	Массив["Неизвестно11"]="";
	Массив["Формула"]="";				// 12
	Массив["Идентификатор"]="";			// 13
	Массив["Неизвестно14"]="";			// 14
	Массив["Тип"]=""; 					// 15 (U для кнопки) , S - строка
	Массив["Длина"]=""; 				// 16 если 0 - то неограниченная длина
	Массив["Неизвестно17"]="";
	Массив["ИдентификаторВида"]="";		// 18 (Расширение типа)
	Массив["Неизвестно19"]="";
	Массив["Комбинированный20"]="";		//	пусто - 0
	//	(СделатьНедоступным = 16384). 
	//  (СделатьНедоступным+СделатьНевидимым = 24576)
	//  (Пропускать при вводе) (галочка)
	//  (Использовать описание (галочка)
	Массив["Маска"]="";					// 21 
	Массив["Описание"]="";
	Массив["Подсказка"]="";
	Массив["ИдентификаторФормы"]="";	// 24 Среди многих форм списка можно выбрать нужную
	Массив["РазмерШрифта"]="";			// 25
	Массив["Неизвестно26"]="";
	Массив["Неизвестно27"]="";
	Массив["Неизвестно28"]="";
	Массив["Неизвестно29"]="";
	Массив["Неизвестно30"]="";
	Массив["Неизвестно31"]="";
	Массив["Неизвестно32"]="";
	Массив["Неизвестно33"]="";
	Массив["Неизвестно34"]="";
	Массив["Неизвестно35"]="";
	Массив["Неизвестно36"]="";
	Массив["Неизвестно37"]="";
	Массив["Шрифт"]="";					// 38
	Массив["ЦветТекста"]="";			// 39
	Массив["Неизвестно40"]="";
	Массив["Неизвестно41"]="";
	Массив["ИмяСлоя"]="";				//42
	Массив["Неизвестно43"]="";
	Возврат Массив;
КонецФункции

//___________________________________________________________________________________________
Функция ЗаполнитьСтруктуруСправочника()
// Первичная запись в SbCnts
//
//ИдентификаторСправочника
//ИмяСправочника
//Комментарий
//Синоним
//ИдентификаторСправочникаВладельца
//ДлинаКода. Кво символов.
//СерииКодов. Во всем справочнике - 1. В пределах подчинения - 2
//ТипКода. Текстовый -1. Числовой - 2
//АвтоматическаяНумерация. Включена - 2. Выключена - 1
//ДлинаНаименования. Кво символов.
//ОсновноеПредставление. В виде кода - 0. В виде наименования - 1
//Редактировать. В списке - 0. В диалоге - 1. 2 - Обоими способами
//КоличествоУровней. 
//ИдентификаторФормыСпискаДляВыбора
//ИдентификаторФормыСпискаОсновная
//ОднаФормаДляЭлементаИГруппы. Да - 1. Нет - 0.
//КонтрольУникальности. Да - 1 . Нет - 0.
//РазмещатьГруппыСверху. Да - 1. Нет - 0.
	Массив=СоздатьОбъект("Массив");
	Массив["ИдентификаторСправочника"]="";								
	Массив["ИмяСправочника"]="";								
	Массив["Комментарий"]="";								
	Массив["Синоним"]="";								
	Массив["ИдентификаторСправочникаВладельца"]="";								
	Массив["ДлинаКода"]="";								
	Массив["СерииКодов"]="";								
	Массив["ТипКода"]="";								
	Массив["АвтоматическаяНумерация"]="";								
	Массив["ДлинаНаименования"]="";								
	Массив["ОсновноеПредставление"]="";								
	Массив["Редактировать"]="";								
	Массив["КоличествоУровней"]="";								
	Массив["ИдентификаторФормыСпискаДляВыбора"]="";								
	Массив["ИдентификаторФормыСпискаОсновная"]="";								
	Массив["ОднаФормаДляЭлементаИГруппы"]="";								
	Массив["КонтрольУникальности"]="";								
	Массив["РазмещатьГруппыСверху"]="";								
	Возврат Массив;
КонецФункции

//___________________________________________________________________________________________
Функция ЗаполнитьСтруктуруРеквизитаСправочника()
// Реквизиты справочника Params              
//ИдентификаторРеквизита
//ИмяРеквизита
//Комментарий
//Синоним
//Тип.       "S" - Строка, "N" - число, 
//           "U" - неопределенный, "D" - дата, "B" - справочник,
//           "O" - документ, "T" - счет
//    	   "P" - план счетов, "K" - ВидСубконто
//    	   "C" - календарь, "A" - ВидРасчета        
//Длина. 0 - неограниченная длина
//Точность
//ИдентификаторВида (расширение типа)
//Неотрицательный. Включено - 1. Нет - 0
//РазделятьТриады. Включено - 1. Нет - 0
//Периодический. Включено - 1. Нет - 0
//ИспользоватьДляЭлемента - да - 1. нет  -0 
//ИспользоватьДляГруппы - да - 1. нет  -0 
//Сортировка. Включено - 1. Нет - 0
//РучноеИзменение да - 1. нет  - 0 (для не периодического всегда 1)
//ИзменяетсяДокументами да - 1. нет  -0 (для периодического)
//ОтборПоРеквизиту. Включено - 1. Нет - 0
	Массив=СоздатьОбъект("Массив");
	Массив["ИдентификаторРеквизита"]="";								
	Массив["ИмяРеквизита"]="";								
	Массив["Комментарий"]="";								
	Массив["Синоним"]="";								
	Массив["Тип"]="";								
	Массив["Длина"]="";								
	Массив["Точность"]="";								
	Массив["ИдентификаторВида"]="";								
	Массив["Неотрицательный"]="";								
	Массив["РазделятьТриады"]="";								
	Массив["Периодический"]="";								
	Массив["ИспользоватьДляЭлемента"]="";								
	Массив["ИспользоватьДляГруппы"]="";								
	Массив["Сортировка"]="";								
	Массив["РучноеИзменение"]="";								
	Массив["ИзменяетсяДокументами"]="";								
	Массив["ОтборПоРеквизиту"]="";								
	Возврат Массив;
КонецФункции

//___________________________________________________________________________________________
Функция ЗаполнитьСтруктуруДокумента() 
// Запись в Documents (начало документа)
//01 ИдентификаторДокумента
//02 ИмяДокумента
//03 Комментарий
//04 Синоним
//05 ДлинаНомера
//06 Периодичность. 
//  По всем данного вида -0, 
//  В пределах года - 1,
//  В пределах квартала - 2,
//  В пределах месяца - 3,
//  В пределах дня -4  
//07 ТипНомера. Числовой - 2, Текстовый - 1
//08 АвтоматическаяНумерация. Установлена - 2, нет -1
//09 ИдентификаторЖурнала (если Прочие то 0)
//10 "-1",
//11 КонтрольУникальности. установлен -1. нет - 0
//12 ИдентификаторНумератора (если нету то 0)
//13 Оперативный учет. да -1. нет -0
//14 Расчет. да -1. нет -0
//15 Бухгалтерский учет. да -1. нет -0
//16 ЯвляетсяОснованиемДляЛюбого (Может являться основанием для документа любого вида да -1. нет -0 
//17 СоздаватьОперацию 0 - всегда, 1 - выборочно, 2 - только при проведении 
//18 АвтоматическаяНумерацияСтрок да -1. нет -0
//19 АвтоматическоеУдалениеДвижений да -1. нет -0
//20 РедактироватьОперацию да -1. нет -0
//21 РазрешитьПроведениеДокумент да -1. нет -0

	Массив=СоздатьОбъект("Массив");
	Массив["ИдентификаторДокумента"]="";								
	Массив["ИмяДокумента"]="";								
	Массив["Комментарий"]="";								
	Массив["Синоним"]="";								
	Массив["ДлинаНомера"]="";								
	Массив["Периодичность"]="";								
	Массив["ТипНомера"]="";								
	Массив["АвтоматическаяНумерация"]="";								
	Массив["ИдентификаторЖурнала"]="";								
	Массив["Неизвестно10"]="";
	Массив["КонтрольУникальности"]="";
	Массив["ИдентификаторНумератора"]="";
	Массив["ОперативныйУчет"]="";
	Массив["Расчет"]="";
	Массив["БухгалтерскийУчет"]="";
	Массив["ЯвляетсяОснованиемДляЛюбого"]="";
	Массив["СоздаватьОперацию"]=""; // 0 - всегда, 1 - выборочно, 2 - только при проведении 
	Массив["АвтоматическаяНумерацияСтрок"]="";
	Массив["АвтоматическоеУдалениеДвижений"]="";
	Массив["РедактироватьОперацию"]="";
	Массив["РазрешитьПроведениеДокумент"]="";
	Возврат Массив;
КонецФункции

//___________________________________________________________________________________________
Функция ЗаполнитьСтруктуруРеквизитаШапкиДокумента() 
// Реквизиты шапки {"Head Fields",
//ИдентификаторРеквизитаДокумента
//ИмяРеквизитаДокумента
//Комментарий
//Синоним
//Тип.       "S" - Строка, "N" - число, 
//           "U" - неопределенный, "D" - дата, "B" - справочник,
//           "O" - документ, "T" - счет
//    	     "P" - план счетов, "K" - ВидСубконто
//    	     "C" - календарь, "A" - ВидРасчета        
//Длина. 0 - неограниченная длина
//Точность
//ИдентификаторВида (расширение типа)
//Неотрицательный. да -1 . нет -0
//РазделятьТриады. да -1 . нет -0

	Массив=СоздатьОбъект("Массив");
	Массив["ИдентификаторРеквизита"]="";								
	Массив["ИмяРеквизита"]="";								
	Массив["Комментарий"]="";								
	Массив["Синоним"]="";								
	Массив["Тип"]="";								
	Массив["Длина"]="";								
	Массив["Точность"]="";								
	Массив["ИдентификаторВида"]="";								
	Массив["Неотрицательный"]="";								
	Массив["РазделятьТриады"]="";								
	Возврат Массив;
КонецФункции

//___________________________________________________________________________________________
Функция ЗаполнитьСтруктуруРеквизитаТаблицыДокумента() 
// Реквизиты табличной части документа {"Table Fields",
//ИдентификаторРеквизита
//ИмяРеквизита
//Комментарий
//Синоним
//Тип.       "S" - Строка, "N" - число, 
//           "U" - неопределенный, "D" - дата, "B" - справочник,
//           "O" - документ, "T" - счет
//    	     "P" - план счетов, "K" - ВидСубконто
//    	     "C" - календарь, "A" - ВидРасчета        
//Длина. 0 - неограниченная длина
//Точность
//ИдентификаторВида (расширение типа)
//Неотрицательный. да -1 . нет -0
//РазделятьТриады. да -1 . нет -0
//ИтогПоКолонке. да -1 . нет -0
	Массив=СоздатьОбъект("Массив");
	Массив["ИдентификаторРеквизита"]="";								
	Массив["ИмяРеквизита"]="";								
	Массив["Комментарий"]="";								
	Массив["Синоним"]="";								
	Массив["Тип"]="";								
	Массив["Длина"]="";								
	Массив["Точность"]="";								
	Массив["ИдентификаторВида"]="";								
	Массив["Неотрицательный"]="";								
	Массив["РазделятьТриады"]="";								
	Массив["ИтогПоКолонке"]="";								
	Возврат Массив;
КонецФункции

//___________________________________________________________________________________________
Функция ЗаполнитьСтруктуруОбщегоРеквизита() 
// Запись общего реквизита
//ИдентификаторОбщегоРеквизита
//ИмяОбщегоРеквизита
//Комментарий
//Синоним
//Тип.       "S" - Строка, "N" - число, 
//           "U" - неопределенный, "D" - дата, "B" - справочник,
//           "O" - документ, "T" - счет
//    	   "P" - план счетов, "K" - ВидСубконто
//    	   "C" - календарь, "A" - ВидРасчета        
//Длина. 0 - неограниченная длина
//Точность
//ИдентификаторВида (расширение типа)
//Неотрицательный. Да -1 . Нет - 0
//РазделятьТриады. Да -1 . Нет - 0
//Отбор. Да -1 . Нет - 0
	Массив=СоздатьОбъект("Массив");
	Массив["ИдентификаторРеквизита"]="";								
	Массив["ИмяРеквизита"]="";								
	Массив["Комментарий"]="";								
	Массив["Синоним"]="";								
	Массив["Тип"]="";								
	Массив["Длина"]="";								
	Массив["Точность"]="";								
	Массив["ИдентификаторВида"]="";								
	Массив["Неотрицательный"]="";								
	Массив["РазделятьТриады"]="";								
	Массив["Отбор"]="";								
	Возврат Массив;
КонецФункции

//___________________________________________________________________________________________
Функция ЗаполнитьСтруктуруНумератора() 
// Запись нумератора
//1 ИдентификаторНумератора
//2 ИмяНумератора
//3 Комментарий
//4 Синоним
//5
//6
//7
//8
//9	
	Массив=СоздатьОбъект("Массив");
	Массив["ИдентификаторНумератора"]="";								
	Массив["ИмяНумератора"]="";								
	Массив["Комментарий"]="";								
	Массив["Синоним"]="";								
	Массив["Неизвестно5"]="";								
	Массив["Неизвестно6"]="";								
	Массив["Неизвестно7"]="";								
	Массив["Неизвестно8"]="";								
	Массив["Неизвестно9"]="";								
	Возврат Массив;
КонецФункции

//___________________________________________________________________________________________
Функция ЗаполнитьСтруктуруИдентификаторы()
	Массив=СоздатьОбъект("Массив");
	Массив["Неизвестно1"]="";								//29
	Массив["Неизвестно2"]="";								//10011
	Массив["Неизвестно3"]="";								//7120
	Возврат Массив;
КонецФункции

//___________________________________________________________________________________________
Функция ЗаполнитьСтруктуруСвойстваКонфигурации()
	Массив=СоздатьОбъект("Массив");
	Массив["Неизвестно1"]="";								//1
	Массив["ИмяКонфигурации"]="";
	Массив["Комментарий"]="";
	Массив["Синоним"]="";
	Массив["Неизвестно2"]=""; 								//""
	Массив["Язык"]=""; 										// 1 - русский. 0 - английский
	Массив["Неизвестно3"]=""; 								//0
	Массив["РазрешитьНепосредственноеУдалениеОбъектов"]=""; //0 - нет. 1 - да
	Массив["Округление"]=""; 								//(1,5 до 1) - 1. (1,5 до 2) - 0
	Массив["Неизвестно4"]=""; 								//0
	Возврат Массив;
КонецФункции



Функция ЗаполнитьСтруктуруРегистра() 
	Массив=СоздатьОбъект("Массив");
	Массив["ИдентификаторРегистра"]="";
	Массив["ИмяРегистра"]="";
	Массив["Комментарий"]="";
	Массив["Синоним"]="";
	Массив["ТипРегистра"]=""; // 0 - остатки, 1 - обороты
	Массив["Периодичность"]=""; // (для оборотных) М - Месяц, D - День, W - Неделя, 
	// С - Декада, Q - Квартал, Y - Год
	Массив["БыстраяОбработкаДвижений"]=""; // 1 - да, 0 - нет
	Массив["МиграцияДвижений"]=""; // 0 - запретить, 1 - разрешить
	Возврат Массив;
КонецФункции

Функция ЗаполнитьСтруктуруИзмеренияРегистра() 
	Массив=СоздатьОбъект("Массив");
	Массив["ИдентификаторИзмерения"]="";
	Массив["ИмяИзмерения"]="";
	Массив["Комментарий"]="";
	Массив["Синоним"]="";
	Массив["Тип"]="";	// S - строка, и так далее
	Массив["Длина"]="";
	Массив["Точность"]="";
	Массив["Неизвестно8"]="";
	Массив["Неизвестно9"]="";
	Массив["РазделятьТриады"]="";	// 10.  да -1, нет -0
	Массив["ОтборДвижений"]="";		// 11.  да -1, нет -0
	Массив["ОтборИтогов"]="";		// 12.  да -1, нет -0
	Возврат Массив;
КонецФункции

Функция ЗаполнитьСтруктуруРесурсаРегистра() 
	Массив=СоздатьОбъект("Массив");
	Массив["ИдентификаторРесурса"]="";
	Массив["ИмяРесурса"]="";
	Массив["Комментарий"]="";
	Массив["Синоним"]="";
	Массив["Тип"]="";
	Массив["Длина"]="";
	Массив["Точность"]="";
	Массив["Неизвестно8"]="";
	Массив["Неизвестно9"]="";
	Массив["РазделятьТриады"]="";
	Возврат Массив;
КонецФункции

Функция ЗаполнитьСтруктуруРеквизитаРегистра() 
	Массив=СоздатьОбъект("Массив");
	Массив["ИдентификаторРеквизита"]="";
	Массив["ИмяРеквизита"]="";
	Массив["Комментарий"]="";
	Массив["Синоним"]="";
	Массив["Тип"]="";
	Массив["Длина"]="";
	Массив["Точность"]="";
	Массив["Неизвестно8"]="";		// 8
	Массив["Неотрицательный"]="";	// 9.  1 - да, 0 - нет
	Массив["РазделятьТриады"]="";	// 10. 1 - да, 0 - нет
	Массив["ОтборДвижений"]="";		// 11. 1 - да, 0 - нет
	Возврат Массив;
КонецФункции

Функция ЗаполнитьСтруктуруЖурнала()
	Массив=СоздатьОбъект("Массив");
	Массив["ИдентификаторЖурнала"]="";	//1
	Массив["ИмяЖурнала"]="";			//2
	Массив["Комментарий"]="";			//3
	Массив["Синоним"]="";				//4
	Массив["Неизвестно5"]="";			//5
	Массив["ТипЖурнала1"]="";			//6			1-Общий, 0 - Обычный, 1 - дополнительный
	Массив["ФормаВыбора"]="";			//7
	Массив["ФормаСписка"]="";			//8
	Массив["ТипЖурнала2"]="";			//9			1-Общий, 0 - Обычный, 0 - дополнительный
	Возврат Массив;
КонецФункции

Функция ЗаполнитьСтруктуруКонстанты()
	Массив=СоздатьОбъект("Массив");
	Массив["ИдентификаторКонстанты"]="";	//1
	Массив["ИмяКонстанты"]="";				//2
	Массив["Комментарий"]="";				//3
	Массив["Синоним"]="";					//4
	Массив["Тип"]="";						//5
	Массив["Длина"]="";						//6
	Массив["Точность"]="";					//7
	Массив["ИдентификаторВида"]="";			//8
	Массив["Неотрицательный"]="";			//9			1 - да, 0 - нет
	Массив["РазделятьТриады"]="";			//10		1 - да, 0 - нет
	Массив["Периодический"]="";				//11		1 - да, 0 - нет
	Возврат Массив;
КонецФункции

Функция ЗаполнитьСтруктуруПеречисления()
	Массив=СоздатьОбъект("Массив");
	Массив["ИдентификаторПеречисления"]="";	//1
	Массив["ИмяПеречисления"]="";			//2
	Массив["Комментарий"]="";				//3
	Массив["Синоним"]="";					//4
	Возврат Массив;
КонецФункции

Функция ЗаполнитьСтруктуруПланаСчетов()
	Массив=СоздатьОбъект("Массив");
	Массив["Идентификатор"]="";	//1
	Массив["Имя"]="";			//2
	Массив["Комментарий"]="";	//3
	Массив["Синоним"]="";		//4
	Массив["Шаблон"]="";		//5
	Массив["Шаблон2"]="";		//6
	Возврат Массив;
КонецФункции


Функция ЗаполнитьСтруктуруЗначенияПеречисления()
	Массив=СоздатьОбъект("Массив");
	Массив["ИдентификаторЗначенияПеречисления"]="";	//1
	Массив["ИмяЗначенияПеречисления"]="";			//2
	Массив["Комментарий"]="";						//3
	Массив["Представление"]="";						//4
	Массив["Представление2"]="";					//5
	Возврат Массив;
КонецФункции

//___________________________________________________________________________________________
Функция ПолучитьКонецБлока(Начало,ИмяБлока) 
//	ДобавитьВЛог("Вызвали ПолучитьКонецБлока. Начало="+Начало+" ИмяБлока="+ИмяБлока);
	ТочкаВхода=Найти(Строчка,ИмяБлока,Начало);
	Если ТочкаВхода=0 Тогда
//		Если Комментарии=3 Тогда
//			ДобавитьВЛог("Нет такого блока "+ИмяБлока);
//		КонецЕсли;
		Возврат -1;
	КонецЕсли
	Уровень=1;
	НачалоБлока=ТочкаВхода;
	Пока (2+2=4) Цикл
	ОбработатьСообщения();
//	ДобавитьВЛог("ТочкаВхода="+ТочкаВхода+" Уровень="+Уровень);
	Если (ТочкаВхода>=СимволовВСтрок)Тогда
		Если Комментарии=3 Тогда
			ДобавитьВЛог("Конец разбора блока "+ИмяБлока+" с ошибкой");
		КонецЕсли;	
		Возврат -1;
	КонецЕсли
	ПозицияНачала=Найти(Строчка,"{",ТочкаВхода+1);
	ПозицияКонца=Найти(Строчка,"}",ТочкаВхода+1);
	Если (ПозицияНачала<>0) и (ПозицияНачала<ПозицияКонца) Тогда
		Уровень=Уровень+1;
		ТочкаВхода=ПозицияНачала;
	КонецЕсли
	Если (ПозицияНачала=0) Тогда
		Уровень=Уровень-1;
		ТочкаВхода=ПозицияКонца;
	КонецЕсли
	Если (ПозицияНачала>ПозицияКонца) Тогда
		Уровень=Уровень-1;
		ТочкаВхода=ПозицияКонца;
	КонецЕсли
	Если Уровень<=0 Тогда
		Прервать;
	КонецЕсли
	КонецЦикла
	//ДобавитьВЛог("Точка конеца блока "+	ПозицияКонца);
	КонецБлока=ПозицияКонца;
	Возврат 0;
КонецФункции

//___________________________________________________________________________________________
Функция ИзвлечьПоток(ИмяПотока,Распаковка) 
	Попытка
		Ошибочка=Компаунд.Stream2file(СокрЛП(ИмяКомпаундФайла),
		СокрЛП(ИмяПотока),ИмяВременногоФайлаПотока,Распаковка); 
		Если Ошибочка<0 Тогда
			//ДобавитьВЛог("Ошибка в извлечении потока "+ИмяПотока+" N "+Ошибочка,"!!!");
			Возврат -1;
		КонецЕсли
	Исключение	
		Возврат -1;
		ДобавитьВЛог("Ошибка в извлечении потока");
	КонецПопытки
	Возврат 0;
КонецФункции 

//___________________________________________________________________________________________
Функция ПрочитатьПоток() 
	ОбработатьСообщения();
	Текст=СоздатьОбъект("Текст");
	Текст.Открыть(ИмяВременногоФайлаПотока);
	ОбработатьСообщения();
	Возврат Текст.ПолучитьТекст();
КонецФункции 

//___________________________________________________________________________________________
Функция ПолучитьПоток(ИмяПотока,Распаковка) 
	Если ИзвлечьПоток(ИмяПотока,Распаковка)<0 Тогда
		//ДобавитьВЛог("Ошибка в получении потока "+ИмяПотока+" возвращаем -1");
		Возврат Число(-1);
	КонецЕсли
	Возврат ПрочитатьПоток();
КонецФункции 

//@ Шевчик
//___________________________________________________________________________________________
Функция ПолучитьМодульВнешнейФормы() 
	ИмяПотока="MD Programm text";
	Возврат ПолучитьПоток(ИмяПотока,1);
КонецФункции

//___________________________________________________________________________________________
Функция ПолучитьФормуДиалогаВнешнейФормы() 
	ИмяПотока="Dialog Stream";
	Возврат ПолучитьПоток(ИмяПотока,0);
КонецФункции
//@ Шевчик КонецИзменений

//___________________________________________________________________________________________
Функция ПолучитьФормуДиалогаСправочника(ИдентификаторСправочника) 
	ИмяПотока="Subconto\Subconto_Number"+СокрЛП(ИдентификаторСправочника)+"\WorkBook\Dialog Stream";
	Возврат ПолучитьПоток(ИмяПотока,0);
КонецФункции

//___________________________________________________________________________________________
Функция ПолучитьМодульФормыДиалогаСправочника(ИдентификаторСправочника) 
	ИмяПотока="Subconto\Subconto_Number"+СокрЛП(ИдентификаторСправочника)+"\WorkBook\MD Programm text";
	Возврат ПолучитьПоток(ИмяПотока,1);
КонецФункции

//___________________________________________________________________________________________
Функция ПолучитьФормуСпискаСправочника(ИдентификаторСправочника) 
	ИмяПотока="SubList\SubList_Number"+СокрЛП(ИдентификаторСправочника)+"\WorkBook\Dialog Stream";
	Возврат ПолучитьПоток(ИмяПотока,0);
КонецФункции

//___________________________________________________________________________________________
Функция ПолучитьМодульФормыСпискаСправочника(ИдентификаторСправочника) 
	ИмяПотока="SubList\SubList_Number"+СокрЛП(ИдентификаторСправочника)+"\WorkBook\MD Programm text";
	Возврат ПолучитьПоток(ИмяПотока,1);
КонецФункции

//___________________________________________________________________________________________
Функция ПолучитьФормуГруппыСправочника(ИдентификаторСправочника) 
	ИмяПотока="SubFolder\SubFolder_Number"+СокрЛП(ИдентификаторСправочника)+"\WorkBook\Dialog Stream";
	Возврат ПолучитьПоток(ИмяПотока,0);
КонецФункции

//___________________________________________________________________________________________
Функция ПолучитьМодульФормыГруппыСправочника(ИдентификаторСправочника) 
	ИмяПотока="SubFolder\SubFolder_Number"+СокрЛП(ИдентификаторСправочника)+"\WorkBook\MD Programm text";
	Возврат ПолучитьПоток(ИмяПотока,1);
КонецФункции

//___________________________________________________________________________________________
Функция ПолучитьФормуДиалогаДокумента(ИдентификаторДокумента)
	ИмяПотока="Document\Document_Number"+СокрЛП(ИдентификаторДокумента)+"\WorkBook\Dialog Stream";
	Возврат ПолучитьПоток(ИмяПотока,0);
КонецФункции

//___________________________________________________________________________________________
Функция ПолучитьМодульФормыДиалогаДокумента(ИдентификаторДокумента)
	ИмяПотока="Document\Document_Number"+СокрЛП(ИдентификаторДокумента)+"\WorkBook\MD Programm text";
	Возврат ПолучитьПоток(ИмяПотока,1);
КонецФункции

//___________________________________________________________________________________________
Функция ПолучитьФормуСпискаДокумента(ИдентификаторЖурнала)
	ИмяПотока="Journal\Journal_Number"+СокрЛП(ИдентификаторЖурнала)+"\WorkBook\Dialog Stream";
	Возврат ПолучитьПоток(ИмяПотока,0);
КонецФункции

//___________________________________________________________________________________________
Функция ПолучитьМодульФормыСпискаДокумента(ИдентификаторЖурнала)
	ИмяПотока="Journal\Journal_Number"+СокрЛП(ИдентификаторЖурнала)+"\WorkBook\MD Programm text";
	Возврат ПолучитьПоток(ИмяПотока,1);
КонецФункции

//___________________________________________________________________________________________
Функция ПолучитьМодульПроведенияДокумента(ИдентификаторДокумента)
	ИмяПотока="TypedText\Transact_Number"+СокрЛП(ИдентификаторДокумента)+"\MD Programm text";
	Возврат ПолучитьПоток(ИмяПотока,1);
КонецФункции

//___________________________________________________________________________________________
Функция СтруктураСправочников() //внутренняя для отладки, потом удалить
	Если ВыбратьСправочники()<0 Тогда
		ДобавитьВЛог("Ошибка при выборе справочников.");
		Возврат -1;
	КонецЕсли
	Пока ПолучитьСправочник()=0 Цикл
		Справочник=ОтпарситьТекущийБлок(ЗаполнитьСтруктуруСправочника());
		ДобавитьВЛог(":"+Справочник["ИдентификаторСправочника"]+"::"+Справочник["ИмяСправочника"]);
		//РаспечататьПарсенныйБлок(Справочник);
		Если ВыбратьГруппуБлоков("Params")<0 Тогда
			ДобавитьВЛог("Отсутствуют реквизиты справочника");
			Продолжить;
		КонецЕсли
		Пока ПолучитьБлок("Params")=0 Цикл
			Реквизит=ОтпарситьТекущийБлок(ЗаполнитьСтруктуруРеквизитаСправочника());
			ДобавитьВЛог("  ---"+Реквизит["ИдентификаторРеквизита"]+"::"+Реквизит["ИмяРеквизита"]);
			//РаспечататьПарсенныйБлок(Реквизит);
		КонецЦикла
	КонецЦикла
	Возврат 0;	
КонецФункции

//___________________________________________________________________________________________
Функция ПоказатьСправочники() //внутренняя для отладки, потом удалить
	Если ВыбратьСправочники()<0 Тогда
		ДобавитьВЛог("Ошибка при выборе справочников.");
		Возврат -1;
	КонецЕсли
	Пока ПолучитьСправочник()=0 Цикл
		ДобавитьВЛог("Справочник:"+НачалоБлока+"::"+КонецБлока);
		ДобавитьВЛог("Справочник:"+Сред(Строчка,НачалоБлока,КонецБлока-НачалоБлока));
		Справочник=ОтпарситьТекущийБлок(ЗаполнитьСтруктуруСправочника());
		РаспечататьПарсенныйБлок(Справочник);
		Если ВыбратьГруппуБлоков("Params")<0 Тогда
			ДобавитьВЛог("Нету реквизитов");
			Продолжить;
		КонецЕсли
		Пока ПолучитьБлок("Params")=0 Цикл
			ДобавитьВЛог("	Реквизит:"+НачалоБлока+"::"+КонецБлока);
			ДобавитьВЛог("	Реквизит:"+Сред(Строчка,НачалоБлока,КонецБлока-НачалоБлока));
			Реквизит=ОтпарситьТекущийБлок(ЗаполнитьСтруктуруРеквизитаСправочника());
			РаспечататьПарсенныйБлок(Реквизит);
		КонецЦикла
	КонецЦикла
	Возврат 0;	
КонецФункции

//___________________________________________________________________________________________
Функция СтруктураДокументов() //внутренняя для отладки, потом удалить
	ОсновнойБлок=ПолучитьТекущийБлок(); // Считается что текущий это весь блок
	
	Если ВыбратьДокументы();<0 Тогда
		ДобавитьВЛог("Ошибка при выборе документов");
		Возврат -1;
	КонецЕсли
	Пока ПолучитьДокумент()=0 Цикл
		БлокДокумента=ПолучитьТекущийБлок();
		Документ=ОтпарситьТекущийБлок(ЗаполнитьСтруктуруДокумента());
		ДобавитьВЛог(":"+Документ["ИдентификаторДокумента"]+"::"+Документ["ИмяДокумента"]);

		УстановитьТекущийБлок(ОсновнойБлок);
		// Общие реквизиты документа
		Если ВыбратьОбщиеРеквизиты()<0 Тогда
			ДобавитьВЛог("Отсутствуют общие реквизиты");
		Иначе
			Пока ПолучитьОбщийРеквизит()=0 Цикл
				ОбщийРеквизит=ОтпарситьТекущийБлок(ЗаполнитьСтруктуруОбщегоРеквизита());
				ДобавитьВЛог("  :О:"+ОбщийРеквизит["ИдентификаторРеквизита"]+"::"+ОбщийРеквизит["ИмяРеквизита"]);
			КонецЦикла
		КонецЕсли
		
		// Реквизиты шапки
		УстановитьТекущийБлок(БлокДокумента);
		Если ВыбратьГруппуБлоков("Head Fields")<0 Тогда
			ДобавитьВЛог("Нету реквизитов шапки");
		Иначе
			Пока ПолучитьБлок("Head Fields")=0 Цикл
				РеквизитШапки=ОтпарситьТекущийБлок(ЗаполнитьСтруктуруРеквизитаШапкиДокумента());
				ДобавитьВЛог("  :Ш:"+РеквизитШапки["ИдентификаторРеквизита"]+"::"+РеквизитШапки["ИмяРеквизита"]);
			КонецЦикла
		КонецЕсли
			
		// Реквизиты таблицы
		УстановитьТекущийБлок(БлокДокумента);
		Если ВыбратьГруппуБлоков("Table Fields")<0 Тогда
			ДобавитьВЛог("Нету реквизитов таблицы");
		Иначе
			Пока ПолучитьБлок("Table Fields")=0 Цикл
				РеквизитТаблицы=ОтпарситьТекущийБлок(ЗаполнитьСтруктуруРеквизитаТаблицыДокумента());
				ДобавитьВЛог("  :Т:"+РеквизитТаблицы["ИдентификаторРеквизита"]+"::"+РеквизитТаблицы["ИмяРеквизита"]);
			КонецЦикла
		КонецЕсли
		
		УстановитьТекущийБлок(БлокДокумента);
	КонецЦикла
	Возврат 0;	
КонецФункции

//___________________________________________________________________________________________
Функция ПоказатьДокументы() //внутренняя для отладки, потом удалить
	Если ВыбратьДокументы();<0 Тогда
		ДобавитьВЛог("Ошибка при выборе документов");
		Возврат -1;
	КонецЕсли
	Пока ПолучитьДокумент()=0 Цикл
		БлокДокумента=ПолучитьТекущийБлок();
		ДобавитьВЛог("Документ:"+НачалоБлока+"::"+КонецБлока);
		//		ДобавитьВЛог("Документ:"+Сред(Строчка,НачалоБлока,КонецБлока-НачалоБлока));
		Документ=ОтпарситьТекущийБлокПоНомерам(ЗаполнитьСтруктуруДокумента());
		РаспечататьПарсенныйБлок(Документ);
		
		Если ВыбратьГруппуБлоков("Head Fields")<0 Тогда
			ДобавитьВЛог("Нету реквизитов шапки");
		Иначе
			Пока ПолучитьБлок("Head Fields")=0 Цикл
				ДобавитьВЛог("	Реквизит шапки:"+НачалоБлока+"::"+КонецБлока);
//				ДобавитьВЛог("	Реквизит шапки:"+Сред(Строчка,НачалоБлока,КонецБлока-НачалоБлока));
				РеквизитШапки=ОтпарситьТекущийБлокПоНомерам(ЗаполнитьСтруктуруРеквизитаШапкиДокумента());
				РаспечататьПарсенныйБлок(РеквизитШапки);
			КонецЦикла
		КонецЕсли

		УстановитьТекущийБлок(БлокДокумента);
		Если ВыбратьГруппуБлоков("Table Fields")<0 Тогда
			ДобавитьВЛог("Отсутствуют реквизиты таблицы");
		Иначе
			Пока ПолучитьБлок("Table Fields")=0 Цикл
				ДобавитьВЛог("	Реквизит таблицы:"+НачалоБлока+"::"+КонецБлока);
//				ДобавитьВЛог("	Реквизит таблицы:"+Сред(Строчка,НачалоБлока,КонецБлока-НачалоБлока));
				РеквизитТаблицы=ОтпарситьТекущийБлокПоНомерам(ЗаполнитьСтруктуруРеквизитаТаблицыДокумента());
				РаспечататьПарсенныйБлок(РеквизитТаблицы);
			КонецЦикла
		КонецЕсли

		УстановитьТекущийБлок(БлокДокумента);
	КонецЦикла
	Возврат 0;	
КонецФункции

//___________________________________________________________________________________________
Функция ПоказатьОбщиеРеквизиты() //внутренняя для отладки, потом удалить
	Если ВыбратьОбщиеРеквизиты();<0 Тогда
		ДобавитьВЛог("Ошибка при выборе общих реквизитов");
		Возврат -1;
	КонецЕсли
	Пока ПолучитьОбщийРеквизит()=0 Цикл
		ДобавитьВЛог("Общий реквизит:"+НачалоБлока+"::"+КонецБлока);
//		ДобавитьВЛог("Документ:"+Сред(Строчка,НачалоБлока,КонецБлока-НачалоБлока));
		ОбщийРеквизит=ОтпарситьТекущийБлокПоНомерам(ЗаполнитьСтруктуруОбщегоРеквизита());
		РаспечататьПарсенныйБлок(ОбщийРеквизит);
	КонецЦикла
	Возврат 0;	
КонецФункции

//___________________________________________________________________________________________
Функция СтруктураРегистров() //внутренняя для отладки, потом удалить
	Если ВыбратьРегистры();<0 Тогда
		ДобавитьВЛог("Ошибка при выборе регистров");
		Возврат -1;
	КонецЕсли
	Пока ПолучитьРегистр()=0 Цикл
		БлокРегистра=ПолучитьТекущийБлок();
		СтруктураРегистр=ОтпарситьТекущийБлок(ЗаполнитьСтруктуруРегистра());
		ДобавитьВЛог(":"+СтруктураРегистр["ИдентификаторРегистра"]+"::"+СтруктураРегистр["ИмяРегистра"]);

		// Измерения		
		УстановитьТекущийБлок(БлокРегистра);
		Если ВыбратьИзмеренияРегистра()<0 Тогда
			ДобавитьВЛог("Нету измерений");
		Иначе
			Пока ПолучитьИзмеренияРегистра()=0 Цикл
				Измерение=ОтпарситьТекущийБлок(ЗаполнитьСтруктуруИзмеренияРегистра());
				ДобавитьВЛог("  :И:"+Измерение["ИдентификаторИзмерения"]+"::"+Измерение["ИмяИзмерения"]);
			КонецЦикла
		КонецЕсли

		// Ресурсы
		УстановитьТекущийБлок(БлокРегистра);
		Если ВыбратьРесурсыРегистра()<0 Тогда
			ДобавитьВЛог("Нету измерений");
		Иначе
			Пока ПолучитьРесурсыРегистра()=0 Цикл
				Ресурс=ОтпарситьТекущийБлок(ЗаполнитьСтруктуруРесурсаРегистра());
				ДобавитьВЛог("  :Р:"+Ресурс["ИдентификаторРесурса"]+"::"+Ресурс["ИмяРесурса"]);
			КонецЦикла
		КонецЕсли

		// Реквизиты
		УстановитьТекущийБлок(БлокРегистра);
		Если ВыбратьРеквизитыРегистра()<0 Тогда
			ДобавитьВЛог("Нету реквизитов");
		Иначе
			Пока ПолучитьРеквизитыРегистра()=0 Цикл
				Реквизит=ОтпарситьТекущийБлок(ЗаполнитьСтруктуруРеквизитаРегистра());
				ДобавитьВЛог("  :Ре:"+Реквизит["ИдентификаторРеквизита"]+"::"+Реквизит["ИмяРеквизита"]);
			КонецЦикла
		КонецЕсли

		УстановитьТекущийБлок(БлокРегистра);
	КонецЦикла
	Возврат 0;	
КонецФункции

//___________________________________________________________________________________________
Функция ПоказатьРегистры() //внутренняя для отладки, потом удалить
	Если ВыбратьРегистры();<0 Тогда
		ДобавитьВЛог("Ошибка при выборе регистров");
		Возврат -1;
	КонецЕсли
	Пока ПолучитьРегистр()=0 Цикл
		БлокРегистра=ПолучитьТекущийБлок();
		ДобавитьВЛог("Регистр:"+НачалоБлока+"::"+КонецБлока);
		СтруктураРегистр=ОтпарситьТекущийБлокПоНомерам(ЗаполнитьСтруктуруРегистра());
		РаспечататьПарсенныйБлок(СтруктураРегистр);
		
		// Измерения		
		УстановитьТекущийБлок(БлокРегистра);
		Если ВыбратьИзмеренияРегистра()<0 Тогда
			ДобавитьВЛог("Нету измерений");
		Иначе
			Пока ПолучитьИзмеренияРегистра()=0 Цикл
				ДобавитьВЛог("	Измерение:"+НачалоБлока+"::"+КонецБлока);
				Измерение=ОтпарситьТекущийБлокПоНомерам(ЗаполнитьСтруктуруИзмеренияРегистра());
				РаспечататьПарсенныйБлок(Измерение);
			КонецЦикла
		КонецЕсли
		
		// Ресурсы
		УстановитьТекущийБлок(БлокРегистра);
		Если ВыбратьРесурсыРегистра()<0 Тогда
			ДобавитьВЛог("Нету измерений");
		Иначе
			Пока ПолучитьРесурсыРегистра()=0 Цикл
				ДобавитьВЛог("	Ресурс:"+НачалоБлока+"::"+КонецБлока);
				Ресурс=ОтпарситьТекущийБлокПоНомерам(ЗаполнитьСтруктуруРесурсаРегистра());
				РаспечататьПарсенныйБлок(Ресурс);
			КонецЦикла
		КонецЕсли

		// Реквизиты
		УстановитьТекущийБлок(БлокРегистра);
		Если ВыбратьРеквизитыРегистра()<0 Тогда
			ДобавитьВЛог("Нету реквизитов");
		Иначе
			Пока ПолучитьРеквизитыРегистра()=0 Цикл
				ДобавитьВЛог("	Реквизит:"+НачалоБлока+"::"+КонецБлока);
				Реквизит=ОтпарситьТекущийБлокПоНомерам(ЗаполнитьСтруктуруРеквизитаРегистра());
				РаспечататьПарсенныйБлок(Реквизит);
			КонецЦикла
		КонецЕсли

		УстановитьТекущийБлок(БлокРегистра);
	КонецЦикла
	Возврат 0;	
КонецФункции

//___________________________________________________________________________________________
Процедура РаспечататьПарсенныйБлок(ПарсенныйБлок) 
	//			ДобавитьВЛог("Размер парсенного блока "+РазмерМассива(ПарсенныйБлок));
	//			Для Счетчик=1 По РазмерМассива(ПарсенныйБлок) Цикл
	//				ДобавитьВЛог("---"+Счетчик+" :: "+ПарсенныйБлок.ИдентификаторПоНомеру(Счетчик)+" :: "+ПарсенныйБлок[Счетчик]);
	//			КонецЦикла
	//ДобавитьВЛог("Размер парсенного блока "+РазмерСтруктуры(ПарсенныйБлок));
	Текст=СоздатьОбъект("Текст");	
	Для Счетчик=1 По РазмерСтруктуры(ПарсенныйБлок) Цикл
		ТекстВывода="---"+Счетчик+" :: "+ПарсенныйБлок.ИдентификаторПоНомеру(Счетчик)+" :: "+ПарсенныйБлок[ПарсенныйБлок.ИдентификаторПоНомеру(Счетчик)];
		//ДобавитьВЛог(ТекстВывода);
		Текст.ДобавитьСтроку(ТекстВывода);
	КонецЦикла
	Текст.Записать("C:\2c\1c\Новый.txt");
КонецПроцедуры

//___________________________________________________________________________________________
Процедура РаспечататьПарсенныйБлокПоНомерам(ПарсенныйБлок) 
	ДобавитьВЛог("Размер парсенного блока "+РазмерМассива(ПарсенныйБлок));
	Для Счетчик=1 По РазмерМассива(ПарсенныйБлок) Цикл
		ДобавитьВЛог("---"+Счетчик+" :: "+ПарсенныйБлок[Счетчик]);
	КонецЦикла
КонецПроцедуры

//___________________________________________________________________________________________
Функция ОтпарситьТекущийБлокПоНомерам(МассивЗначений) 
	// Все вложенные блоки попросту игнорируются. Все остальное превращается в массив
	// структура которого передается при вызове
	Накопилось="";
	Уровень=0;
	СчетчикМассива=0;
	Для Счетчик=НачалоБлока По КонецБлока Цикл
		Символ=Сред(Строчка,Счетчик,1);
		Если Символ="{" Тогда 
			Уровень=Уровень+1;
			Продолжить;
		КонецЕсли
		Если Символ="}" Тогда 
			Уровень=Уровень-1;
			Продолжить;
		КонецЕсли
		Если Уровень<1 Тогда
			ДобавитьВЛог("Увы. но блок прервался раньше срока");
			Возврат -1;
		КонецЕсли
		Если Уровень=1 Тогда
			Если Символ="," Тогда
				Если СокрЛП(Накопилось)<>"" Тогда
					СчетчикМассива=СчетчикМассива+1;
					МассивЗначений[СчетчикМассива]=СокрЛП(Накопилось);
					Накопилось="";
				КонецЕсли
			Иначе
				Накопилось=Накопилось+Символ;
			КонецЕсли
		КонецЕсли
	КонецЦикла
	Если СокрЛП(Накопилось)<>"" Тогда
		СчетчикМассива=СчетчикМассива+1;
		МассивЗначений[СчетчикМассива]=СокрЛП(Накопилось);
	КонецЕсли
	Возврат МассивЗначений;
КонецФункции

//___________________________________________________________________________________________
Функция ОтпарситьТекущийБлок(МассивЗначений) 
 // Все вложенные блоки попросту игнорируются. Все остальное превращается в массив
 // структура которого передается при вызове
 	Накопилось="";
 	Уровень=0;
 	СчетчикМассива=0;
 	ВнутриСкобок=0;
 	Для Счетчик=НачалоБлока По КонецБлока Цикл
 		Символ=Сред(Строчка,Счетчик,1);
 		Если Символ="{" Тогда 
 			Уровень=Уровень+1;
 			Продолжить;
 		КонецЕсли
 		Если Символ="}" Тогда 
 			Уровень=Уровень-1;
 			Продолжить;
 		КонецЕсли
 		Если Уровень<1 Тогда
			ДобавитьВЛог("Увы. но блок прервался раньше срока");
 			Возврат -1;
 		КонецЕсли
 		Если Уровень=1 Тогда
 			Если Символ=Симв(34) Тогда
 				ВнутриСкобок=1-ВнутриСкобок;
 			КонецЕсли
 		
 			Если (Символ=",") и (ВнутриСкобок=0) Тогда
 				Если СокрЛП(Накопилось)<>"" Тогда
 					СчетчикМассива=СчетчикМассива+1;
 					Накопилось=СтрЗаменить(Накопилось,Симв(34),"");					
					МассивЗначений[МассивЗначений.ИдентификаторПоНомеру(СчетчикМассива)]=Накопилось;
 					Накопилось="";
 				КонецЕсли
 			Иначе
 				Накопилось=Накопилось+Символ;
 			КонецЕсли
 		КонецЕсли
 	КонецЦикла
	Если СокрЛП(Накопилось)<>"" Тогда
	 	СчетчикМассива=СчетчикМассива+1;
	 	Накопилось=СтрЗаменить(Накопилось,Симв(34),"");					
	 	МассивЗначений[МассивЗначений.ИдентификаторПоНомеру(СчетчикМассива)]=Накопилось;
	КонецЕсли
	Возврат МассивЗначений;
КонецФункции
//___________________________________________________________________________________________

Функция ВыбратьГруппуБлоков(ИмяГруппыБлоков) 
	//Оперируем в текущем блоке, поэтому стартуем с 
	НачалоТекущегоБлока=НачалоБлока;
	Если ПолучитьКонецБлока(НачалоТекущегоБлока,"{"+Симв(34)+ИмяГруппыБлоков)<>0 Тогда
		//ДобавитьВЛог("Ошибка ВыбратьГруппуБлоков "+ИмяГруппыБлоков);
//		Если Комментарии=3 Тогда
//			ДобавитьВЛог("Не смог получить конец блока...");
//		КонецЕсли;	
		ОбработатьСообщения();
	Возврат -1;
	КонецЕсли
//	ДобавитьВЛог("Начало и конец блока найдены успешно...");
	// Теперь текущим установлен новый блок с размерами НачалоБлока - КонецБлока
	СчетчикГруппыБлоков[ИмяГруппыБлоков]=НачалоБлока+1;
	КонецГруппыБлоков[ИмяГруппыБлоков]=КонецБлока;
	Возврат 0;
КонецФункции 

//___________________________________________________________________________________________
Функция ПолучитьБлок(ИмяГруппыБлоков) 
	Если СчетчикГруппыБлоков[ИмяГруппыБлоков]>=КонецГруппыБлоков[ИмяГруппыБлоков] Тогда
		Возврат -1; // конец группы блоков
	КонецЕсли
	Если ПолучитьКонецБлока(СчетчикГруппыБлоков[ИмяГруппыБлоков],"{"+Симв(34))<>0 Тогда
		Если Комментарии=3 Тогда
			ДобавитьВЛог("Ошибка разбора блока "+ИмяГруппыБлоков);
		КонецЕсли;
		Возврат -2;
	КонецЕсли	
	Если КонецБлока>=КонецГруппыБлоков[ИмяГруппыБлоков] Тогда
		Возврат -3; // нету ни одного блока в группе. Сама группа - фикция
	КонецЕсли
	СчетчикГруппыБлоков[ИмяГруппыБлоков]=КонецБлока+1;
	Возврат 0;
КонецФункции 
//___________________________________________________________________________________________
Функция ВыбратьСправочники() 
	Возврат ВыбратьГруппуБлоков("SbCnts");
КонецФункции 
//___________________________________________________________________________________________
Функция ПолучитьСправочник() 
	Возврат ПолучитьБлок("SbCnts");
КонецФункции 
//___________________________________________________________________________________________
Функция ВыбратьДокументы() 
	Возврат ВыбратьГруппуБлоков("Documents");
КонецФункции 
//___________________________________________________________________________________________
Функция ПолучитьДокумент() 
	Возврат ПолучитьБлок("Documents");
КонецФункции 
//___________________________________________________________________________________________
Функция ТекущийДокумент() 
	Возврат ОтпарситьТекущийБлок(ЗаполнитьСтруктуруДокумента());
КонецФункции 
//___________________________________________________________________________________________
Функция ТекущийОбщийРеквизит() 
	Возврат ОтпарситьТекущийБлок(ЗаполнитьСтруктуруОбщегоРеквизита());
КонецФункции 
//___________________________________________________________________________________________
Функция ТекущийРеквизитШапки() 
	Возврат ОтпарситьТекущийБлок(ЗаполнитьСтруктуруРеквизитаШапкиДокумента());
КонецФункции 
//___________________________________________________________________________________________
Функция ТекущийРеквизитТаблицы() 
	Возврат ОтпарситьТекущийБлок(ЗаполнитьСтруктуруРеквизитаТаблицыДокумента());
КонецФункции 
//___________________________________________________________________________________________
Функция ВыбратьРеквизитыШапки() 
	Возврат ВыбратьГруппуБлоков("Head Fields");
КонецФункции 
//___________________________________________________________________________________________
Функция ПолучитьРеквизитШапки() 
	Возврат ПолучитьБлок("Head Fields");
КонецФункции 

//___________________________________________________________________________________________
Функция ВыбратьРеквизитыТаблицы() 
	Возврат ВыбратьГруппуБлоков("Table Fields");
КонецФункции 
//___________________________________________________________________________________________
Функция ПолучитьРеквизитТаблицы() 
	Возврат ПолучитьБлок("Table Fields");
КонецФункции 

//___________________________________________________________________________________________
Функция ВыбратьОбщиеРеквизиты() 
	Возврат ВыбратьГруппуБлоков("GenJrnlFldDef");
КонецФункции 
//___________________________________________________________________________________________
Функция ПолучитьОбщийРеквизит() 
	Возврат ПолучитьБлок("GenJrnlFldDef");
КонецФункции 
//___________________________________________________________________________________________
Функция ВыбратьНумераторы() 
	Возврат ВыбратьГруппуБлоков("DocNumDef");
КонецФункции 
//___________________________________________________________________________________________
Функция ПолучитьНумератор() 
	Возврат ПолучитьБлок("DocNumDef");
КонецФункции 
//___________________________________________________________________________________________
Функция ТекущийСправочник() 
	Возврат ОтпарситьТекущийБлок(ЗаполнитьСтруктуруСправочника());
КонецФункции 
//___________________________________________________________________________________________
Функция ВыбратьРеквизитыСправочника() 
	Возврат ВыбратьГруппуБлоков("Params");
КонецФункции 
//___________________________________________________________________________________________
Функция ПолучитьРеквизитСправочника() 
	Возврат ПолучитьБлок("Params");
КонецФункции 
//___________________________________________________________________________________________
Функция ТекущийРеквизитСправочника() 
	Возврат ОтпарситьТекущийБлок(ЗаполнитьСтруктуруРеквизитаСправочника());
КонецФункции 
//___________________________________________________________________________________________
Функция ВыбратьРегистры() 
	Возврат ВыбратьГруппуБлоков("Registers");
КонецФункции 
//___________________________________________________________________________________________
Функция ПолучитьРегистр() 
	Возврат ПолучитьБлок("Registers");
КонецФункции 
//___________________________________________________________________________________________
Функция ТекущийРегистр() 
	Возврат ОтпарситьТекущийБлок(ЗаполнитьСтруктуруРегистра());
КонецФункции 
//___________________________________________________________________________________________
Функция ВыбратьИзмеренияРегистра() 
	Возврат ВыбратьГруппуБлоков("Props");
КонецФункции 
//___________________________________________________________________________________________
Функция ПолучитьИзмеренияРегистра() 
	Возврат ПолучитьБлок("Props");
КонецФункции 
//___________________________________________________________________________________________
Функция ТекущееИзмерениеРегистра() 
	Возврат ОтпарситьТекущийБлок(ЗаполнитьСтруктуруИзмеренияРегистра());
КонецФункции 
//___________________________________________________________________________________________
Функция ВыбратьРесурсыРегистра() 
	Возврат ВыбратьГруппуБлоков("Figures");
КонецФункции 
//___________________________________________________________________________________________
Функция ПолучитьРесурсыРегистра() 
	Возврат ПолучитьБлок("Figures");
КонецФункции 
//___________________________________________________________________________________________
Функция ТекущийРесурсРегистра() 
	Возврат ОтпарситьТекущийБлок(ЗаполнитьСтруктуруРесурсаРегистра());
КонецФункции 
//___________________________________________________________________________________________
Функция ВыбратьРеквизитыРегистра() 
	Возврат ВыбратьГруппуБлоков("Flds");
КонецФункции 
//___________________________________________________________________________________________
Функция ПолучитьРеквизитыРегистра() 
	Возврат ПолучитьБлок("Flds");
КонецФункции 
//___________________________________________________________________________________________
Функция ТекущийРеквизитРегистра() 
	Возврат ОтпарситьТекущийБлок(ЗаполнитьСтруктуруРеквизитаРегистра());
КонецФункции 
//___________________________________________________________________________________________
Функция ВыбратьЖурналы() 
	Возврат ВыбратьГруппуБлоков("Journalisters");
КонецФункции 
//___________________________________________________________________________________________
Функция ПолучитьЖурнал() 
	Возврат ПолучитьБлок("Journalisters");
КонецФункции 
//___________________________________________________________________________________________
Функция ТекущийЖурнал() 
	Возврат ОтпарситьТекущийБлок(ЗаполнитьСтруктуруЖурнала());
КонецФункции 

//___________________________________________________________________________________________
Функция ВыбратьКонстанты() 
	Возврат ВыбратьГруппуБлоков("Consts");
КонецФункции 
//___________________________________________________________________________________________
Функция ПолучитьКонстанту() 
	Возврат ПолучитьБлок("Consts");
КонецФункции 
//___________________________________________________________________________________________
Функция ТекущаяКонстанта() 
	Возврат ОтпарситьТекущийБлок(ЗаполнитьСтруктуруКонстанты());
КонецФункции 

//___________________________________________________________________________________________
Функция ВыбратьПеречисления() 
	Возврат ВыбратьГруппуБлоков("EnumList");
КонецФункции 


Функция ВыбратьПланыСчетов() 
	Возврат ВыбратьГруппуБлоков("Plans");
КонецФункции 


Функция ПолучитьПланСчетов() 
	Возврат ПолучитьБлок("Plans");
КонецФункции 

Функция ТекущийПланСчетов() 
	Возврат ОтпарситьТекущийБлок(ЗаполнитьСтруктуруПланаСчетов());
КонецФункции 

//___________________________________________________________________________________________
Функция ПолучитьПеречисление() 
	Возврат ПолучитьБлок("EnumList");
КонецФункции 
//___________________________________________________________________________________________
Функция ТекущееПеречисление() 
	Возврат ОтпарситьТекущийБлок(ЗаполнитьСтруктуруПеречисления());
КонецФункции 

//___________________________________________________________________________________________
Функция ВыбратьЗначенияПеречисления() 
	Возврат ВыбратьГруппуБлоков("EnumVal");
КонецФункции 
//___________________________________________________________________________________________
Функция ПолучитьЗначениеПеречисления() 
	Возврат ПолучитьБлок("EnumVal");
КонецФункции 
//___________________________________________________________________________________________
Функция ТекущееЗначениеПеречисления() 
	Возврат ОтпарситьТекущийБлок(ЗаполнитьСтруктуруЗначенияПеречисления());
КонецФункции 


//___________________________________________________________________________________________
//Buh
//AccParams
//Plans
//Accounts
//AccSbCnts


Функция ПолучитьТекущийБлок() 
	Ответ=СоздатьОбъект("Массив");
	Ответ["НачалоБлока"]=НачалоБлока;
	Ответ["КонецБлока"]=КонецБлока;
	Возврат Ответ;
КонецФункции //

Процедура УстановитьТекущийБлок(Блок) 
	НачалоБлока=Блок["НачалоБлока"];
	КонецБлока=Блок["КонецБлока"];
КонецПроцедуры//


Процедура ПостроениеСтруктурыТипизации()
	//Тип.       "S" - Строка, "N" - число, 
	//           "U" - неопределенный, "D" - дата, "B" - справочник,
	//           "O" - документ, "T" - счет
	//    	   	 "P" - план счетов, "K" - ВидСубконто
	//    	     "C" - календарь, "A" - ВидРасчета     
	//			 "E" - перечисление   
	//ИдентификаторВида (расширение типа)
	СтруктураТипизации=СоздатьОбъект("Массив");
	//	ИмяВ2С, ИдентификаторВ1С, ИмяВ1С
	СтруктураТипизации["Строка"]="S0";							// Строка
	СтруктураТипизации["Число"]="N0";							// число
	СтруктураТипизации["Неопределенный"]="U0";					// неопределенный 
	СтруктураТипизации["Дата"]="D0";							// дата
	СтруктураТипизации["Справочник"]="B0";						// справочник
	СтруктураТипизации["Документ"]="O0";						// документ
	СтруктураТипизации["Справочник.БухгалтерскиеСчета"]="T0";	// счет
	СтруктураТипизации["Справочник.ПланыСчетов"]="P0";			// план счетов
	СтруктураТипизации["Справочник.Субконто"]="K0";				// ВидСубконто
	СтруктураТипизации["Документ.Календарь"]="C0";				// Календарь
	СтруктураТипизации["Документ.ВидРасчета"]="A0";				// ВидРасчета
	СтруктураТипизации["Перечисление"]="E0";					// перечисление
	
	// построим таблицу справочников
	ОсновнойБлок=ПолучитьТекущийБлок(); // Считается что текущий это весь блок
	Если ВыбратьСправочники()<0 Тогда
		ДобавитьВЛог("Ошибка. Не удалось выбрать справочники.");
		Возврат;
	КонецЕсли
	Пока ПолучитьСправочник()=0 Цикл
		Справочник=ТекущийСправочник();
		ИмяСправочника=Справочник["ИмяСправочника"];
		ИД=Справочник["ИдентификаторСправочника"];
		СтруктураТипизации["Справочник."+ИмяСправочника]="B"+ИД;
		Состояние("Структура типизации Справочники."+ИмяСправочника);
	КонецЦикла
	УстановитьТекущийБлок(ОсновнойБлок);	// вернем назад позицию
	
	// построим таблицу документов
	ОсновнойБлок=ПолучитьТекущийБлок(); // Считается что текущий это весь блок
	Если ВыбратьДокументы()<0 Тогда
		ДобавитьВЛог("Ошибка. Не удалось выбрать документы.");
		Возврат;
	КонецЕсли
	Пока ПолучитьДокумент()=0 Цикл
		Документ=ТекущийДокумент();
		ИмяДокумента=Документ["ИмяДокумента"];
		ИД=Документ["ИдентификаторДокумента"];
		СтруктураТипизации["Документ."+ИмяДокумента]="O"+ИД;
		Состояние("Структура типизации Документ."+ИмяДокумента);
	КонецЦикла
	УстановитьТекущийБлок(ОсновнойБлок);	// вернем назад позицию
	
	// построим таблицу перечислений
	ОсновнойБлок=ПолучитьТекущийБлок(); // Считается что текущий это весь блок
	Если ВыбратьПеречисления()<0 Тогда
		ДобавитьВЛог("Ошибка. Не удалось выбрать перечисления.");
		Возврат;
	КонецЕсли
	Пока ПолучитьПеречисление()=0 Цикл
		ТекПеречисление=ТекущееПеречисление();
		ИмяПеречисления=ТекПеречисление["ИмяПеречисления"];
		ИД=ТекПеречисление["ИдентификаторПеречисления"];
		СтруктураТипизации["Перечисление."+ИмяПеречисления]="E"+ИД;
		Состояние("Структура типизации Перечисление."+ИмяПеречисления);
	КонецЦикла
	УстановитьТекущийБлок(ОсновнойБлок);	// вернем назад позицию
	
	//построим таблицу планов счетов	
	Если ВыбратьПланыСчетов()<0 Тогда
		ПрисоединитьВЛог("Ошибка");
		ДобавитьВЛог("Ошибка. Не удалось выбрать планы счетов");
		Возврат;
	КонецЕсли
	
	Пока ПолучитьПланСчетов()=0 Цикл
		ТекПС=ТекущийПланСчетов();
		Имя=ТекПС["Имя"];
		Синоним=ТекПС["Синоним"];
		ИД=ТекПС["Идентификатор"];
		
		СтруктураТипизации["Планы счетов."+Имя]="T"+ИД;
		Состояние("Структура типизации План счетов."+Имя);
	КонецЦикла
	УстановитьТекущийБлок(ОсновнойБлок);	// вернем назад позицию
КонецПроцедуры

Функция КонвертироватьТип(Тип,ИдентификаторВида);
	СтрокаТипа=СтруктураТипизации.НайтиЗначение(СокрЛП(Тип)+СокрЛП(ИдентификаторВида));
	//ДобавитьВЛог("Для "+СокрЛП(Тип)+"::"+СокрЛП(ИдентификаторВида)+" типом ["+СтрокаТипа+"]");
	Если СокрЛП(СтрокаТипа)="" Тогда
		ДобавитьВЛог(Вывод+" не могу конвертировать тип "+
		СокрЛП(Тип)+"::"+СокрЛП(ИдентификаторВида)+" ");
		Возврат 0;
	КонецЕсли
	Если СтрокаТипа="Неопределенный" Тогда
		СтрокаТипа="";
	КонецЕсли
	Возврат СтрокаТипа;
КонецФункции

// --------------------------------------------
// --------------------------------------------
// --------------------------------------------
// --------------------------------------------
// Модуль Конвертера 1С:77 в 2С
// --------------------------------------------
// --------------------------------------------
// --------------------------------------------
// --------------------------------------------

Процедура ВывестиМассив(Мас,Префикс="") 
	//Мас:Структура
	Для А=1 По РазмерСтруктуры(Мас) Цикл
		Имя=Мас.ИдентификаторПоНомеру(А);
		Мас2=Мас[Имя];
		ТекПрефикс=Префикс+"["+Имя+"]";
		Если ТипЗначения(Мас2)=5 Тогда
			ВывестиМассив(Мас2,ТекПрефикс);
		Иначе
			ДобавитьВЛог(ТекПрефикс+"="+Мас[Имя]);
		КонецЕсли
	КонецЦикла
	Для А=1 По РазмерМассива(Мас) Цикл
		Имя=А;
		Мас2=Мас[Имя];
		ТекПрефикс=Префикс+"["+Имя+"]";
		Если ТипЗначения(Мас2)=5 Тогда
			ВывестиМассив(Мас2,ТекПрефикс);
		Иначе
			ДобавитьВЛог(ТекПрефикс+"="+Мас[Имя]);
		КонецЕсли
	КонецЦикла
КонецПроцедуры

Процедура ЗаписатьРеквизит(Файл,Путь,ИмяСправочника,ИмяРеквизита,ТипРевизита,Длина,Точность) 
	// создаем Код.atr 
	Массив=СоздатьОбъект("Массив");
	Массив["Тип"]=ТипРевизита;
	Если Сред(ТипРевизита,1,10)="Справочник" Тогда
		Массив["ChildImage"]=219;
	Иначе
		Массив["Длина"]=Длина;
		Массив["Точность"]=Точность;
	КонецЕсли;
	Массив["Edit"]=1;
	Массив["Type"]=1;
	Файл.ЗаписатьОбъект(Путь+ИмяСправочника+"/Реквизиты/"+ИмяРеквизита+".atr",Массив);
	
	// создаем Код.inf 
	Массив=СоздатьОбъект("Массив");
	Массив["Alias"]="";
	Массив["Edit"]=1;
	Массив["Enable"]=1;
	Массив["Group"]=0;
	Если Сред(ТипРевизита,1,10)="Справочник" Тогда
		Массив["ChildImage"]=0;
		Массив["Image"]=215;
	Иначе
		Массив["Image"]=219;
		Массив["ChildImage"]=219;
	КонецЕсли;
	Массив["Comment"]="";
	Массив["Type"]=1;
	Массив["Name"]=ИмяРеквизита;
	Массив["Param1"]="";
	Файл.ЗаписатьОбъект(Путь+ИмяСправочника+"/Реквизиты/"+ИмяРеквизита+".inf",Массив);
КонецПроцедуры

Функция ВернутьИнфФайл(Alias,Edit,Enable,Group,ChildImage,Image,Comment,Type,Name,Param1) 
	Массив=СоздатьОбъект("Массив");
	Массив["Alias"]=Alias;
	Массив["Edit"]=Edit;
	Массив["Enable"]=Enable;
	Массив["Group"]=Group;
	Массив["ChildImage"]=ChildImage;
	Массив["Image"]=Image;
	Массив["Comment"]=Comment;
	Массив["Type"]=Type;
	Массив["Name"]=Name;
	Массив["Param1"]=Param1;
	Возврат Массив;
КонецФункции

Процедура СоздатьСправочник(ИмяСправочника,ТекстМодуляСпискаЭлементов,ТекстМодуляФормыГруппы,
							ТекстМодуляФормыДиалога,МассивРеквизитов,
	ФормаДиалогаСправочника,ФормаГруппыСправочника,ФормаСпискаЭлементов) 
//	Путь="md:/Метаданные/Справочник/";
//	Файл=СоздатьОбъект("ФайлМетаданных");
	
	Путь="Метаданные/Справочник/";
	
	  // СоздатьИнформационныйФайлСправочника
	Массив=СоздатьОбъект("Массив");
	Массив["Alias"]="";
	Массив["Edit"]=1;
	Массив["Enable"]=1;
	Массив["Group"]=0;
	Массив["ChildImage"]=219;
	Массив["Image"]=226;
	Массив["Comment"]="";
	Массив["Type"]=0;
	Массив["Name"]=ИмяСправочника;
	Массив["Param1"]="";
	Файл.ЗаписатьОбъект(Путь+ИмяСправочника+".inf",Массив);
	
	Файл.ЗаписатьТекст(Путь+ИмяСправочника+"/Список элементов",ТекстМодуляСпискаЭлементов);
		   
	Файл.ЗаписатьТекст(Путь+ИмяСправочника+"/Форма группы",ТекстМодуляФормыГруппы);

	Файл.ЗаписатьТекст(Путь+ИмяСправочника+"/Форма диалога",ТекстМодуляФормыДиалога);
	
	Файл.ЗаписатьОбъект(Путь+ИмяСправочника+"/Список элементов.frm",ФормаСпискаЭлементов);
	
	Файл.ЗаписатьОбъект(Путь+ИмяСправочника+"/Форма группы.frm",ФормаГруппыСправочника);
	
	Файл.ЗаписатьОбъект(Путь+ИмяСправочника+"/Форма диалога.frm",ФормаДиалогаСправочника);
	
	// создаем Реквизиты.inf 
	Массив=СоздатьОбъект("Массив");
	Массив["Alias"]="";
	Массив["Edit"]=1;
	Массив["Enable"]=1;
	Массив["Group"]=1;
	Массив["ChildImage"]=219;
	Массив["Image"]=213;
	Массив["Comment"]="";
	Массив["Type"]=1;
	Массив["Name"]="Реквизиты";
	Массив["Param1"]="";
	Файл.ЗаписатьОбъект(Путь+ИмяСправочника+"/Реквизиты.inf",Массив);
	
	// создаем Список элементов.inf
	Массив=СоздатьОбъект("Массив");
	Массив["Alias"]="";
	Массив["Edit"]=0;
	Массив["Enable"]=1;
	Массив["Group"]=0;
	Массив["ChildImage"]=0;
	Массив["Image"]=602;
	Массив["Comment"]="";
	Массив["Type"]=3;
	Массив["Name"]="Список элементов";
	Массив["Param1"]="";
	Файл.ЗаписатьОбъект(Путь+ИмяСправочника+"/Список элементов.inf",Массив);
		
	// создаем Таблицы.inf
	Массив=СоздатьОбъект("Массив");
	Массив["Alias"]="";
	Массив["Edit"]=0;
	Массив["Enable"]=0;
	Массив["Group"]=1;
	Массив["ChildImage"]=79;
	Массив["Image"]=318;
	Массив["Comment"]="";
	Массив["Type"]=4;
	Массив["Name"]="Таблицы";
	Массив["Param1"]="";
	Файл.ЗаписатьОбъект(Путь+ИмяСправочника+"/Таблицы.inf",Массив);
	
	// создаем Форма группы.inf
	Массив=СоздатьОбъект("Массив");
	Массив["Alias"]="";
	Массив["Edit"]=0;
	Массив["Enable"]=1;
	Массив["Group"]=0;
	Массив["ChildImage"]=0;
	Массив["Image"]=604;
	Массив["Comment"]="";
	Массив["Type"]=3;
	Массив["Name"]="Форма группы";
	Массив["Param1"]="";
	Файл.ЗаписатьОбъект(Путь+ИмяСправочника+"/Форма группы.inf",Массив);

	// создаем Форма диалога.inf
	Массив=СоздатьОбъект("Массив");
	Массив["Alias"]="";
	Массив["Edit"]=0;
	Массив["Enable"]=1;
	Массив["Group"]=0;
	Массив["ChildImage"]=0;
	Массив["Image"]=603;
	Массив["Comment"]="";
	Массив["Type"]=3;
	Массив["Name"]="Форма диалога";
	Массив["Param1"]="";
	Файл.ЗаписатьОбъект(Путь+ИмяСправочника+"/Форма диалога.inf",Массив);

//======================================================================================
//======================================================================================
//======================================================================================
// Реквизиты
//	Базовые: 
	ЗаписатьРеквизит(Файл,Путь,ИмяСправочника,"Код","Число",10,0);
	ЗаписатьРеквизит(Файл,Путь,ИмяСправочника,"Наименование","Строка",50,0);
	ЗаписатьРеквизит(Файл,Путь,ИмяСправочника,"Владелец","Справочник",0,0);
	ЗаписатьРеквизит(Файл,Путь,ИмяСправочника,"Родитель","Справочник",0,0);
	
//	ДобавитьВЛог("Всего реквизитов "+РазмерМассива(МассивРеквизитов));

	Для Счетчик=1 По РазмерМассива(МассивРеквизитов) Цикл
		Массив=МассивРеквизитов[Счетчик];
		ЗаписатьРеквизит(Файл,Путь,ИмяСправочника,
		Массив["ИмяРевизита"],
		Массив["ТипРеквизита"],
		Массив["ДлинаРеквизита"],
		Массив["ТочностьРеквизита"]);
	КонецЦикла
КонецПроцедуры//СоздатьСправочник

Функция ВернутьИнфРеквизита(ИмяРеквизита,ТипРевизита,Длина,Точность) 
	Если Сред(ТипРевизита,1,10)="Справочник" Тогда
		Массив=ВернутьИнфФайл("",1,1,0,0,215,"",1,ИмяРеквизита,"");
	Иначе
		Массив=ВернутьИнфФайл("",1,1,0,219,219,"",1,ИмяРеквизита,"");
	КонецЕсли
	Возврат Массив;
КонецФункции

Функция ВернутьАтрРеквизита(ИмяРеквизита,ТипРевизита,Длина,Точность) 
	Массив=СоздатьОбъект("Массив");
	Массив["Тип"]=ТипРевизита;
	Если Сред(ТипРевизита,1,10)="Справочник" Тогда
		Массив["ChildImage"]=219;
	Иначе
		Массив["Длина"]=Длина;
		Массив["Точность"]=Точность;
	КонецЕсли;
	Массив["Edit"]=1;
	Массив["Type"]=1;
	Возврат Массив;
КонецФункции

Функция ЗаполнитьКонстанту() // в 2с
	Массив=СоздатьОбъект("Массив");
	Массив["ИмяКонстанты"]=""; // он же Идентификатор
	Массив["Синоним"]="";
	Массив["Комментарий"]="";
	Массив["Использование"]=0;
	Массив["ТипЭлемента"]="";
	Массив["Длина"]=0;
	Массив["Точность"]=0;
	Возврат Массив;
КонецФункции

Функция ЗаполнитьПеречисление() // в 2с
	Массив=СоздатьОбъект("Массив");
	Массив["ИмяПеречисления"]=""; // он же Идентификатор
	Массив["Синоним"]="";
	Массив["Комментарий"]="";
	Массив["Использование"]=0;
	Массив["ЗначенияПеречисления"]=""; // массив значений перечисления
	Возврат Массив;
КонецФункции

Функция ЗаполнитьЗначениеПеречисления() // в 2с
	Массив=СоздатьОбъект("Массив");
	Массив["ИмяЗначенияПеречисления"]=""; // он же Идентификатор
	Массив["Синоним"]="";
	Массив["Комментарий"]="";
	Массив["Использование"]=0;
	Возврат Массив;
КонецФункции

Процедура СоздатьКонстанту(МассивКонстанты)
//Формат метаданных константы в 2С (на 04.07.04) (с) reminder

//Константа/ на каждую константу НаименованиеОрганизации.atr
//	[Тип]=Справочник.Контрагенты
//	[Edit]=1
//	[Type]=1
//Константа/ на каждую константу НаименованиеОрганизации.inf 
//[Alias]=Наименование организации
//[Enable]=1
//[Edit]=1
//[Group]=0
//[ChildImage]=0
//[Image]=219
//[Comment]=
//[Type]=1
//[Name]=НаименованиеОрганизации
//[Param1]=
//	Путь="md:/Метаданные/Константа/";
//	Файл=СоздатьОбъект("ФайлМетаданных");

	Путь="Метаданные/Константа/";
	
	ИмяКонстанты=МассивКонстанты["ИмяКонстанты"];	
				
	ИнфКонстанты=СоздатьОбъект("Массив");
	ИнфКонстанты["Alias"]=МассивКонстанты["Синоним"];
	ИнфКонстанты["Edit"]=1;
	ИнфКонстанты["Enable"]=МассивКонстанты["Использование"];
	ИнфКонстанты["Group"]=0;
	ИнфКонстанты["ChildImage"]=0;
	ИнфКонстанты["Image"]=219;
	ИнфКонстанты["Comment"]=МассивКонстанты["Комментарий"];
	ИнфКонстанты["Type"]=1;
	ИнфКонстанты["Name"]=ИмяКонстанты
	ИнфКонстанты["Param1"]="";
	ИнфКонстанты["NameDB"]="";
	ИнфКонстанты["Folder"]=0;

	Файл.ЗаписатьОбъект(Путь+ИмяКонстанты+".inf",ИнфКонстанты);
	
	АтрКонстанты=СоздатьОбъект("Массив");
	АтрКонстанты["Тип"]=МассивКонстанты["ТипЭлемента"];
	АтрКонстанты["Edit"]=1;
	АтрКонстанты["Type"]=1;
	АтрКонстанты["Длина"]=МассивКонстанты["Длина"];
	АтрКонстанты["Точность"]=МассивКонстанты["Точность"];
	Файл.ЗаписатьОбъект(Путь+ИмяКонстанты+".atr",АтрКонстанты);

КонецПроцедуры


Процедура СоздатьПеречисление(МассивПеречисления)
//Формат метаданных перечисления в 2С (на 04.07.04) (с) reminder

//Перечисление/ на каждое перечисление ТипыНоменклатуры.inf
//[Alias]=
//[Edit]=1
//[Enable]=1
//[Group]=1
//[ChildImage]=219
//[Image]=600
//[Comment]=
//[Type]=0
//[Name]=ТипыНоменклатуры
//[Param1]=

//Перечисление/ТипыНоменклатуры/ на каждое значение перечисления Продукция.inf, Товар.inf, etc
//[Alias]=
//[Enable]=1
//[Edit]=1
//[Group]=0
//[Image]=219
//[ChildImage]=0
//[Comment]=
//[Type]=0
//[Name]=Продукция
//[Param1]=

//	Путь="md:/Метаданные/Перечисление/";
//	Файл=СоздатьОбъект("ФайлМетаданных");

	Путь="Метаданные/Перечисление/";
	
	ИмяПеречисления=МассивПеречисления["ИмяПеречисления"];	
				
	ИнфПеречисления=СоздатьОбъект("Массив");
	ИнфПеречисления["Alias"]=МассивПеречисления["Синоним"];
	ИнфПеречисления["Edit"]=1;
	ИнфПеречисления["Enable"]=МассивПеречисления["Использование"];
	ИнфПеречисления["Group"]=1;
	ИнфПеречисления["ChildImage"]=219;
	ИнфПеречисления["Image"]=600;
	ИнфПеречисления["Comment"]=МассивПеречисления["Комментарий"];
	ИнфПеречисления["Type"]=0;
	ИнфПеречисления["Name"]=ИмяПеречисления;
	ИнфПеречисления["Param1"]="";
	Файл.ЗаписатьОбъект(Путь+ИмяПеречисления+".inf",ИнфПеречисления);
	
	ЗначенияПеречисления=МассивПеречисления["ЗначенияПеречисления"];
	Для Счетчик=1 По ЗначенияПеречисления.РазмерМассива() Цикл
		ЗначениеПеречисления=ЗначенияПеречисления[Счетчик];
		ИмяЗначенияПеречисления=ЗначениеПеречисления["ИмяЗначенияПеречисления"];
		Массив=СоздатьОбъект("Массив");
		Массив["Alias"]=ЗначениеПеречисления["Синоним"];
		Массив["Edit"]=1;
		Массив["Enable"]=ЗначениеПеречисления["Использование"];
		Массив["Group"]=1;
		Массив["ChildImage"]=219;
		Массив["Image"]=600;
		Массив["Comment"]=ЗначениеПеречисления["Комментарий"];
		Массив["Type"]=0;
		Массив["Name"]=ИмяЗначенияПеречисления;
		Массив["Param1"]="";
		Файл.ЗаписатьОбъект(Путь+ИмяПеречисления+"/"+
		ИмяЗначенияПеречисления+".inf",Массив);
	КонецЦикла;
	
КонецПроцедуры

Процедура СоздатьПланСчетов(МассивПС)
//Формат метаданных плана счетов в 2С (на 16.10.04) (с) gre

//Константа/ на каждую константу НаименованиеОрганизации.atr
//	[Тип]=Справочник.Контрагенты
//	[Edit]=1
//	[Type]=1
//Константа/ на каждую константу НаименованиеОрганизации.inf 
//[Alias]=Наименование организации
//[Enable]=1
//[Edit]=1
//[Group]=0
//[ChildImage]=0
//[Image]=219
//[Comment]=
//[Type]=1
//[Name]=НаименованиеОрганизации
//[Param1]=
//	Путь="md:/Метаданные/Константа/";
//	Файл=СоздатьОбъект("ФайлМетаданных");

	Путь="Метаданные/Планы счетов/";
	
	ИмяПС=МассивПС["Имя"];	
				
	ИнфПС=СоздатьОбъект("Массив");
	ИнфПС["Alias"]=МассивПС["Синоним"];
	ИнфПС["Edit"]=1;
	ИнфПС["Enable"]=МассивПС["Использование"];
	ИнфПС["Group"]=0;
	ИнфПС["ChildImage"]=0;
	ИнфПС["Image"]=106;
	ИнфПС["Comment"]=МассивПС["Комментарий"];
	ИнфПС["Type"]=1;
	ИнфПС["Name"]=ИмяПС;
	ИнфПС["Param1"]="";
	ИнфПС["NameDB"]="";
	ИнфПС["Folder"]=0;

	Файл.ЗаписатьОбъект(Путь+ИмяПС+".inf",ИнфПС);
	
	АтрПС=СоздатьОбъект("Массив");
	АтрПС["Шаблон"]=МассивПС["Шаблон"];
//	АтрПС["Тип"]=МассивПС["ТипЭлемента"];
	АтрПС["Edit"]=1;
	АтрПС["Type"]=1;
//	АтрПС["Длина"]=МассивПС["Длина"];
//	АтрПС["Точность"]=МассивПС["Точность"];
	Файл.ЗаписатьОбъект(Путь+ИмяПС+".atr",АтрПС);

КонецПроцедуры


Процедура СоздатьДокумент(ИмяДокумента,
							ТекстМодуляФормыДиалога,ТекстМодуляСпискаЭлементов,ТекстМодуляПроведения,
							ФормаДиалога,ФормаСпискаЭлементов,МассивПечатныхМакетов,
							МассивРеквизитовШапки,МассивРеквизитовТаблицы) 

//Формат метаданных документа в 2С (на 21.06.04) (с) reminder
//
//Записать в md:/Метаданные/Документ 
//
//ПриходнаяНакладная.inf в корне
//  [Alias]=
//  [Enable]=1
//	[Edit]=1
//	[Group]=0
//	[ChildImage]=219
//	[Image]=216
//	[Comment]=
//	[Type]=0
//	[Name]=ПриходнаяНакладная
//	[Param1]=
//ПриходнаяНакладная/
//	Каталог
//ПриходнаяНакладная/Реквизиты/
//	Каталог
//ПриходнаяНакладная/Таблицы/
//	Каталог
//ПриходнаяНакладная/Табличная часть/
//	Каталог
//ПриходнаяНакладная/Модуль проведения 
//	Текст
//ПриходнаяНакладная/Список элементов
//	Текст
//ПриходнаяНакладная/Форма диалога   
//	Текст
//ПриходнаяНакладная/Список элементов.frm 
//	Форма
//ПриходнаяНакладная/Форма диалога.frm 
//	Форма
//ПриходнаяНакладная/Модуль проведения.inf 
//	[Alias]=
//	[Edit]=0
//	[Enable]=1
//	[Group]=0
//	[ChildImage]=0
//	[Image]=601
//	[Comment]=
//	[Type]=2
//	[Name]=Модуль проведения
//	[Param1]=
//ПриходнаяНакладная/Реквизиты.inf
//	[Alias]=
//	[Enable]=1
//	[Edit]=1
//	[Group]=1
//	[Image]=217
//	[ChildImage]=219
//	[Comment]=
//	[Type]=1
//	[Name]=Реквизиты
//	[Param1]=
//ПриходнаяНакладная/Список элементов.inf 
//	[Alias]=
//	[Enable]=1
//	[Edit]=0
//	[Group]=0
//	[Image]=602
//	[ChildImage]=0
//	[Comment]=//123
//	[Type]=3
//	[Name]=Список элементов
//	[Param1]=
//ПриходнаяНакладная/Таблицы.inf     
//	[Alias]=
//	[Edit]=0
//	[Enable]=1
//	[Group]=1
//	[ChildImage]=79
//	[Image]=318
//	[Comment]=
//	[Type]=4
//	[Name]=Таблицы
//	[Param1]=
//ПриходнаяНакладная/Табличная часть.inf
//	[Alias]=
//	[Enable]=1
//	[Edit]=1
//	[Group]=1
//	[Image]=218
//	[ChildImage]=219
//	[Comment]=
//	[Type]=1
//	[Name]=Табличная часть
//	[Param1]=
//ПриходнаяНакладная/Форма диалога.inf
//	[Alias]=
//	[Edit]=0
//	[Enable]=1
//	[Group]=0
//	[ChildImage]=0
//	[Image]=603
//	[Comment]=
//	[Type]=3
//	[Name]=Форма диалога
//	[Param1]=
//ПриходнаяНакладная/Реквизиты/ на каждый реквизит Реквизит.atr
//	[Тип]=Справочник.Контрагенты
//	[Edit]=1
//	[Type]=1
//ПриходнаяНакладная/Реквизиты/ на каждый реквизит Реквизит.inf 
//	[Alias]=Контрагент
//	[Enable]=1
//	[Edit]=1
//	[Group]=0
//	[Image]=219
//	[ChildImage]=0
//	[Comment]=
//	[Type]=1
//	[Name]=Контрагент
//	[Param1]=
//ПриходнаяНакладная/Таблицы/Таблица
//	MYMXL2
//ПриходнаяНакладная/Таблицы/Таблица.inf
//	[Alias]=
//	[Enable]=1
//	[Edit]=1
//	[Group]=0
//	[Image]=79
//	[ChildImage]=0
//	[Comment]=
//	[Type]=4
//	[Name]=Таблица
//	[Param1]=
//ПриходнаяНакладная/Табличная часть/ на каждый реквизит Реквизит.atr
//	[Тип]=Число
//	[Длина]=17
//	[Точность]=3
//	[Edit]=1
//	[Type]=1
//ПриходнаяНакладная/Табличная часть/ на каждый реквизит Реквизит.inf 
//	[Alias]=
//	[Edit]=1
//	[Enable]=1
//	[Group]=0
//	[ChildImage]=0
//	[Image]=219
//	[Comment]=
//	[Type]=1
//	[Name]=Количество
//	[Param1]=

//	Путь="md:/Метаданные/Документ/";
//	Файл=СоздатьОбъект("ФайлМетаданных");

	Путь="Метаданные/Документ/";
	
	  // СоздатьИнформационныйФайлДокумента
	Массив=ВернутьИнфФайл("",1,1,0,219,226,"",0,ИмяДокумента,"");
	Файл.ЗаписатьОбъект(Путь+ИмяДокумента+".inf",Массив);

		// создаем модуль формы диалога
	Файл.ЗаписатьТекст(Путь+ИмяДокумента+"/Форма диалога",ТекстМодуляФормыДиалога);

		// создаем модуль списка элементов
	Файл.ЗаписатьТекст(Путь+ИмяДокумента+"/Список элементов",ТекстМодуляСпискаЭлементов);

		// создаем модуль проведения
	Файл.ЗаписатьТекст(Путь+ИмяДокумента+"/Модуль проведения",ТекстМодуляПроведения);

	// создаем форму диалога
	Файл.ЗаписатьОбъект(Путь+ИмяДокумента+"/Форма диалога.frm",ФормаДиалога);

	// создаем форму списка элементов
	Файл.ЗаписатьОбъект(Путь+ИмяДокумента+"/Список элементов.frm",ФормаСпискаЭлементов);
	
	  // Модуль проведения.inf
	Массив=ВернутьИнфФайл("",0,1,0,0,601,"",2,"Модуль проведения","");
	Файл.ЗаписатьОбъект(Путь+ИмяДокумента+"/Модуль проведения.inf",Массив);

      // Реквизиты.inf
	Массив=ВернутьИнфФайл("",1,1,1,217,219,"",1,"Реквизиты","");
	Файл.ЗаписатьОбъект(Путь+ИмяДокумента+"/Модуль проведения.inf",Массив);

      // Список элементов.inf
	Массив=ВернутьИнфФайл("",1,0,0,602,0,"//123",3,"Список элементов","");
	Файл.ЗаписатьОбъект(Путь+ИмяДокумента+"/Список элементов.inf",Массив);

      // Таблицы.inf
	Массив=ВернутьИнфФайл("",0,1,1,79,318,"",4,"Таблицы","");
	Файл.ЗаписатьОбъект(Путь+ИмяДокумента+"/Таблицы.inf",Массив);

      // Табличная часть.inf
	Массив=ВернутьИнфФайл("",1,1,1,218,219,"",1,"Табличная часть","");
	Файл.ЗаписатьОбъект(Путь+ИмяДокумента+"/Табличная часть.inf",Массив);

       // Форма диалога.inf
	Массив=ВернутьИнфФайл("",0,1,0,0,603,"",3,"Форма диалога","");
	Файл.ЗаписатьОбъект(Путь+ИмяДокумента+"/Табличная часть.inf",Массив);
	
	//Ревизиты Шапки
	//	Базовые: 
	ИнформационныйРеквизита=ВернутьИнфРеквизита("ДатаДок","Дата",10,0);
	Файл.ЗаписатьОбъект(Путь+ИмяДокумента+"/Реквизиты/ДатаДок.inf",ИнформационныйРеквизита);
	АтрРеквизита=ВернутьАтрРеквизита("ДатаДок","Дата",10,0);
	Файл.ЗаписатьОбъект(Путь+ИмяДокумента+"/Реквизиты/ДатаДок.atr",АтрРеквизита);
	
	ИнформационныйРеквизита=ВернутьИнфРеквизита("НомерДок","Строка",50,0);
	Файл.ЗаписатьОбъект(Путь+ИмяДокумента+"/Реквизиты/НомерДок.inf",ИнформационныйРеквизита);
	АтрРеквизита=ВернутьАтрРеквизита("НомерДок","Строка",50,0);
	Файл.ЗаписатьОбъект(Путь+ИмяДокумента+"/Реквизиты/НомерДок.atr",АтрРеквизита);
	
	//	ДобавитьВЛог("Всего реквизитов шапки "+РазмерМассива(МассивРеквизитовШапки));

	Для Счетчик=1 По РазмерМассива(МассивРеквизитовШапки) Цикл
		Массив=МассивРеквизитовШапки[Счетчик];
		ИнформационныйРеквизита=ВернутьИнфРеквизита(
		Массив["ИмяРевизита"],
		Массив["ТипРеквизита"],
		Массив["ДлинаРеквизита"],
		Массив["ТочностьРеквизита"]);
		Файл.ЗаписатьОбъект(Путь+ИмяДокумента+"/Реквизиты/"+Массив["ИмяРевизита"]+".inf",ИнформационныйРеквизита);

		АтрРеквизита=ВернутьАтрРеквизита(
		Массив["ИмяРевизита"],
		Массив["ТипРеквизита"],
		Массив["ДлинаРеквизита"],
		Массив["ТочностьРеквизита"]);
		Файл.ЗаписатьОбъект(Путь+ИмяДокумента+"/Реквизиты/"+Массив["ИмяРевизита"]+".atr",АтрРеквизита);	
	КонецЦикла

	//Ревизиты Таблицы
	//	Базовые: 
	// нету
		
	//	ДобавитьВЛог("Всего реквизитов таблицы "+РазмерМассива(МассивРеквизитовТаблицы));

	Для Счетчик=1 По РазмерМассива(МассивРеквизитовТаблицы) Цикл
		Массив=МассивРеквизитовТаблицы[Счетчик];
		ИнформационныйРеквизита=ВернутьИнфРеквизита(
		Массив["ИмяРевизита"],
		Массив["ТипРеквизита"],
		Массив["ДлинаРеквизита"],
		Массив["ТочностьРеквизита"]);
		Файл.ЗаписатьОбъект(Путь+ИмяДокумента+"/Табличная часть/"+Массив["ИмяРевизита"]+".inf",ИнформационныйРеквизита);

		АтрРеквизита=ВернутьАтрРеквизита(
		Массив["ИмяРевизита"],
		Массив["ТипРеквизита"],
		Массив["ДлинаРеквизита"],
		Массив["ТочностьРеквизита"]);
		Файл.ЗаписатьОбъект(Путь+ИмяДокумента+"/Табличная часть/"+Массив["ИмяРевизита"]+".atr",АтрРеквизита);	
	КонецЦикла

	// Печатные Макеты :: Таблицы 
	Для Счетчик=1 По РазмерМассива(МассивПечатныхМакетов) Цикл
		МакетныйМассив=МассивПечатныхМакетов[Счетчик];
		Макет=МакетныйМассив["Макет"];
		ИмяМакета=МакетныйМассив["ИмяМакета"];
		
		Массив=ВернутьИнфФайл("",1,1,0,79,0,"",4,ИмяМакета,"");
		Файл.ЗаписатьОбъект(Путь+ИмяДокумента+"/Таблицы/"+ИмяМакета+".inf",Массив);
		
		Файл.ЗаписатьОбъект(Путь+ИмяДокумента+"/Таблицы/"+ИмяМакета,Макет);
	КонецЦикла		
КонецПроцедуры

Процедура СоздатьРегистр(МассивРегистра)
//Формат метаданных регистра в 2С (на 05.07.04) (с) reminder
//
// =======================================================
// md:/Метаданные/Регистр/ОстаткиТоваров.inf
//[Alias]=Остатки товаров
//[Edit]=1
//[Enable]=1
//[Group]=0
//[ChildImage]=219
//[Image]=210
//[Comment]=
//[Type]=0
//[Name]=ОстаткиТоваров
//[Param1]=
//// =======================================================
//// md:/Метаданные/Регистр/ОстаткиТоваров/Список элементов.inf
//[Alias]=
//[Enable]=1
//[Edit]=0
//[Group]=0
//[Image]=294
//[ChildImage]=0
//[Comment]=
//[Type]=3
//[Name]=Список элементов
//[Param1]=
//// =======================================================
//// md:/Метаданные/Регистр/ОстаткиТоваров/Измерения.inf
//[Alias]=
//[Edit]=1
//[Enable]=1
//[Group]=1
//[ChildImage]=219
//[Image]=227
//[Comment]=
//[Type]=1
//[Name]=Измерения
//[Param1]=
//// =======================================================
//// md:/Метаданные/Регистр/ОстаткиТоваров/Реквизиты.inf
//[Alias]=
//[Enable]=1
//[Edit]=1
//[Group]=1
//[Image]=213
//[ChildImage]=219
//[Comment]=
//[Type]=1
//[Name]=Реквизиты
//[Param1]=
//// =======================================================
//// md:/Метаданные/Регистр/ОстаткиТоваров/Ресурсы.inf
//[Alias]=
//[Edit]=1
//[Enable]=1
//[Group]=1
//[ChildImage]=219
//[Image]=228
//[Comment]=
//[Type]=1
//[Name]=Ресурсы
//[Param1]=
//// =======================================================
//// md:/Метаданные/Регистр/ОстаткиТоваров/Измерения/Товар.atr
//[Тип]=Справочник.Товары
//[Edit]=1
//[Type]=1
//// =======================================================
//// md:/Метаданные/Регистр/ОстаткиТоваров/Измерения/Товар.inf
//[Alias]=
//[Edit]=1
//[Enable]=1
//[Group]=0
//[ChildImage]=0
//[Image]=219
//[Comment]=
//[Type]=1
//[Name]=Товар
//[Param1]=
//// =======================================================
//// md:/Метаданные/Регистр/ОстаткиТоваров/Реквизиты/ТипОперации.atr
//[Тип]=Перечисление.ТипыОперации
//[Длина]=10
//[Edit]=1
//[Type]=1
//// =======================================================
//// md:/Метаданные/Регистр/ОстаткиТоваров/Реквизиты/ТипОперации.inf
//[Alias]=
//[Edit]=1
//[Enable]=1
//[Group]=0
//[ChildImage]=0
//[Image]=219
//[Comment]=
//[Type]=1
//[Name]=ТипОперации
//[Param1]=
//// =======================================================
//// md:/Метаданные/Регистр/ОстаткиТоваров/Ресурсы/Количество.atr
//[Тип]=Число
//[Длина]=17
//[Точность]=3
//[Edit]=1
//[Type]=1
//// =======================================================
//// md:/Метаданные/Регистр/ОстаткиТоваров/Ресурсы/Количество.inf
//[Alias]=Количество
//[Edit]=1
//[Enable]=1
//[Group]=0
//[ChildImage]=0
//[Image]=219
//[Comment]=
//[Type]=1
//[Name]=Количество
//[Param1]=

//	Путь="md:/Метаданные/Регистр/";
//	Файл=СоздатьОбъект("ФайлМетаданных");
	
	Путь="Метаданные/Регистр/";
	
	ИмяРегистра=МассивРегистра["ИмяРегистра"];
	
	Массив=ВернутьИнфФайл(МассивРегистра["Синоним"],1,1,0,219,210,
	МассивРегистра["Комментарий"],0,ИмяРегистра,"");
	Файл.ЗаписатьОбъект(Путь+ИмяРегистра+".inf",Массив);

	Массив=ВернутьИнфФайл("",0,1,0,0,294,"",3,"Список элементов","");
	Файл.ЗаписатьОбъект(Путь+ИмяРегистра+"/Список элементов.inf",Массив);
	
	Массив=ВернутьИнфФайл("",1,1,1,219,227,"",1,"Измерения","");
	Файл.ЗаписатьОбъект(Путь+ИмяРегистра+"/Измерения.inf",Массив);

	Массив=ВернутьИнфФайл("",1,1,1,219,213,"",1,"Реквизиты","");
	Файл.ЗаписатьОбъект(Путь+ИмяРегистра+"/Реквизиты.inf",Массив);

	Массив=ВернутьИнфФайл("",1,1,1,219,228,"",1,"Ресурсы","");
	Файл.ЗаписатьОбъект(Путь+ИмяРегистра+"/Ресурсы.inf",Массив);

	МассивИзмерений=МассивРегистра["МассивИзмерений"];
	Для СчетчикИзмерений=1 По РазмерМассива(МассивИзмерений) Цикл
		Измерение=МассивИзмерений[СчетчикИзмерений];
		ИмяИзмерения=Измерение["ИмяИзмерения"];
		Массив=ВернутьИнфФайл(Измерение["Синоним"],1,1,0,0,219,
		Измерение["Комментарий"],1,ИмяИзмерения,"");
		Файл.ЗаписатьОбъект(Путь+ИмяРегистра+"/Измерения/"+ИмяИзмерения+".inf",Массив);

		Массив=СоздатьОбъект("Массив");
		Массив["Тип"]=Измерение["Тип"];
		Массив["Edit"]=1;
		Массив["Type"]=1;
		Массив["Длина"]=Измерение["Длина"];
		Массив["Точность"]=Измерение["Точность"];
		Файл.ЗаписатьОбъект(Путь+ИмяРегистра+"/Измерения/"+ИмяИзмерения+".atr",Массив);
	КонецЦикла

	МассивРеквизитов=МассивРегистра["МассивРеквизитов"];
	Для СчетчикРеквизитов=1 По РазмерМассива(МассивРеквизитов) Цикл
		Реквизит=МассивРеквизитов[СчетчикРеквизитов];
		ИмяРеквизита=Реквизит["ИмяРеквизита"];
		Массив=ВернутьИнфФайл(Реквизит["Синоним"],1,1,0,0,219,
		Реквизит["Комментарий"],1,ИмяРеквизита,"");
		Файл.ЗаписатьОбъект(Путь+ИмяРегистра+"/Реквизиты/"+ИмяРеквизита+".inf",Массив);

		Массив=СоздатьОбъект("Массив");
		Массив["Тип"]=Реквизит["Тип"];
		Массив["Edit"]=1;
		Массив["Type"]=1;
		Массив["Длина"]=Реквизит["Длина"];
		Массив["Точность"]=Реквизит["Точность"];
		Файл.ЗаписатьОбъект(Путь+ИмяРегистра+"/Реквизиты/"+ИмяРеквизита+".atr",Массив);
	КонецЦикла

	МассивРесурсов=МассивРегистра["МассивРесурсов"];
	Для СчетчикРесурсов=1 По РазмерМассива(МассивРесурсов) Цикл
		Ресурс=МассивРесурсов[СчетчикРесурсов];
		ИмяРесурса=Ресурс["ИмяРесурса"];
		Массив=ВернутьИнфФайл(Ресурс["Синоним"],1,1,0,0,219,
		Ресурс["Комментарий"],1,ИмяРесурса,"");
		Файл.ЗаписатьОбъект(Путь+ИмяРегистра+"/Ресурсы/"+ИмяРесурса+".inf",Массив);

		Массив=СоздатьОбъект("Массив");
		Массив["Тип"]=Ресурс["Тип"];
		Массив["Edit"]=1;
		Массив["Type"]=1;
		Массив["Длина"]=Ресурс["Длина"];
		Массив["Точность"]=Ресурс["Точность"];
		Файл.ЗаписатьОбъект(Путь+ИмяРегистра+"/Ресурсы/"+ИмяРесурса+".atr",Массив);
	КонецЦикла
КонецПроцедуры

//@ Шевчик
//___________________________________________________________________________________________
Процедура СоздатьОтчет(ИмяОтчета,ТекстМодуля,ФормаДиалогаВнешнейФормы)
	Путь="Метаданные/Отчет/";
	
	  // СоздатьИнформационныйФайлОтчета
	Массив=СоздатьОбъект("Массив");
	Массив["Alias"]="";
	Массив["Edit"]=1;
	Массив["Enable"]=1;
	Массив["Group"]=0;
	Массив["Image"]=320;
	Массив["ChildImage"]=214;
	Массив["Comment"]="";
	Массив["Type"]=0;
	Массив["Name"]=ИмяОтчета;
	Массив["Param1"]="";
	Файл.ЗаписатьОбъект(Путь+ИмяОтчета+".inf",Массив);
	
	Файл.ЗаписатьТекст(Путь+ИмяОтчета+"/Форма диалога.2c",ТекстМодуля);
	
	Файл.ЗаписатьОбъект(Путь+ИмяОтчета+"/Форма диалога.frm",ФормаДиалогаВнешнейФормы);
	
	// создаем Форма диалога.inf 
	Массив=СоздатьОбъект("Массив");
	Массив["Alias"]="";
	Массив["Edit"]=0;
	Массив["Enable"]=1;
	Массив["Group"]=0;
	Массив["ChildImage"]=0;
	Массив["Image"]=294;
	Массив["Comment"]="";
	Массив["Type"]=3;
	Массив["Name"]="Форма диалога";
	Массив["Param1"]="";
	Файл.ЗаписатьОбъект(Путь+ИмяОтчета+"/Форма диалога.inf",Массив);
	
	// создаем Реквизиты.inf 
	Массив=СоздатьОбъект("Массив");
	Массив["Alias"]="";
	Массив["Edit"]=0;
	Массив["Enable"]=1;
	Массив["Group"]=1;
	Массив["ChildImage"]=214;
	Массив["Image"]=86;
	Массив["Comment"]="";
	Массив["Type"]=1;
	Массив["Name"]="Реквизиты";
	Массив["Param1"]="";
	Файл.ЗаписатьОбъект(Путь+ИмяОтчета+"/Реквизиты.inf",Массив);
	
	// создаем Макеты.inf
	Массив=СоздатьОбъект("Массив");
	Массив["Alias"]="";
	Массив["Edit"]=0;
	Массив["Enable"]=1;
	Массив["Group"]=1;
	Массив["ChildImage"]=281;
	Массив["Image"]=318;
	Массив["Comment"]="";
	Массив["Type"]=4;
	Массив["Name"]="Макеты";
	Массив["Param1"]="";
	Файл.ЗаписатьОбъект(Путь+ИмяОтчета+"/Макеты.inf",Массив);
	
	// создаем Запросы.inf
	Массив=СоздатьОбъект("Массив");
	Массив["Alias"]="";
	Массив["Edit"]=0;
	Массив["Enable"]=1;
	Массив["Group"]=1;
	Массив["ChildImage"]=281;
	Массив["Image"]=310;
	Массив["Comment"]="";
	Массив["Type"]=5;
	Массив["Name"]="Запросы";
	Массив["Param1"]="";
	Файл.ЗаписатьОбъект(Путь+ИмяОтчета+"/Запросы.inf",Массив);
КонецПроцедуры//СоздатьОтчет
//@ Шевчик КонецИзменений

Функция ЗаполнитьФлажок() 
	Массив=СоздатьОбъект("Массив");
	Массив["Доступность"]=1;
	Массив["Видимость"]=1;
	Массив["Микроформа"]="";
	Массив["Вправо"]="0";
	Массив["Идентификатор"]="";
	Массив["ТипЭлемента"]=32846;
	Массив["Положение гориз"]="";
	Массив["x2"]=356;
	Массив["x1"]=60;
	Массив["Пропускать при вводе"]="0";
	Массив["Слой"]="Основной";
	Массив["Выбор"]="";
	Массив["Вниз"]="0";
	Массив["Положение верт"]="";
	Массив["Заголовок"]="";
	Массив["nID"]=1125;
	Массив["Тип значения"]="";
	Массив["y2"]=130;
	Массив["y1"]=86;
	Массив["Нажатие клавиши"]="";
	Массив["Параметры"]="";
	Возврат Массив;
КонецФункции

Функция ЗаполнитьПереключатель() 
	Массив=СоздатьОбъект("Массив");
	Массив["Доступность"]=1;
	Массив["Видимость"]=1;
	Массив["Микроформа"]="";
	Массив["Вправо"]="0";
	Массив["Идентификатор"]="";
	Массив["ТипЭлемента"]=32772;
	Массив["Положение гориз"]="";
	Массив["x2"]=352;
	Массив["x1"]=70;
	Массив["Пропускать при вводе"]="0";
	Массив["Слой"]="Основной";
	Массив["Выбор"]="";
	Массив["Вниз"]="0";
	Массив["Положение верт"]="";
	Массив["Заголовок"]="";
	Массив["nID"]=1125;
	Массив["Тип значения"]="";
	Массив["y2"]=142;
	Массив["y1"]=116;
	Массив["Первый в группе"]="0";
	Массив["Нажатие клавиши"]="";
	Массив["Параметры"]="";
	Возврат Массив;
КонецФункции

Функция ЗаполнитьКнопку() 
	Массив=СоздатьОбъект("Массив");
	Массив["Доступность"]=1;
	Массив["Видимость"]=1;
	Массив["Микроформа"]="";
	Массив["Цвет"]="0";
	Массив["Вправо"]="0";
	Массив["Идентификатор"]="";
	Массив["ТипЭлемента"]=33020;
	Массив["Положение гориз"]="";
	Массив["x2"]=262;
	Массив["x1"]=126;
	Массив["Пропускать при вводе"]="0";
	Массив["Слой"]="Основной";
	Массив["Вниз"]="0";
	Массив["Положение верт"]="";
	Массив["Заголовок"]="";
	Массив["nID"]=1125;
	Массив["Картинка верт"]="Верх";
	Массив["Тип значения"]="";
	Массив["Кнопка по умолчанию"]="0";
	Массив["y2"]=114;
	Массив["y1"]=84;
	Массив["Картинка"]="0";
	Массив["Картинка гориз"]="Лево";
	Массив["Нажатие клавиши"]="";
	Массив["Нажатие"]="";
	Массив["Параметры"]="";
	Возврат Массив;
КонецФункции

Функция ЗаполнитьСписокЗначений() 
	Массив=СоздатьОбъект("Массив");
	Массив["Доступность"]=1;
	Массив["Видимость"]=1;
	Массив["Микроформа"]="";
	Массив["Вправо"]="0";
	Массив["Идентификатор"]="";
	Массив["ТипЭлемента"]=32780;
	Массив["Положение гориз"]="";
	Массив["x2"]=348;
	Массив["x1"]=126;
	Массив["Пропускать при вводе"]="0";
	Массив["Слой"]="Основной";
	Массив["Выбор"]="";
	Массив["Вниз"]="0";
	Массив["Положение верт"]="";
	Массив["Заголовок"]="";
	Массив["nID"]=1125;
	Массив["Тип значения"]="СписокЗначений";
	Массив["y2"]=156;
	Массив["y1"]=130;
	Массив["Мультивыделение строк"]="0";
	Массив["Нажатие клавиши"]="";
	Массив["Позиционирование"]="";
	Массив["Параметры"]="";
	Возврат Массив;
КонецФункции

Функция ЗаполнитьПолеСпискаЗначений() 
	Массив=СоздатьОбъект("Массив");
	Массив["Доступность"]=1;
	Массив["Видимость"]=1;
	Массив["Микроформа"]="";
	Массив["Вправо"]="0";
	Массив["Идентификатор"]="";
	Массив["ТипЭлемента"]=32844;
	Массив["Положение гориз"]="";
	Массив["x2"]=338;
	Массив["x1"]=138;
	Массив["Пропускать при вводе"]="0";
	Массив["Слой"]="Основной";
	Массив["Выбор"]="";
	Массив["Вниз"]="0";
	Массив["Положение верт"]="";
	Массив["Заголовок"]="";
	Массив["nID"]=1125;
	Массив["Тип значения"]="СписокЗначений";
	Массив["y2"]=97;
	Массив["y1"]=76;
	Массив["Нажатие клавиши"]="";
	Массив["Параметры"]="";
	Возврат Массив;
КонецФункции

Функция ЗаполнитьРамкуГруппы() 
	Массив=СоздатьОбъект("Массив");
	Массив["Доступность"]=1;
	Массив["Видимость"]=1;
	Массив["Микроформа"]="";
	Массив["Вправо"]="0";
	Массив["Идентификатор"]="";
	Массив["ТипЭлемента"]=40001;
	Массив["Положение гориз"]="";
	Массив["x2"]=348;
	Массив["x1"]=44;
	Массив["Пропускать при вводе"]="0";
	Массив["Слой"]="Основной";
	Массив["Вниз"]="0";
	Массив["Положение верт"]="";
	Массив["Заголовок"]="";
	Массив["nID"]=1125;
	Массив["y2"]=84;
	Массив["y1"]=42;
	Массив["Параметры"]="";
	Возврат Массив;
КонецФункции

Функция ЗаполнитьТекст() 
	Массив=СоздатьОбъект("Массив");
	Массив["Размер шрифта"]=8;
	Массив["Доступность"]=1;
	Массив["Видимость"]=1;
	Массив["Микроформа"]="";
	Массив["Формула надписи"]="";
	Массив["Цвет"]="0";
	Массив["Вправо"]="0";
	Массив["Идентификатор"]="";
	Массив["ТипЭлемента"]=32843;
	Массив["Положение гориз"]="Лево";
	Массив["x2"]=354;
	Массив["x1"]=162;
	Массив["Пропускать при вводе"]="0";
	Массив["Слой"]="Основной";
	Массив["Вниз"]="0";
	Массив["Подчеркивание"]="0";
	Массив["Наклон"]="0";
	Массив["Жирность"]="0";
	Массив["Положение верт"]="Центр";
	Массив["Заголовок"]="";
	Массив["nID"]=1125;
	Массив["y2"]=134;
	Массив["y1"]=90;
	Массив["Нажатие"]="";
	Массив["Параметры"]="";
	Возврат Массив;
КонецФункции

Функция ЗаполнитьРеквизитДиалога() 
	Массив=СоздатьОбъект("Массив");
	Массив["Доступность"]=1;
	Массив["Видимость"]=1;
	Массив["Микроформа"]="";
	Массив["Вправо"]="0";
	Массив["Идентификатор"]="";
	Массив["ТипЭлемента"]=40016;
	Массив["Положение гориз"]="";
	Массив["Кнопка выбора"]=1;
	Массив["x2"]=336;
	Массив["x1"]=140;
	Массив["Запретить редактирование"]="0";
	Массив["Пропускать при вводе"]="0";
	Массив["Слой"]="Основной";
	Массив["Ввод пароля"]="0";
	Массив["Неограниченная длина"]="0";
	Массив["Выбор"]="";
	Массив["Длина"]=10;
	Массив["Вниз"]="0";
	Массив["Положение верт"]="";
	Массив["Заголовок"]="";
	Массив["nID"]=1125;
	Массив["Тип значения"]="Строка";
	Массив["y2"]=120;
	Массив["y1"]=72;
	Массив["Неотрицательный"]="0";
	Массив["Точность"]="0";
	Массив["Многострочный"]="0";
	Массив["Нажатие клавиши"]="";
	Массив["Редактирование"]="";
	Массив["Параметры"]="";
	Возврат Массив;
КонецФункции

Функция ЗаполнитьТаблицу() 
	Массив=СоздатьОбъект("Массив");
	Массив["ТипЭлемента"]=33027;
	Массив["Микроформа"]="";
	Массив["nID"]=1125;
	Массив["Идентификатор"]="";
	Массив["Описание"]="";
	Массив["Заголовок"]="";
	Массив["Положение верт"]="";
	Массив["Положение гориз"]="";
	Массив["Вниз"]="0";
	Массив["Вправо"]="0";
	Массив["Слой"]="Основной";
	Массив["Видимость"]=1;
	Массив["Доступность"]=1;
	Массив["Пропускать при вводе"]="0";
	Массив["Число строк"]=20;
	Массив["Число колонок"]=10;
	Массив["Число фикс.стр"]=1;
	Массив["Число фикс.кол."]=1;
	Массив["Разрешить редактирование"]=1;
	//пусто
	Массив["Сортировка колонок"]=1;
	Массив["Высота ячейки"]=16;
	Массив["Ширина ячейки"]=130;
	Массив["Авторазмер колонок"]="0";
	Массив["Виртуальный режим"]="0";
	Массив["Цвет фона таблицы"]=16777215;
	Массив["Тип значения"]="Grid";
	Массив["Начало редактирования"]="";
	Массив["Двойн.лев.кнопка"]="";
	Массив["Левая кнопка"]="";
	Массив["Правая кнопка"]="";
	Массив["Окончание редактирования"]="";
	Массив["Начало выделения"]="";
	Массив["Окончание выделения"]="";
	Массив["Нажатие клавиши"]="";
	Массив["Обратный вызов виртуального режима"]="";
	Массив["x1"]=104;
	Массив["y1"]=58;
	Массив["x2"]=450;
	Массив["y2"]=204;
	Массив["WasEdit"]=1;
	//Массив["Выделение строки"]=1;
	//Массив["Выделять фикс.строки"]=1;
	//Массив["Выделять фикс.колонки"]=1;
	//Массив["Параметры"]="";
	Возврат Массив;
КонецФункции

Функция ЗаполнитьДерево() 
	Массив=СоздатьОбъект("Массив");
	Массив["Доступность"]=1;
	Массив["Видимость"]=1;
	Массив["Микроформа"]="";
	Массив["Вправо"]="0";
	Массив["Идентификатор"]="";
	Массив["ТипЭлемента"]=33028;
	Массив["Есть линии"]=1;
	Массив["Положение гориз"]="";
	Массив["x2"]=456;
	Массив["x1"]=192;
	Массив["Пропускать при вводе"]="0";
	Массив["Слой"]="Основной";
	Массив["Выбор"]="";
	Массив["Вниз"]="0";
	Массив["Выделение"]="";
	Массив["Положение верт"]="";
	Массив["Заголовок"]="";
	Массив["nID"]=1125;
	Массив["Откр. ветки"]="";
	Массив["Тип значения"]="ДеревоЗначений";
	Массив["Есть кнопки"]=1;
	Массив["y2"]=256;
	Массив["y1"]=40;
	Массив["Есть пиктограммы"]="0";
	Массив["Есть корневая линия"]=1;
	Массив["Нажатие клавиши"]="";
	Массив["Параметры"]="";
	Возврат Массив;
КонецФункции

Функция ЗаполнитьПрогрессор() 
	Массив=СоздатьОбъект("Массив");
	Массив["Доступность"]=1;
	Массив["Видимость"]=1;
	Массив["Микроформа"]="";
	Массив["Вправо"]="0";
	Массив["Идентификатор"]="";
	Массив["ТипЭлемента"]=33035;
	Массив["Положение гориз"]="";
	Массив["x2"]=400;
	Массив["x1"]=110;
	Массив["Пропускать при вводе"]="0";
	Массив["Слой"]="Основной";
	Массив["Непрерывное заполнение"]="0";
	Массив["Макс. значение"]=100;
	Массив["Вниз"]="0";
	Массив["Положение верт"]="";
	Массив["Заголовок"]="";
	Массив["nID"]=1125;
	Массив["Тип значения"]="";
	Массив["y2"]=160;
	Массив["y1"]=86;
	Массив["Вертикальное расположение"]="0";
	Массив["Мин. значение"]="0";
	Массив["Параметры"]="";
	Возврат Массив;
КонецФункции

Функция ЗаполнитьСлайдер() 
	Массив=СоздатьОбъект("Массив");
	Массив["Доступность"]=1;
	Массив["Видимость"]=1;
	Массив["Микроформа"]="";
	Массив["Вправо"]="0";
	Массив["Идентификатор"]="";
	Массив["ТипЭлемента"]=33036;
	Массив["Положение гориз"]="";
	Массив["x2"]=408;
	Массив["x1"]=126;
	Массив["Пропускать при вводе"]="0";
	Массив["Слой"]="Основной";
	Массив["Макс. значение"]=100;
	Массив["Вниз"]="0";
	Массив["Положение верт"]="";
	Массив["Заголовок"]="";
	Массив["nID"]=1125;
	Массив["Тип значения"]="";
	Массив["Движение"]="";
	Массив["y2"]=148;
	Массив["y1"]=54;
	Массив["При изменении"]="";
	Массив["Маркеры"]="0";
	Массив["Вертикальное расположение"]="0";
	Массив["Инвертировать направление"]=1;
	Массив["Мин. значение"]="0";
	Массив["Нажатие клавиши"]="";
	Массив["Параметры"]="";
	Возврат Массив;
КонецФункции

Функция ЗаполнитьПустуюФорму()
	Массив=СоздатьОбъект("Массив");
	ЗаголовокФормы=СоздатьОбъект("Массив");
	ЗаголовокФормы["Синоним"]="";
	ЗаголовокФормы["Идентификатор"]="";
	ЗаголовокФормы["x1"]=0;
	ЗаголовокФормы["y1"]=0;
	ЗаголовокФормы["x2"]=600;
	ЗаголовокФормы["y2"]=300;
	ЗаголовокФормы["Заголовок"]="Пустая форма";
	ЗаголовокФормы["Комментарий"]="";
	Массив["Форма"]=ЗаголовокФормы;
	Возврат Массив;
КонецФункции

Функция ЗаполнитьКолонкуТаблицы()
	Массив=СоздатьОбъект("Массив");
	Массив["Идентификатор"]="";
	Массив["Описание"]="";
	Массив["Заголовок"]="";
	Массив["Формула"]="";
	Массив["Тип значения"]="Справочник.Товары";
	Массив["Длина"]=0;
	Массив["Точность"]=0;
	Массив["Видимость"]=1;
	Массив["Доступность"]=1;
	Массив["Пропускать при вводе"]=0;
	Массив["Ширина колонки"]=122;
	Возврат Массив;
КонецФункции

///////////////////////////////////////////////////////////////////////
//Процедура обработки нажатия кнопки Выполнить
Процедура ВывестиСтруктуруПотока(АдресПотока) //внутренняя процедура для помощи в разработке
	ДобавитьВЛог("// =======================================================");
	ДобавитьВЛог("// "+АдресПотока);
	ДобавитьВЛог("Массив=СоздатьОбъект("+Симв(34)+"Массив"+Симв(34)+");");
	Файл=СоздатьОбъект("ФайлМетаданных");
	Массив=Файл.ПрочитатьОбъект(АдресПотока);
	
	Для СчетчикВсехОбъектов=1 По РазмерМассива(Массив) Цикл
		ДобавитьВЛог("//=============== "+СчетчикВсехОбъектов);
		Контрол=Массив[СчетчикВсехОбъектов];
	 //Контрол:Массив
	Для Счетчик=1 По РазмерСтруктуры(Контрол) Цикл
		Имя=Контрол.ИдентификаторПоНомеру(Счетчик);
		РеальноеЗначение=Контрол[Имя];
		Если ТипЗначенияСтр(РеальноеЗначение)="Строка" Тогда
			Значение=Симв(34)+РеальноеЗначение+Симв(34);
		ИначеЕсли ПустоеЗначение(РеальноеЗначение)=1 Тогда
			Значение=Симв(34)+РеальноеЗначение+Симв(34);
		Иначе	
			Значение=РеальноеЗначение;
		КонецЕсли
			ДобавитьВЛог("Массив["+Симв(34)+
			Имя+Симв(34)+"]="+Значение+";");
		КонецЦикла
		ДобавитьВЛог("Возврат Массив;");
	КонецЦикла
	ВывестиМассив(Массив);
	Возврат;
КонецПроцедуры


//___________________________________________________________________________________________
Процедура КонвертироватьСправочники()
	ОсновнойБлок=ПолучитьТекущийБлок(); // Считается что текущий это весь блок
	ДобавитьВЛог("Конвертирование справочников...");

	Если ВыбратьСправочники()<0 Тогда
		ДобавитьВЛог("Ошибка при выборе справочников...");
		Возврат;
	КонецЕсли
	КолВоСправ=0;
	Пока ПолучитьСправочник()=0 Цикл
		КолВоСправ=КолВоСправ+1;
		Справочник=ТекущийСправочник();
			
		ИмяСправочника=Справочник["ИмяСправочника"];
		ИД=Справочник["ИдентификаторСправочника"];
		Синоним=Справочник["Синоним"];
		Вывод="Справочник."+ИмяСправочника+"::"+Синоним;
		Состояние(Вывод);
		Если Комментарии>2 Тогда
			ДобавитьВЛог("Обработка справочника "+Вывод);
		КонецЕсли
		
		ТекстМодуляФормыДиалога=ПолучитьМодульФормыДиалогаСправочника(ИД);
		Если ТекстМодуляФормыДиалога=-1 Тогда
			Если Комментарии>2 Тогда
				ДобавитьВЛог(Вывод+"Нет модуля формы диалога в 1С. Добавляем пустой модуль");
			КонецЕсли
			ТекстМодуляФормыДиалога="// Пустой модуль";
		КонецЕсли
		
		ТекстМодуляФормыГруппы=ПолучитьМодульФормыГруппыСправочника(ИД);			 			
		Если ТекстМодуляФормыГруппы=-1 Тогда
			Если Комментарии>2 Тогда
				ДобавитьВЛог(Вывод+"Нет модуля формы группы в 1С. Добавляем пустой модуль");
			КонецЕсли;
			ТекстМодуляФормыГруппы="// Пустой модуль";
		КонецЕсли
		
		ИдФормСписка=Справочник["ИдентификаторФормыСпискаОсновная"];
		ТекстМодуляСпискаЭлементов=ПолучитьМодульФормыСпискаСправочника(ИдФормСписка);
		Если ТекстМодуляСпискаЭлементов=-1 Тогда
			Если Комментарии>2 Тогда
				ДобавитьВЛог(Вывод+"Нет модуля списка элементов в 1С. Добавляем пустой модуль");
			КонецЕсли;
			ТекстМодуляСпискаЭлементов="// Пустой модуль";
		КонецЕсли
		
		//----------
		Форма1С=ПолучитьФормуДиалогаСправочника(ИД);
		Если Форма1С=-1 Тогда
			ФормаДиалогаСправочника=ЗаполнитьПустуюФорму();
			Если Комментарии>2 Тогда
				ДобавитьВЛог(Вывод+"Нет формы диалога в 1С. Добавляем пустую форму");
			КонецЕсли;
		Иначе
			ФормаДиалогаСправочника=КонвертироватьФорму(Форма1С);
		КонецЕсли
		
		//----------
		Форма1С=ПолучитьФормуГруппыСправочника(ИД);
		Если Форма1С=-1 Тогда
			ФормаГруппыСправочника=ЗаполнитьПустуюФорму();
			Если Комментарии>2 Тогда
				ДобавитьВЛог(Вывод+"Нет формы группы в 1С. Добавляем пустую форму");
			КонецЕсли;
		Иначе
			ФормаГруппыСправочника=КонвертироватьФорму(Форма1С);
		КонецЕсли
		
		//----------
		Форма1С=ПолучитьФормуСпискаСправочника(ИдФормСписка);
		Если Форма1С=-1 Тогда
			Если Комментарии>2 Тогда
				ДобавитьВЛог(Вывод+"Нет формы списка в 1С. Добавляем пустую форму");
			КонецЕсли;
			ФормаСпискаЭлементов=ЗаполнитьПустуюФорму();
		Иначе
			ФормаСпискаЭлементов=КонвертироватьФорму(Форма1С);
		КонецЕсли
		
		МассивРеквизитов=СоздатьОбъект("Массив");СчетчикРеквизитов=0;
		Если ВыбратьРеквизитыСправочника()<0 Тогда
			//ДобавитьВЛог(Вывод+"Нету реквизитов");
			Продолжить;
		КонецЕсли
		Пока ПолучитьРеквизитСправочника()=0 Цикл
			Реквизит=ТекущийРеквизитСправочника();
			//ДобавитьВЛог("  ---"+Реквизит["ИдентификаторРеквизита"]+"::"+Реквизит["ИмяРеквизита"]);
			
			СчетчикРеквизитов=СчетчикРеквизитов+1;
			ИмяРеквизита=Реквизит["ИмяРеквизита"];
			
			Тип=КонвертироватьТип(СокрЛП(Реквизит["Тип"]),СокрЛП(Реквизит["ИдентификаторВида"]));
			Если Тип=0 Тогда
				Тип="";
				ДобавитьВЛог("  ---"+Реквизит["ИдентификаторРеквизита"]+"::"+Реквизит["ИмяРеквизита"]);
			КонецЕсли

			МассивРеквизитов[СчетчикРеквизитов]["ИмяРевизита"]=ИмяРеквизита;
			МассивРеквизитов[СчетчикРеквизитов]["ТипРеквизита"]=Тип;
			МассивРеквизитов[СчетчикРеквизитов]["ДлинаРеквизита"]=Реквизит["Длина"];
			МассивРеквизитов[СчетчикРеквизитов]["ТочностьРеквизита"]=Реквизит["Точность"];
		КонецЦикла
		СоздатьСправочник(ИмяСправочника,ТекстМодуляСпискаЭлементов,
		ТекстМодуляФормыГруппы,ТекстМодуляФормыДиалога,МассивРеквизитов,
		ФормаДиалогаСправочника,ФормаГруппыСправочника,ФормаСпискаЭлементов);	
	
	КонецЦикла
	ДобавитьВЛог("Конвертирование справочников окончено. Обработано справочников: "+Строка(КолВоСправ));
	УстановитьТекущийБлок(ОсновнойБлок);	// вернем назад позицию
	Возврат;
КонецПроцедуры


//___________________________________________________________________________________________
Функция КонвертироватьДокументы() 
	ОсновнойБлок=ПолучитьТекущийБлок(); // Считается что текущий это весь блок
	
	Если ВыбратьДокументы();<0 Тогда
		ДобавитьВЛог("Ошибка ВыбратьДокументы");
		Возврат -1;
	КонецЕсли
	Пока ПолучитьДокумент()=0 Цикл
		БлокДокумента=ПолучитьТекущийБлок();
		Документ=ТекущийДокумент();
		ИмяДокумента=Документ["ИмяДокумента"];
		ИД=Документ["ИдентификаторДокумента"];
		Вывод="Документ."+ИмяДокумента+"::";
		Состояние(Вывод);
		
		// Модули
		ТекстМодуляФормыДиалога=ПолучитьМодульФормыДиалогаДокумента(ИД);
		Если ТекстМодуляФормыДиалога=-1 Тогда
			Если Комментарии>2 Тогда
				ДобавитьВЛог(Вывод+"Нет МодуляФормыДиалога в 1С. Добавляем пустой модуль");
			КонецЕсли;
			ТекстМодуляФормыДиалога="// Пустой модуль";
		КонецЕсли
		
		ИДЖурнала=Документ["ИдентификаторЖурнала"];
		//	ДобавитьВЛог("Для документа "+ИмяДокумента+" с ИД="+ИД+" есть журнал "+ИДЖурнала);
		//надем в этом журнале подходящую форму списка
		УстановитьТекущийБлок(ОсновнойБлок);
		
		ИДСписка="нет";
		ДелатьПустойЖурнал="изначально нет";
		Если ВыбратьЖурналы()=0 Тогда
			Пока ПолучитьЖурнал()=0 Цикл
				Журнал=ТекущийЖурнал();
				//ДобавитьВЛог("ТекущийЖурнал="+Журнал["ИдентификаторЖурнала"]);
				Если Журнал["ИдентификаторЖурнала"]=ИДЖурнала Тогда
					ИДСписка=Журнал["ФормаСписка"];
					//ДобавитьВЛог("Нашли нужный журнал и ИДСписка="+ИДСписка);
					Прервать;
				КонецЕсли
			КонецЦикла
		КонецЕсли;
		
		Если ИДСписка="нет" Тогда
			ДелатьПустойЖурнал="да";
		Иначе	
			ТекстМодуляСпискаЭлементов=ПолучитьМодульФормыСпискаДокумента(ИДСписка);
			Если ТекстМодуляСпискаЭлементов=-1 Тогда
				ДелатьПустойЖурнал="да";
			КонецЕсли
		КонецЕсли
		
		Если ДелатьПустойЖурнал="да" Тогда
			Если Комментарии>2 Тогда
				ДобавитьВЛог(Вывод+"Нет МодуляСпискаЭлементов в 1С. Добавляем пустой модуль");
			КонецЕсли;
			ТекстМодуляСпискаЭлементов="// Пустой модуль";
		КонецЕсли
		
		ТекстМодуляПроведения=ПолучитьМодульПроведенияДокумента(ИД);
		Если ТекстМодуляПроведения=-1 Тогда
			Если Комментарии>2 Тогда
				ДобавитьВЛог(Вывод+"Нет ТекстМодуляПроведения в 1С. Добавляем пустой модуль");
			КонецЕсли;
			ТекстМодуляПроведения="// Пустой модуль";
		КонецЕсли
		// Формы
		//----------
		Форма1С=ПолучитьФормуДиалогаДокумента(ИД);
		Если Форма1С=-1 Тогда
			ФормаДиалогаДокумента=ЗаполнитьПустуюФорму();
			Если Комментарии>2 Тогда
				ДобавитьВЛог(Вывод+"Нет формы диалога в 1С. Добавляем пустую форму");
			КонецЕсли;
		Иначе
			ФормаДиалогаДокумента=КонвертироватьФорму(Форма1С);
		КонецЕсли
		
		//----------
		ДелатьПустойЖурнал="изначально нет";
		
		Если ИДСписка="нет" Тогда
			ДелатьПустойЖурнал="да";
		Иначе	
			Форма1С=ПолучитьФормуСпискаДокумента(ИДСписка);
			Если Форма1С=-1 Тогда
				ДелатьПустойЖурнал="да";
			Иначе
				ФормаСпискаЭлементов=КонвертироватьФорму(Форма1С);
			КонецЕсли
		КонецЕсли
		
		Если ДелатьПустойЖурнал="да" Тогда
			Если Комментарии>2 Тогда
				ДобавитьВЛог(Вывод+"Нет формы списка в 1С. Добавляем пустую форму");
			КонецЕсли;
			ФормаСпискаЭлементов=ЗаполнитьПустуюФорму();
		КонецЕсли
		
		
		МассивПечатныхМакетов=СоздатьОбъект("Массив") //TODO сделать макеты
		МассивРеквизитовШапки=СоздатьОбъект("Массив");
		МассивРеквизитовТаблицы=СоздатьОбъект("Массив");
		
		УстановитьТекущийБлок(ОсновнойБлок);
		// Общие реквизиты документа

		СчетчикРеквизитовШапки=0;
		Если ВыбратьОбщиеРеквизиты()<0 Тогда
			//ДобавитьВЛог(Вывод+"Нету общих реквизитов");
		Иначе
			Пока ПолучитьОбщийРеквизит()=0 Цикл
				ОбщийРеквизит=ТекущийОбщийРеквизит();
				//	ДобавитьВЛог("  :О:"+ОбщийРеквизит["ИдентификаторРеквизита"]+"::"+
		//		ОбщийРеквизит["ИмяРеквизита"]);
				
				Тип=КонвертироватьТип(СокрЛП(ОбщийРеквизит["Тип"]),
				СокрЛП(ОбщийРеквизит["ИдентификаторВида"]));

				СчетчикРеквизитовШапки=СчетчикРеквизитовШапки+1;
				Массив=СоздатьОбъект("Массив");
				Массив["ИмяРевизита"]=ОбщийРеквизит["ИмяРеквизита"];
				Массив["ТипРеквизита"]=Тип; 
				Массив["ДлинаРеквизита"]=ОбщийРеквизит["Длина"];
				Массив["ТочностьРеквизита"]=ОбщийРеквизит["Точность"];
				МассивРеквизитовШапки[СчетчикРеквизитовШапки]=Массив;
				
			КонецЦикла
		КонецЕсли
		
		// Реквизиты шапки
		УстановитьТекущийБлок(БлокДокумента);
		Если ВыбратьРеквизитыШапки()<0 Тогда
			//ДобавитьВЛог(Вывод+"Нету реквизитов шапки");
		Иначе
			Пока ПолучитьРеквизитШапки()=0 Цикл
				РеквизитШапки=ТекущийРеквизитШапки();
				//	ДобавитьВЛог("  :Ш:"+РеквизитШапки["ИдентификаторРеквизита"]+"::"+
		//		РеквизитШапки["ИмяРеквизита"]);

				Тип=КонвертироватьТип(СокрЛП(РеквизитШапки["Тип"]),
				СокрЛП(РеквизитШапки["ИдентификаторВида"]));

				СчетчикРеквизитовШапки=СчетчикРеквизитовШапки+1;
				Массив=СоздатьОбъект("Массив");
				Массив["ИмяРевизита"]=РеквизитШапки["ИмяРеквизита"];
				Массив["ТипРеквизита"]=Тип;
				Массив["ДлинаРеквизита"]=РеквизитШапки["Длина"];
				Массив["ТочностьРеквизита"]=РеквизитШапки["Точность"];
				МассивРеквизитовШапки[СчетчикРеквизитовШапки]=Массив;
				
			КонецЦикла
		КонецЕсли
			
		// Реквизиты таблицы
		СчетчикРеквизитовТаблицы=0;

		УстановитьТекущийБлок(БлокДокумента);
		Если ВыбратьРеквизитыТаблицы()<0 Тогда
			//ДобавитьВЛог(Вывод+"Нету реквизитов таблицы");
		Иначе
			Пока ПолучитьРеквизитТаблицы()=0 Цикл
				РеквизитТаблицы=ТекущийРеквизитТаблицы();
				//	ДобавитьВЛог("  :Т:"+РеквизитТаблицы["ИдентификаторРеквизита"]+"::"+
		//			РеквизитТаблицы["ИмяРеквизита"]);

				Тип=КонвертироватьТип(СокрЛП(РеквизитТаблицы["Тип"]),
				СокрЛП(РеквизитТаблицы["ИдентификаторВида"]));

				СчетчикРеквизитовТаблицы=СчетчикРеквизитовТаблицы+1;
				Массив=СоздатьОбъект("Массив");
				Массив["ИмяРевизита"]=РеквизитТаблицы["ИмяРеквизита"];
				Массив["ТипРеквизита"]=Тип;
				Массив["ДлинаРеквизита"]=РеквизитТаблицы["Длина"];
				Массив["ТочностьРеквизита"]=РеквизитТаблицы["Точность"];
				МассивРеквизитовТаблицы[СчетчикРеквизитовТаблицы]=Массив;
			КонецЦикла
		КонецЕсли
		
		УстановитьТекущийБлок(БлокДокумента);
		
		СоздатьДокумент(ИмяДокумента,
		ТекстМодуляФормыДиалога,ТекстМодуляСпискаЭлементов,ТекстМодуляПроведения,
		ФормаДиалогаДокумента,ФормаСпискаЭлементов,МассивПечатныхМакетов,
		МассивРеквизитовШапки,МассивРеквизитовТаблицы) 

	КонецЦикла
	УстановитьТекущийБлок(ОсновнойБлок);	// вернем назад позицию
	Возврат 0;	
КонецФункции


//___________________________________________________________________________________________
Процедура КонвертироватьКонстанты()
	КолВоКонстант=0;
	ДобавитьВЛог("Конвертирование констант...");
	ОсновнойБлок=ПолучитьТекущийБлок(); // Считается что текущий это весь блок

	Если ВыбратьКонстанты()<0 Тогда
		ПрисоединитьВЛог("Ошибка");
		ДобавитьВЛог("Ошибка при обработке выбора констант");
		Возврат;
	КонецЕсли
	Пока ПолучитьКонстанту()=0 Цикл
		ТекКонстанта=ТекущаяКонстанта();
		
		ИмяКонстанты=ТекКонстанта["ИмяКонстанты"];
		Синоним=ТекКонстанта["Синоним"];
		ИД=ТекКонстанта["ИдентификаторКонстанты"];
		Вывод="Константа."+ИмяКонстанты+"::"+Синоним;
		Если Комментарии=3 Тогда
			ДобавитьВЛог("Обработка константы "+Вывод);
		КонецЕсли
		Состояние(Вывод);

		Массив=СоздатьОбъект("Массив");
		Массив["ИмяКонстанты"]=ИмяКонстанты; // он же Идентификатор в 2С
		Массив["Синоним"]=Синоним;
		Массив["Комментарий"]=ТекКонстанта["Комментарий"];
		Массив["Использование"]=1;
		Тип=КонвертироватьТип(СокрЛП(ТекКонстанта["Тип"]),
		СокрЛП(ТекКонстанта["ИдентификаторВида"]));
		Массив["ТипЭлемента"]=Тип;
		Массив["Длина"]=ТекКонстанта["Длина"];
		Массив["Точность"]=ТекКонстанта["Точность"];

////////     Далее 3 типа, пока не реализованных в 2С
		Неотрицательный=ТекКонстанта["Неотрицательный"];
		РазделятьТриады=ТекКонстанта["РазделятьТриады"];
		Периодический=ТекКонстанта["Периодический"];
		Массив["Неотрицательный"]=Неотрицательный;
		Массив["РазделятьТриады"]=РазделятьТриады;
		Массив["Периодический"]=Периодический;
		

		СоздатьКонстанту(Массив);
		Если Неотрицательный=1 Тогда
			ПрисоединитьВЛог("Неотр.");
		КонецЕсли
		Если РазделятьТриады=1 Тогда
			ПрисоединитьВЛог("Разделять триады.");
		КонецЕсли
		Если Периодический=1 Тогда
			ПрисоединитьВЛог("Периодич.");
			// Здесь будет обработка конвертирования периодических элементов
		КонецЕсли

		КолВоКонстант=КолВоКонстант+1;
	КонецЦикла
	УстановитьТекущийБлок(ОсновнойБлок);	// вернем назад позицию
	ДобавитьВЛог("Конвертирование констант окончено. Обработано констант: "+Строка(КолВоКонстант));
	Возврат;
КонецПроцедуры

Процедура КонвертироватьГлМодуль()
	ДобавитьВЛог("Конвертирование глобального модуля...");
	Путь="Общие модули/";
	Имя="ГлобальныйМодуль1С";
	Массив=СоздатьОбъект("Массив");
	Массив["Alias"]="";
	Массив["Edit"]=1;
	Массив["Enable"]=1;
	Массив["Group"]=0;
	Массив["ChildImage"]=0;
	Массив["Image"]=308;
	Массив["Comment"]="";
	Массив["Type"]=2;
	Массив["Name"]=Имя;
	Массив["Param1"]="";
	Массив["NameDB"]="";
	Массив["Folder"]=0
	
	Файл.ЗаписатьОбъект(Путь+Имя+".inf",Массив);
	Файл.ЗаписатьТекст(Путь+Имя,Строчка);
	ПрисоединитьВЛог("ОК");
	Возврат;
КонецПроцедуры

//___________________________________________________________________________________________
Процедура КонвертироватьПеречисления()
	ОсновнойБлок=ПолучитьТекущийБлок(); // Считается что текущий это весь блок

	Если ВыбратьПеречисления()<0 Тогда
		ДобавитьВЛог("Ошибка ВыбратьПеречисления");
		Возврат;
	КонецЕсли
	Пока ПолучитьПеречисление()=0 Цикл
	ТекПеречисление=ТекущееПеречисление();
	
	ИмяПеречисления=ТекПеречисление["ИмяПеречисления"];
	ИД=ТекПеречисление["ИдентификаторПеречисления"];
	Вывод="Перечисление."+ИмяПеречисления+"::";
	Состояние(Вывод);
	
	МассивПеречисления=СоздатьОбъект("Массив");
	МассивПеречисления["ИмяПеречисления"]=ИмяПеречисления; // он же Идентификатор в 2С
	МассивПеречисления["Синоним"]=ТекПеречисление["Синоним"];
	МассивПеречисления["Комментарий"]=ТекПеречисление["Комментарий"];
	МассивПеречисления["Использование"]=1;
	
	МассивЗначенийПеречисления=СоздатьОбъект("Массив");	
	СчетчикЗначенийПеречисления=0;
	Если ВыбратьЗначенияПеречисления()>=0 Тогда
		Пока ПолучитьЗначениеПеречисления()=0 Цикл
			ЗначениеПеречисления=ТекущееЗначениеПеречисления();
			ИмяЗначенияПеречисления=ЗначениеПеречисления["ИмяЗначенияПеречисления"];
			//ДобавитьВЛог("У перечисления "+ИмяПеречисления+" есть "+ИмяЗначенияПеречисления);
			СчетчикЗначенийПеречисления=СчетчикЗначенийПеречисления+1;
			Массив=СоздатьОбъект("Массив");
			Массив["ИмяЗначенияПеречисления"]=ИмяЗначенияПеречисления; 
			Массив["Синоним"]=ЗначениеПеречисления["Представление"];
			Массив["Комментарий"]=ЗначениеПеречисления["Комментарий"];
			Массив["Использование"]=1;
			МассивЗначенийПеречисления[СчетчикЗначенийПеречисления]=Массив;
		КонецЦикла
	КонецЕсли
	МассивПеречисления["ЗначенияПеречисления"]=МассивЗначенийПеречисления;
	
	СоздатьПеречисление(МассивПеречисления);
	КонецЦикла
	УстановитьТекущийБлок(ОсновнойБлок);	// вернем назад позицию
	Возврат;
КонецПроцедуры

// © gre 16.10.04. Конвертация ПС и все что с этим связано
Процедура КонвертироватьПланыСчетов()
	КолВоПС=0;
	ДобавитьВЛог("Конвертирование планов счетов...");
	ОсновнойБлок=ПолучитьТекущийБлок(); // Считается что текущий это весь блок
	Если ВыбратьПланыСчетов()<0 Тогда
		ПрисоединитьВЛог("Ошибка");
		ДобавитьВЛог("Ошибка при обработке выбора планов счетов");
		Возврат;
	КонецЕсли
//	Пока ПолучитьКонстанту()=0 Цикл
	Пока ПолучитьПланСчетов()=0 Цикл
		ТекПС=ТекущийПланСчетов();
		Имя=ТекПС["Имя"];
		Синоним=ТекПС["Синоним"];
		ИД=ТекПС["Идентификатор"];
		Вывод="План счетов."+Имя+"::"+Синоним;
		Если Комментарии=3 Тогда
			ДобавитьВЛог("Обработка плана счетов "+Вывод);
		КонецЕсли
		Состояние(Вывод);

		Массив=СоздатьОбъект("Массив");
		Массив["Имя"]=Имя; // он же Идентификатор в 2С
		Массив["Синоним"]=Синоним;
		Массив["Комментарий"]=ТекПС["Комментарий"];
		Массив["Использование"]=1;
		Массив["Шаблон"]=ТекПС["Шаблон"];
//		Тип=КонвертироватьТип(СокрЛП(ТекКонстанта["Тип"]),
//		СокрЛП(ТекКонстанта["ИдентификаторВида"]));
//		Массив["ТипЭлемента"]=Тип;
//		Массив["Длина"]=ТекКонстанта["Длина"];
//		Массив["Точность"]=ТекКонстанта["Точность"];
//
//////////     Далее 3 типа, пока не реализованных в 2С
//		Неотрицательный=ТекКонстанта["Неотрицательный"];
//		РазделятьТриады=ТекКонстанта["РазделятьТриады"];
//		Периодический=ТекКонстанта["Периодический"];
//		Массив["Неотрицательный"]=Неотрицательный;
//		Массив["РазделятьТриады"]=РазделятьТриады;
//		Массив["Периодический"]=Периодический;
//		
//
//		СоздатьКонстанту(Массив);
		СоздатьПланСчетов(Массив);
//		Если Неотрицательный=1 Тогда
//			ПрисоединитьВЛог("Неотр.");
//		КонецЕсли
//		Если РазделятьТриады=1 Тогда
//			ПрисоединитьВЛог("Разделять триады.");
//		КонецЕсли
//		Если Периодический=1 Тогда
//			ПрисоединитьВЛог("Периодич.");
//			// Здесь будет обработка конвертирования периодических элементов
//		КонецЕсли
//
		КолВоПС=КолВоПС+1;
	КонецЦикла
	УстановитьТекущийБлок(ОсновнойБлок);	// вернем назад позицию
	ДобавитьВЛог("Конвертирование планов счетов окончено. Обработано ПС: "+Строка(КолВоПС));
	Возврат;
КонецПроцедуры
		
//@ Шевчик
//___________________________________________________________________________________________
Процедура КонвертироватьВнешнююФорму()
	ДобавитьВЛог("Конвертирование внешней формы...");
	ОсновнойБлок=ПолучитьТекущийБлок(); // Считается что текущий это весь блок
	ТекстМодуля=ПолучитьМодульВнешнейФормы();
	Если ТекстМодуля=-1 Тогда
		Если Комментарии>2 Тогда
			Сообщить(Вывод+"Нет Модуля Формы в 1С. Добавляем пустой модуль");
		КонецЕсли
		ТекстМодуля="// Пустой модуль";
	КонецЕсли
	Форма1С=ПолучитьФормуДиалогаВнешнейФормы();
	Если Форма1С=-1 Тогда
		ФормаДиалогаВнешнейФормы=ЗаполнитьПустуюФорму();
		Если Комментарии>2 Тогда
			Сообщить(Вывод+"Нет формы диалога в 1С. Добавляем пустую форму");
		КонецЕсли;
	Иначе
		ФормаДиалогаВнешнейФормы=КонвертироватьФорму(Форма1С);
	КонецЕсли
	ПозТочки = Найти(ПутьКБазе77,".");
	ИмяОтчета = Лев(ПутьКБазе77, ПозТочки-1);
	Пока 1=1 Цикл
		ПозСлэша = Найти(ИмяОтчета,"\");
		Если ПозСлэша > 0 Тогда
			ИмяОтчета = Прав(ИмяОтчета, СтрДлина(ИмяОтчета)-ПозСлэша);
		Иначе
			Прервать
		КонецЕсли
	КонецЦикла
	СоздатьОтчет(ИмяОтчета,ТекстМодуля,ФормаДиалогаВнешнейФормы);	
КонецПроцедуры//КонвертироватьВнешнююФорму()
//@ Шевчик КонецИзменений

//Процедура РаспечататьСтруктуруСправочников()
//	Инициализация();
//	ЗагрузитьММС(СокрЛП(ПутьКБазе77));
//	СтруктураСправочников();
//КонецПроцедуры
//
//Процедура РаспечататьСтруктуруДокументов()
//	Инициализация();
//	ЗагрузитьММС(СокрЛП(ПутьКБазе77));
//	СтруктураДокументов();
//КонецПроцедуры
//
//Процедура РаспечататьСтруктуруРегистров()
//	Инициализация();
//	ЗагрузитьММС(СокрЛП(ПутьКБазе77));
//	СтруктураРегистров()
//КонецПроцедуры

Функция КонвертироватьФорму(ПотокФормы) 
	Переменные=ЗапомнитьВсеПеременные();
	
	Строчка=ПотокФормы;
	СимволовВСтрок=СтрДлина(Строчка);
	НачалоБлока=1;
	КонецБлока=СимволовВСтрок;

	ТекстовыйЗаголовокФормы="Форма пробного разбора формы 1С";

// Произведем разбор формы 77				
//	Инициализация();
	//ЗагрузитьФормуДиалогаСправочника(ПутьКБазе77,"97");
		
	Начало=ПолучитьТекущийБлок();

	Если ВыбратьГруппуБлоков("Frame")<0 Тогда
		ДобавитьВЛог(Вывод+"Ошибка ВыбратьГруппуБлоков Frame");
		ВспомнитьВсеПеременные(Переменные);
		Возврат -1;
	КонецЕсли
	Пока ПолучитьБлок("Frame")=0 Цикл
//			Диалог=ПарсерММС.ОтпарситьТекущийБлокПоНомерам(Массив);
//			ПарсерММС.РаспечататьПарсенныйБлок(Диалог);
		//			ДобавитьВЛог("Всего "+Диалог.РазмерМассива());
		Форма77=ОтпарситьТекущийБлок(ЗаполнитьФорму());
	КонецЦикла
	
	// ---------------------------------------------------------------------------
	СтараяШирина=Число(Форма77["ШиринаФормы"]);
	СтараяВысота=Число(Форма77["ВысотаФормы"]);
	
	//			НоваяШирина=600;
	НоваяШирина=Цел(СтараяШирина*1.6);
	НоваяВысота=Цел(НоваяШирина*СтараяВысота/СтараяШирина);
	
	МассивФормы=СоздатьОбъект("Массив");
	ЗаголовокФормы=СоздатьОбъект("Массив");
	ЗаголовокФормы["Идентификатор"]="";
	ЗаголовокФормы["Заголовок"]=ТекстовыйЗаголовокФормы;
	ЗаголовокФормы["Синоним"]="";
	ЗаголовокФормы["Комментарий"]="";
	ЗаголовокФормы["НеИзменятьРазмер"]=0;
	ЗаголовокФормы["Иконка"]=0;
	ЗаголовокФормы["Родительская форма"]="";
	ЗаголовокФормы["x1"]=0;
	ЗаголовокФормы["y1"]=0;
	ЗаголовокФормы["x2"]=НоваяШирина;
	ЗаголовокФормы["y2"]=НоваяВысота;
	МассивФормы["Форма"]=ЗаголовокФормы;
	СчетчикКонтролов=0;
// ---------------------------------------------------------------------------
	
	УстановитьТекущийБлок(Начало);

	// Разбор мультиколумна
	Если ВыбратьГруппуБлоков("Multicolumn")>=0 Тогда
	
//{"Multicolumn",
//{"","browse","1353711616","10","63","300","95","0","0","4151","","","","0","U","0","0","0","0","0","","","","0","-11","0","0","0","0","0","0","0","0","0","0","0","0","MS Sans Serif","-1","-1","0","Основной","{""0"",""0""}"}},

		Пока ПолучитьБлок("Multicolumn")=0 Цикл
			Контрол=ОтпарситьТекущийБлок(ЗаполнитьКонтрол());
			
			СтараяX1=Число(Контрол["КоординатаX"]);
			СтараяY1=Число(Контрол["КоординатаY"]);
			СтараяX2=Число(Контрол["КоординатаX"])+Число(Контрол["ДлинаКонтрола"]);
			СтараяY2=Число(Контрол["КоординатаY"])+Число(Контрол["ВысотаКонтрола"]);

			Высота=25;
			НоваяX1=Цел(НоваяШирина*СтараяX1/СтараяШирина);
			НоваяY1=Цел(НоваяВысота*СтараяY1/СтараяВысота)-Высота;
			НоваяX2=Цел(НоваяШирина*СтараяX2/СтараяШирина);
			НоваяY2=Цел(НоваяВысота*СтараяY2/СтараяВысота)-Высота;
			
			Если Контрол["ВидКонтрола"]="browse" Тогда
				СчетчикКонтролов=СчетчикКонтролов+1;
				ОбъектФормы=ЗаполнитьТаблицу();
				ОбъектФормы["nID"]=СчетчикКонтролов;
				ОбъектФормы["x1"]=НоваяX1;
				ОбъектФормы["y1"]=НоваяY1;
				ОбъектФормы["x2"]=НоваяX2;
				ОбъектФормы["y2"]=НоваяY2;
				ОбъектФормы["Виртуальный режим"]=1;
				ОбъектФормы["Слой"]=СокрЛП(Контрол["ИмяСлоя"]);
				//Вставить разбор колонок таблицы
				//0.55
				
				СтарыйМульти=ПолучитьТекущийБлок();
				
				Если ВыбратьГруппуБлоков("Fixed")<0 Тогда
					ДобавитьВЛог(Вывод+"Ошибка ВыбратьГруппуБлоков Fixed");
					Возврат -1;
				КонецЕсли;
				НомерКолонкиТаблицы=0;
				
				Пока ПолучитьБлок("Fixed")=0 Цикл
					Массив=СоздатьОбъект("Массив");
					Массив["Неизвестно1"]="";
					Массив["Неизвестно2"]="";
					Массив["Неизвестно3"]="";
					Массив["Неизвестно4"]="";
					Массив["Неизвестно5"]="";
					Массив["Неизвестно6"]="";
					Массив["Неизвестно7"]="";
					Массив["ИдентификаторКолонки"]="";
					Массив["Неизвестно9"]="";
					Массив["Неизвестно10"]="";
					Массив["Неизвестно11"]="";
					Массив["Неизвестно12"]="";
					Массив["Неизвестно13"]="";
					Массив["Неизвестно14"]="";
					Массив["Неизвестно15"]="";
					Массив["Неизвестно16"]="";
					Массив["Неизвестно17"]="";
					Массив["Неизвестно18"]="";
					Массив["Неизвестно19"]="";
					Массив["Неизвестно20"]="";
					Массив["Неизвестно21"]="";
					Массив["Неизвестно22"]="";
					Контрол=ОтпарситьТекущийБлок(Массив);
					
					КолонкаТаблицы=ЗаполнитьКолонкуТаблицы();
					КолонкаТаблицы["Идентификатор"]=Контрол["ИдентификаторКолонки"];
					КолонкаТаблицы["Заголовок"]=Контрол["ИдентификаторКолонки"];
					КолонкаТаблицы["Тип значения"]="Строка";
					НомерКолонкиТаблицы=НомерКолонкиТаблицы+1;
					ОбъектФормы[НомерКолонкиТаблицы]=КолонкаТаблицы;
				КонецЦикла;
				//0.55
				УстановитьТекущийБлок(СтарыйМульти);
				
				ОбъектФормы["Число колонок"]=НомерКолонкиТаблицы;
				МассивФормы[СчетчикКонтролов]=ОбъектФормы;
			Иначе
				ДобавитьВЛог(Вывод+"Неизвестный Multicolumn ВидКонтрола "+Контрол["ВидКонтрола"]);
			КонецЕсли
		КонецЦикла;
	КонецЕсли
		
	УстановитьТекущийБлок(Начало);
	Если ВыбратьГруппуБлоков("Controls")<0 Тогда
		ДобавитьВЛог(Вывод+"Ошибка ВыбратьГруппуБлоков");
		ВспомнитьВсеПеременные(Переменные);
		Возврат -2;
	КонецЕсли
	
	Пока ПолучитьБлок("Controls")=0 Цикл
		
		Контрол=ОтпарситьТекущийБлок(ЗаполнитьКонтрол());
		
		//ПарсерММС.РаспечататьПарсенныйБлок(Диалог);
		СтараяX1=Число(Контрол["КоординатаX"]);
		СтараяY1=Число(Контрол["КоординатаY"]);
		СтараяX2=Число(Контрол["КоординатаX"])+Число(Контрол["ДлинаКонтрола"]);
		СтараяY2=Число(Контрол["КоординатаY"])+Число(Контрол["ВысотаКонтрола"]);
		
		Высота=25;
		НоваяX1=Цел(НоваяШирина*СтараяX1/СтараяШирина);
		НоваяY1=Цел(НоваяВысота*СтараяY1/СтараяВысота)-Высота;
		НоваяX2=Цел(НоваяШирина*СтараяX2/СтараяШирина);
		НоваяY2=Цел(НоваяВысота*СтараяY2/СтараяВысота)-Высота;
		
		Если Контрол["ВидКонтрола"]="BUTTON" Тогда
			СчетчикКонтролов=СчетчикКонтролов+1;
			Кнопка=ЗаполнитьКнопку();
			Кнопка["Слой"]=СокрЛП(Контрол["ИмяСлоя"]);
			Кнопка["nID"]=СчетчикКонтролов;
			Кнопка["x1"]=НоваяX1;
			Кнопка["y1"]=НоваяY1;
			Кнопка["x2"]=НоваяX2;
			Кнопка["y2"]=НоваяY2;
			Кнопка["Заголовок"]=Контрол["Заголовок"]
			МассивФормы[СчетчикКонтролов]=Кнопка;
		ИначеЕсли Контрол["ВидКонтрола"]="1CEDIT" Тогда
			СчетчикКонтролов=СчетчикКонтролов+1;
			Кнопка=ЗаполнитьРеквизитДиалога();
			Кнопка["Слой"]=СокрЛП(Контрол["ИмяСлоя"]);
			Кнопка["nID"]=СчетчикКонтролов;
			Кнопка["x1"]=НоваяX1;
			Кнопка["y1"]=НоваяY1;
			Кнопка["x2"]=НоваяX2;
			Кнопка["y2"]=НоваяY2;
			Кнопка["Идентификатор"]=Контрол["Идентификатор"];
			Кнопка["Тип значения"]=КонвертироватьТип(Контрол["Тип"],
			Контрол["ИдентификаторВида"]);
			Кнопка["Длина"]=Контрол["Длина"];
			Кнопка["Точность"]=Контрол["Точность"];				
			МассивФормы[СчетчикКонтролов]=Кнопка;
		ИначеЕсли Контрол["ВидКонтрола"]="BMASKED" Тогда
			СчетчикКонтролов=СчетчикКонтролов+1;
			Кнопка=ЗаполнитьРеквизитДиалога();
			Кнопка["Слой"]=СокрЛП(Контрол["ИмяСлоя"]);
			Кнопка["nID"]=СчетчикКонтролов;
			Кнопка["x1"]=НоваяX1;
			Кнопка["y1"]=НоваяY1;
			Кнопка["x2"]=НоваяX2;
			Кнопка["y2"]=НоваяY2;
			Кнопка["Идентификатор"]=Контрол["Идентификатор"];
			Кнопка["Тип значения"]=КонвертироватьТип(Контрол["Тип"],
			Контрол["ИдентификаторВида"]);
			МассивФормы[СчетчикКонтролов]=Кнопка;
		ИначеЕсли Контрол["ВидКонтрола"]="TABLE" Тогда
			СчетчикКонтролов=СчетчикКонтролов+1;
			Кнопка=ЗаполнитьТаблицу();
			Кнопка["Слой"]=СокрЛП(Контрол["ИмяСлоя"]);
			Кнопка["nID"]=СчетчикКонтролов;
			Кнопка["x1"]=НоваяX1;
			Кнопка["y1"]=НоваяY1;
			Кнопка["x2"]=НоваяX2;
			Кнопка["y2"]=НоваяY2;
			МассивФормы[СчетчикКонтролов]=Кнопка;
		ИначеЕсли Контрол["ВидКонтрола"]="CHECKBOX" Тогда
			СчетчикКонтролов=СчетчикКонтролов+1;
			Кнопка=ЗаполнитьФлажок();
			Кнопка["Слой"]=СокрЛП(Контрол["ИмяСлоя"]);
			Кнопка["nID"]=СчетчикКонтролов;
			Кнопка["x1"]=НоваяX1;
			Кнопка["y1"]=НоваяY1;
			Кнопка["x2"]=НоваяX2;
			Кнопка["y2"]=НоваяY2;
			Кнопка["Заголовок"]=Контрол["Заголовок"]
			Кнопка["Идентификатор"]=Контрол["Идентификатор"];
			МассивФормы[СчетчикКонтролов]=Кнопка;
		ИначеЕсли Контрол["ВидКонтрола"]="RADIO" Тогда
			СчетчикКонтролов=СчетчикКонтролов+1;
			Кнопка=ЗаполнитьПереключатель();
			Кнопка["Слой"]=СокрЛП(Контрол["ИмяСлоя"]);
			Кнопка["nID"]=СчетчикКонтролов;
			Кнопка["x1"]=НоваяX1;
			Кнопка["y1"]=НоваяY1;
			Кнопка["x2"]=НоваяX2;
			Кнопка["y2"]=НоваяY2;
			Кнопка["Заголовок"]=Контрол["Заголовок"]
			МассивФормы[СчетчикКонтролов]=Кнопка;
		ИначеЕсли Контрол["ВидКонтрола"]="LISTBOX" Тогда
			СчетчикКонтролов=СчетчикКонтролов+1;
			Кнопка=ЗаполнитьСписокЗначений();
			Кнопка["Слой"]=СокрЛП(Контрол["ИмяСлоя"]);
			Кнопка["nID"]=СчетчикКонтролов;
			Кнопка["x1"]=НоваяX1;
			Кнопка["y1"]=НоваяY1;
			Кнопка["x2"]=НоваяX2;
			Кнопка["y2"]=НоваяY2;
			Кнопка["Идентификатор"]=Контрол["Идентификатор"];
			МассивФормы[СчетчикКонтролов]=Кнопка;
		ИначеЕсли Контрол["ВидКонтрола"]="COMBOBOX" Тогда
			СчетчикКонтролов=СчетчикКонтролов+1;
			Кнопка=ЗаполнитьПолеСпискаЗначений();
			Кнопка["Слой"]=СокрЛП(Контрол["ИмяСлоя"]);
			Кнопка["nID"]=СчетчикКонтролов;
			Кнопка["x1"]=НоваяX1;
			Кнопка["y1"]=НоваяY1;
			Кнопка["x2"]=НоваяX2;
			Кнопка["y2"]=НоваяY2;
			Кнопка["Идентификатор"]=Контрол["Идентификатор"];
			МассивФормы[СчетчикКонтролов]=Кнопка;
		ИначеЕсли Контрол["ВидКонтрола"]="1CGROUPBOX" Тогда
			СчетчикКонтролов=СчетчикКонтролов+1;
			Кнопка=ЗаполнитьРамкуГруппы();
			Кнопка["Слой"]=СокрЛП(Контрол["ИмяСлоя"]);
			Кнопка["nID"]=СчетчикКонтролов;
			Кнопка["x1"]=НоваяX1;
			Кнопка["y1"]=НоваяY1;
			Кнопка["x2"]=НоваяX2;
			Кнопка["y2"]=НоваяY2;
			Кнопка["Заголовок"]=Контрол["Заголовок"]
			МассивФормы[СчетчикКонтролов]=Кнопка;
		ИначеЕсли Контрол["ВидКонтрола"]="STATIC" Тогда

			//Тестовая вставка 0.56
			Если СокрЛП(Контрол["Идентификатор"])="Костя" Тогда
				РаспечататьПарсенныйБлок(Контрол);
			КонецЕсли
			
			СчетчикКонтролов=СчетчикКонтролов+1;
			Кнопка=ЗаполнитьТекст();
			РазмерШрифта=Число(Контрол["РазмерШрифта"]);
			Если РазмерШрифта<0 Тогда
				РазмерШрифта=-РазмерШрифта;
				РазмерШрифта=Цел(РазмерШрифта/2)+6;
				//ДобавитьВЛог("РазмерШрифта="+РазмерШрифта+"::"+Контрол["РазмерШрифта"]);
			КонецЕсли;
			Кнопка["Размер шрифта"]=РазмерШрифта;
			Кнопка["Цвет"]=СокрЛП(Контрол["ЦветТекста"]);
			Кнопка["Слой"]=СокрЛП(Контрол["ИмяСлоя"]);
			Кнопка["nID"]=СчетчикКонтролов;
			Кнопка["x1"]=НоваяX1;
			Кнопка["y1"]=НоваяY1;
			Кнопка["x2"]=НоваяX2;
			Кнопка["y2"]=НоваяY2;
			Кнопка["Заголовок"]=Контрол["Заголовок"]
			МассивФормы[СчетчикКонтролов]=Кнопка;
		ИначеЕсли Контрол["ВидКонтрола"]="SysTreeView32" Тогда
			СчетчикКонтролов=СчетчикКонтролов+1;
			Кнопка=ЗаполнитьДерево();
			Кнопка["Слой"]=СокрЛП(Контрол["ИмяСлоя"]);
			Кнопка["nID"]=СчетчикКонтролов;
			Кнопка["x1"]=НоваяX1;
			Кнопка["y1"]=НоваяY1;
			Кнопка["x2"]=НоваяX2;
			Кнопка["y2"]=НоваяY2;
			МассивФормы[СчетчикКонтролов]=Кнопка;
 		Иначе
			ДобавитьВЛог(Вывод+" Неизвестный вид контрола "+Контрол["ВидКонтрола"]);
		КонецЕсли	
			
	КонецЦикла
	ВспомнитьВсеПеременные(Переменные);
	Возврат МассивФормы;
	//	СоздатьПробныйДокумент(МассивФормы);
КонецФункции

Функция ЗапомнитьВсеПеременные()
	Массив=СоздатьОбъект("Массив");
	Массив["Строчка"]=Строчка;
	Массив["СимволовВСтрок"]=СимволовВСтрок;
	Массив["НачалоБлока"]=НачалоБлока;
	Массив["КонецБлока"]=КонецБлока;
	Массив["СчетчикГруппыБлоков"]=СчетчикГруппыБлоков;
	Массив["КонецГруппыБлоков"]=КонецГруппыБлоков;
	Возврат Массив;
КонецФункции

Процедура ВспомнитьВсеПеременные(Массив)
	Строчка=Массив["Строчка"];
	СимволовВСтрок=Массив["СимволовВСтрок"];
	НачалоБлока=Массив["НачалоБлока"];
	КонецБлока=Массив["КонецБлока"];
	СчетчикГруппыБлоков=Массив["СчетчикГруппыБлоков"];
	КонецГруппыБлоков=Массив["КонецГруппыБлоков"];
КонецПроцедуры

//gre: Т.к. процедуры СохранитьЗначение на момент разработки (10.10.04) НЕ БЫЛО, ПРИШЛОСЬ НАПИСАТЬ СВОЙ АНАЛОГ
Процедура СохранитьЗначение(Идентификатор,Значение)
	ТекстДок=СоздатьОбъект("Текст");
	ТекстДок.КодоваяСтраница(1);
	ФайлСохрПерем=КаталогПользователя()+"SaveVar.var";
	Идентификатор="%"+Идентификатор+"%";
	ФС=СоздатьОбъект("Файловая система");
	Если ФС.СуществуетФайл(ФайлСохрПерем)=0 Тогда
		//Если файл отсутствует
		ТекстДок.ДобавитьСтроку(Идентификатор+Значение);
		ТекстДок.Записать(ФайлСохрПерем);
	Иначе	
		//Если файл есть
		ТекстДок.Открыть(ФайлСохрПерем);
		Для стр=1 По ТекстДок.КоличествоСтрок() Цикл
			Если Найти(ТекстДок.ПолучитьСтроку(стр),Идентификатор)<>0 Тогда
				//Если есть значение с этим идентификатором заменим на новое
				ТекстДок.ЗаменитьСтроку(стр,Идентификатор+Значение);
				ТекстДок.Записать(ФайлСохрПерем);
				Возврат;
			КонецЕсли;
		КонецЦикла;
		ТекстДок.ДобавитьСтроку(Идентификатор+Значение);
		ТекстДок.Записать(ФайлСохрПерем);
	КонецЕсли
КонецПроцедуры//СохранитьЗначение

//gre: Т.к. функции ВосстановитьЗначение на момент разработки (10.10.04) НЕ БЫЛО, ПРИШЛОСЬ НАПИСАТЬ СВОЙ АНАЛОГ
Функция ВосстановитьЗначение(Идентификатор,ЗначениеПоДефолту="") //ВосстановитьЗначение(Идентификатор значения,Значение, которое подставить, если ничего небыло сохранено ) - восстанавливает сохраненное значение
	ТекстДок=СоздатьОбъект("Текст");
	ТекстДок.КодоваяСтраница(1);
	ФайлСохрПерем=КаталогПользователя()+"SaveVar.var";
	Идентификатор="%"+Идентификатор+"%";
	ФС=СоздатьОбъект("Файловая система");
	Значение="";
	Если ФС.СуществуетФайл(ФайлСохрПерем)=1 Тогда
		ТекстДок.Открыть(ФайлСохрПерем);
		Кол=ТекстДок.КоличествоСтрок();
		Для стр=1 По Кол Цикл
			ТекстСтроки=ТекстДок.ПолучитьСтроку(стр);
			ПозИд=Найти(ТекстСтроки,Идентификатор);
			Если ПозИд<>0 Тогда
				Значение=Сред(ТекстСтроки,СтрДлина(Идентификатор)+1);
			КонецЕсли;
		КонецЦикла;
	Иначе
		Значение=ЗначениеПоДефолту;
	КонецЕсли;
	Если Значение="" Тогда
		Значение=ЗначениеПоДефолту;
	КонецЕсли;
	Возврат Значение;
КонецФункции//ВосстановитьЗначение


Процедура ПриОткрытии()
// восстановим значения путей
	ПутьКБазе77=ВосстановитьЗначение("ПутьКБазе77","D:\Work\КСК\1CV7.MD");
	ПутьКБазе2С=ВосстановитьЗначение("ПутьКБазе2С","D:\Work\2C\КСК\config.md2");
// восстановим значения флажков
	Глобал=ВосстановитьЗначение("Глобал",1);
	Конст=ВосстановитьЗначение("Конст",1);
	Справ=ВосстановитьЗначение("Справ",1);
	Докум=ВосстановитьЗначение("Докум",1);
	Журн=ВосстановитьЗначение("Журн",1);
	Перич=ВосстановитьЗначение("Перич",1);
	Отч=ВосстановитьЗначение("Отч",1);
	Обр=ВосстановитьЗначение("Обр",1);
	ПланСч=ВосстановитьЗначение("ПланСч",1);
	ВидыСубк=ВосстановитьЗначение("ВидыСубк",1);
	Регис=ВосстановитьЗначение("Регис",1);
	ЖурнРасч=ВосстановитьЗначение("ЖурнРасч",1);
	ВидыРасч=ВосстановитьЗначение("ВидыРасч",1);
	ГруппыРасч=ВосстановитьЗначение("ГруппыРасч",1);
	Календ=ВосстановитьЗначение("Календ",1);
// восстановим значения переключателей
	Комментарии=ВосстановитьЗначение("Комментарии",1);
КонецПроцедуры

Процедура ЗакрытьФорму()
	Форма.Закрыть();
КонецПроцедуры

Функция РегистрацияКомпаунда()
//	ФС=СоздатьОбъект("Файловая система");
//	Если ФС.СуществуетФайл("compound.dll")=1 Тогда
		//КомандаСистемы("regsvr32.exe compound.dll");
		//Процедура или функция не обнаружена (КОМАНДАСИСТЕМЫ) (релиз 03.09.04)
//		Возврат 1;
//	КонецЕсли
	Возврат 0;
КонецФункции

Процедура ДобавитьВЛог(ЗначениеЛог)
	ЛогСписок.ДобавитьЗначение(ЗначениеЛог);
КонецПроцедуры

Процедура ПрисоединитьВЛог(ЗначениеЛог)
	ТекПоз=ЛогСписок.РазмерСписка();
	ТекЗнач=ЛогСписок.ПолучитьЗначение(ТекПоз);
	ЛогСписок.УстановитьЗначение(ТекПоз,ТекЗнач+" "+ЗначениеЛог);
КонецПроцедуры

Функция ИнициализацияКомпаунда()
	ДобавитьВЛог("Инициализация компаунда...");
	ИмяКомпаундФайла=СокрЛП(ПутьКБазе77);
	Попытка
		Компаунд = СоздатьОбъект("Amber.Compound");
	Исключение
		Если РегистрацияКомпаунда()=0 Тогда
			ПрисоединитьВЛог("Ошибка");
			ДобавитьВЛог("Для работы необходима компонента Compound");
			ДобавитьВЛог("версии не ниже 4.5");
			Возврат 0;
		КонецЕсли
	КонецПопытки;
	
	Если Компаунд.IsCompoundFile(ИмяКомпаундФайла)< 0 Тогда
		ПрисоединитьВЛог("Ошибка");
		ДобавитьВЛог("Файл не является Компаунд файлом или ошибка доступа");
		Возврат 0;
	КонецЕсли
	ПрисоединитьВЛог("ОК");
	ИмяВременногоФайлаПотока="c:\stream.txt";
	ОбработатьСообщения();
	Возврат 1;
КонецФункции

Процедура КонвертироватьВсе()
	Ч1="";М1="";С1="";
	ТекущееВремя(Ч1,М1,С1);
	ВремяНачала=(Ч1*60+М1)*60+С1;
	
	Ош=0;
	ФС=СоздатьОбъект("Файловая система");
	ФС.УдалитьФайл(СокрЛП(ПутьКБазе2С));
	
	Файл=СоздатьОбъект("ФайлМетаданных");
	ПутьКБазе2С=СокрЛП(ПутьКБазе2С)
	Если ФС.СуществуетФайл(ПутьКБазе77)=0 Тогда
		ДобавитьВЛог("Не найден файл 1С 7.7 по указанному вами пути.");
		ДобавитьВЛог("Конвертирование невыполнено из-за ошибки.");
		Возврат;
	КонецЕсли

	Попытка
		ДобавитьВЛог("Создаем новый файл конфигурации...");
		Файл.Открыть(ПутьКБазе2С);
		ПрисоединитьВЛог("ОК");
	Исключение
		ПрисоединитьВЛог("Ошибка");
		ДобавитьВЛог("Ошибка создания/открытия файла "+ПутьКБазе2С+",");
		ДобавитьВЛог("возможно файл используется другой задачей.");
		ДобавитьВЛог("Конвертирование невыполнено из-за ошибки.");
		Возврат;
	КонецПопытки;	
//	ОчиститьОкноСообщений();
	Если ИнициализацияКомпаунда()=0 Тогда
		ДобавитьВЛог("Не удалось проиницилизировать компаунд файл.");
		ДобавитьВЛог("Конвертирование невыполнено из-за ошибки.");
		Возврат;
	КонецЕсли
	
//@ Шевчик
	Если Врег(Прав(ПутьКБазе77, 3)) = "ERT" Тогда
		Строчка=ПолучитьПоток("Main MetaData Stream",0);
	Иначе
		Если Глобал=1 Тогда
			Состояние("Происходит конвертирование Глобального модуля");
	    	ОбработатьСообщения();
			Строчка=ПолучитьПоток("TypedText\ModuleText_Number1\MD Programm text",1);
			Если Число(Строчка)<0 Тогда
				ДобавитьВЛог("Ошибка чтения Глобального модуля");
			КонецЕсли
			КонвертироватьГлМодуль();
	    	ОбработатьСообщения();
		КонецЕсли

		Строчка=ПолучитьПоток("Metadata\Main MetaData Stream",0);
	КонецЕсли
//@ Шевчик КонецИзменений

	Если Число(Строчка)<0 Тогда
		ДобавитьВЛог("Ошибка чтения файла Структуры Конфигурации 1С:Предприятие 7.7. Прерываем работу");
		Возврат;
	КонецЕсли
	
	СимволовВСтрок=СтрДлина(Строчка);
	НачалоБлока=1;
	КонецБлока=СимволовВСтрок;
	
	Состояние("Происходит подготовка к конвертированию...");
    ОбработатьСообщения();
	ПостроениеСтруктурыТипизации();
//	ВывестиМассив(СтруктураТипизации);

//@ Шевчик
	Если Врег(Прав(ПутьКБазе77, 3)) = "ERT" Тогда
		Состояние("Конвертирование внешней формы");
		КонвертироватьВнешнююФорму();
		Файл.Закрыть();
		
		Состояние("Конвертирование успешно завершено.");
		Возврат;
	КонецЕсли
//@ Шевчик КонецИзменений
	
	Если Конст=1 Тогда
		Состояние("Происходит конвертирование констант");
	    ОбработатьСообщения();
		КонвертироватьКонстанты();
	    ОбработатьСообщения();
	КонецЕсли
	Если Справ=1 Тогда
		Состояние("Происходит конвертирование справочников");
	    ОбработатьСообщения();
		КонвертироватьСправочники();
	    ОбработатьСообщения();
	КонецЕсли
	Если Докум=1 Тогда
		Состояние("Происходит конвертирование документов");
	    ОбработатьСообщения();
		КонвертироватьДокументы();
	    ОбработатьСообщения();
	КонецЕсли
	Если Журн=1 Тогда
		Состояние("Происходит конвертирование журналов");
	    ОбработатьСообщения();
//		КонвертироватьЖурналы();
	    ОбработатьСообщения();
	КонецЕсли
	Если Перич=1 Тогда
		Состояние("Происходит конвертирование перечислений");
	    ОбработатьСообщения();
		КонвертироватьПеречисления();
	    ОбработатьСообщения();
	КонецЕсли
	Если Отч=1 Тогда
		Состояние("Происходит конвертирование отчетов");
	    ОбработатьСообщения();
//		КонвертироватьОтчеты();
	    ОбработатьСообщения();
	КонецЕсли
	Если Обр=1 Тогда
		Состояние("Происходит конвертирование обработок");
	    ОбработатьСообщения();
//		КонвертироватьОбработки();
	    ОбработатьСообщения();
	КонецЕсли
	Если ПланСч=1 Тогда
		Состояние("Происходит конвертирование плана счетов");
	    ОбработатьСообщения();
		КонвертироватьПланыСчетов();
	    ОбработатьСообщения();
	КонецЕсли
	Если ВидыСубк=1 Тогда
		Состояние("Происходит конвертирование видов субконто");
	    ОбработатьСообщения();
//		КонвертироватьВидыСубконто();
	    ОбработатьСообщения();
	КонецЕсли
	Если Регис=1 Тогда
		Состояние("Происходит конвертирование регистров");
	    ОбработатьСообщения();
//		КонвертироватьРегистры();
	    ОбработатьСообщения();
	КонецЕсли
	Если ЖурнРасч=1 Тогда
		Состояние("Происходит конвертирование журналов расчетов");
	    ОбработатьСообщения();
//		КонвертироватьЖурналыРасчетов();
	    ОбработатьСообщения();
	КонецЕсли
	Если ВидыРасч=1 Тогда
		Состояние("Происходит конвертирование видов расчетов");
	    ОбработатьСообщения();
//		КонвертироватьВидыРасчетов();
	    ОбработатьСообщения();
	КонецЕсли
	Если ГруппыРасч=1 Тогда
		Состояние("Происходит конвертирование групп расчетов");
	    ОбработатьСообщения();
//		КонвертироватьГруппыРасчетов();
	    ОбработатьСообщения();
	КонецЕсли
	Если Календ=1 Тогда
		Состояние("Происходит конвертирование календарей");
	    ОбработатьСообщения();
//		КонвертироватьКалендари();
	    ОбработатьСообщения();
	КонецЕсли
	
	Файл.Закрыть();
	СообщениеУспеха="Конвертирование завершено.";
	Ч2=""; М2="";С2="";
	ТекущееВремя(Ч2,М2,С2);
	ВремяКончала=(Ч2*60+М2)*60+С2;
	Если ВремяКончала<ВремяНачала Тогда
		ВремяКончала=ВремяКончала+24*60*60;
	КонецЕсли;
	Вр=ВремяКончала-ВремяНачала;
	
	ДобавитьВЛог(СообщениеУспеха);
	ДобавитьВЛог("Статистика работы:");
	ДобавитьВЛог("Начало работы в "+ВремяВСтроку(ВремяНачала));
	ДобавитьВЛог("Окончание работы в "+ВремяВСтроку(ВремяНачала));
	ДобавитьВЛог("Перенос длился "+ВремяВСтроку(Вр));
	Состояние(СообщениеУспеха);
	Предупреждение(СообщениеУспеха);
КонецПроцедуры

Процедура РазборДиалоговойТаблицы() // тестовая процедура для отладки
	ОчиститьОкноСообщений();	
	ИнициализацияКомпаунда();
	
	Строчка=ПолучитьПоток("Document\Document_Number16\WorkBook\Dialog Stream",0);
	Если Число(Строчка)<0 Тогда
		ДобавитьВЛог("Ошибка чтения потока. Прерываем работу");
		Возврат;
	КонецЕсли
	
	СимволовВСтрок=СтрДлина(Строчка);
	НачалоБлока=1;
	КонецБлока=СимволовВСтрок;
	
//{"Multicolumn",
//{"","browse","1353711616","10","63","300","95","0","0","4151","","","","0","U","0","0",
//"0","0","0","","","","0","-11","0","0","0","0","0","0","0","0","0","0","0","0",
//"MS Sans Serif","-1","-1","0","Основной","{""0"",""0""}"}},

	Если ВыбратьГруппуБлоков("Fixed")<0 Тогда
		ДобавитьВЛог(Вывод+"Ошибка ВыбратьГруппуБлоков Multicolumn");
		Возврат;
	КонецЕсли
	
	Пока ПолучитьБлок("Fixed")=0 Цикл
		ДобавитьВЛог("---------------------------------");
		Массив=СоздатьОбъект("Массив");
		Массив["Неизвестно1"]="";
		Массив["Неизвестно2"]="";
		Массив["Неизвестно3"]="";
		Массив["Неизвестно4"]="";
		Массив["Неизвестно5"]="";
		Массив["Неизвестно6"]="";
		Массив["Неизвестно7"]="";
		Массив["ИдентификаторКолонки"]="";
		Массив["Неизвестно9"]="";
		Массив["Неизвестно10"]="";
		Массив["Неизвестно11"]="";
		Массив["Неизвестно12"]="";
		Массив["Неизвестно13"]="";
		Массив["Неизвестно14"]="";
		Массив["Неизвестно15"]="";
		Массив["Неизвестно16"]="";
		Массив["Неизвестно17"]="";
		Массив["Неизвестно18"]="";
		Массив["Неизвестно19"]="";
		Массив["Неизвестно20"]="";
		Массив["Неизвестно21"]="";
		Массив["Неизвестно22"]="";
		ДобавитьВЛог("============================================");
//		Контрол=ОтпарситьТекущийБлокПоНомерам(Массив);
//		РаспечататьПарсенныйБлокПоНомерам(Контрол);
		Контрол=ОтпарситьТекущийБлок(Массив);
		РаспечататьПарсенныйБлок(Контрол);
	КонецЦикла;	
КонецПроцедуры


Процедура ТестовыйВызов()
	Файл=СоздатьОбъект("ФайлМетаданных");
	Файл.Открыть(СокрЛП(ПутьКБазе2С));
	Массив=Файл.ПрочитатьОбъект("Метаданные\Документ\Новый1\Форма диалога.frm");

	ВывестиМассив(Массив);
	Файл.Закрыть();
КонецПроцедуры

Процедура Выполнить()
	ЛогСписок.УдалитьВсе();
	КонвертироватьВсе();
	Возврат;
	
	//ОчиститьОкноСообщений();
	//ВывестиСтруктуруПотока("md:/Метаданные/Регистр/ОстаткиТоваров.inf"); 
	//ВывестиСтруктуруПотока("md:/Метаданные/Регистр/ОстаткиТоваров/Список элементов.inf"); 
	//ВывестиСтруктуруПотока("md:/Метаданные/Регистр/ОстаткиТоваров/Измерения.inf"); 
	//ВывестиСтруктуруПотока("md:/Метаданные/Регистр/ОстаткиТоваров/Реквизиты.inf"); 
	//ВывестиСтруктуруПотока("md:/Метаданные/Регистр/ОстаткиТоваров/Ресурсы.inf"); 
	//ВывестиСтруктуруПотока("md:/Метаданные/Регистр/ОстаткиТоваров/Измерения/Товар.atr"); 
	//ВывестиСтруктуруПотока("md:/Метаданные/Регистр/ОстаткиТоваров/Измерения/Товар.inf"); 
	//ВывестиСтруктуруПотока("md:/Метаданные/Регистр/ОстаткиТоваров/Реквизиты/ТипОперации.atr"); 
	//ВывестиСтруктуруПотока("md:/Метаданные/Регистр/ОстаткиТоваров/Реквизиты/ТипОперации.inf"); 
	//ВывестиСтруктуруПотока("md:/Метаданные/Регистр/ОстаткиТоваров/Ресурсы/Количество.atr"); 
	//ВывестиСтруктуруПотока("md:/Метаданные/Регистр/ОстаткиТоваров/Ресурсы/Количество.inf"); 
	//Возврат;
	
	МассивИзмерений=СоздатьОбъект("Массив");
	МассивРеквизитов=СоздатьОбъект("Массив");
	МассивРесурсов=СоздатьОбъект("Массив");
	СтруктураРегистра=СоздатьОбъект("Массив");
	
	Массив=СоздатьОбъект("Массив");
	Массив["ИмяИзмерения"]="Покупатель"; 
	Массив["Синоним"]="Синоним Покупатель";
	Массив["Комментарий"]="Комментарий Покупатель";
	Массив["Тип"]="Справочник.Клиенты";
	Массив["Длина"]=0;
	Массив["Точность"]=0;
	МассивИзмерений[1]=Массив;
	
	Массив=СоздатьОбъект("Массив");
	Массив["ИмяИзмерения"]="Заказ"; 
	Массив["Синоним"]="Синоним Заказ";
	Массив["Комментарий"]="Комментарий Заказ";
	Массив["Тип"]="Документ";
	Массив["Длина"]=0;
	Массив["Точность"]=0;
	МассивИзмерений[2]=Массив;
	
	Массив=СоздатьОбъект("Массив");
	Массив["ИмяРеквизита"]="Реквизит"; 
	Массив["Синоним"]="Синоним Реквизит";
	Массив["Комментарий"]="Комментарий Реквизит";
	Массив["Тип"]="Строка";
	Массив["Длина"]=10;
	Массив["Точность"]=0;
	МассивРеквизитов[1]=Массив;
	
	Массив=СоздатьОбъект("Массив");
	Массив["ИмяРесурса"]="Сумма"; 
	Массив["Синоним"]="Синоним Сумма";
	Массив["Комментарий"]="Комментарий Сумма";
	Массив["Тип"]="Число";
	Массив["Длина"]=12;
	Массив["Точность"]=2;
	МассивРесурсов[1]=Массив;
	
	Массив=СоздатьОбъект("Массив");
	Массив["ИмяРесурса"]="НДС"; 
	Массив["Синоним"]="Синоним НДС";
	Массив["Комментарий"]="Комментарий НДС";
	Массив["Тип"]="Число";
	Массив["Длина"]=12;
	Массив["Точность"]=2;
	МассивРесурсов[2]=Массив;
	
	СтруктураРегистра["ИмяРегистра"]="ВзаиморасчетыПокупателей"; 
	СтруктураРегистра["Синоним"]="Синоним регистра";
	СтруктураРегистра["Комментарий"]="Комментарий регистра";
	СтруктураРегистра["МассивИзмерений"]=МассивИзмерений;
	СтруктураРегистра["МассивРеквизитов"]=МассивРеквизитов;
	СтруктураРегистра["МассивРесурсов"]=МассивРесурсов;
	
	СоздатьРегистр(СтруктураРегистра);
КонецПроцедуры

Процедура УстановитьПутьК1С()
	ФС=СоздатьОбъект("Файловая система");
//@ Шевчик
//	ФС.ВыбратьФайл(0,ПутьКБазе77,,"Выбери файл конфигурации 1С");
	ФС.ВыбратьФайл(0,ПутьКБазе77,,"Выбери файл конфигурации 1С","Внешние формы 1С|*.ert|Конфигурации 1С|*.md");
//@ Шевчик КонецИзменений
КонецПроцедуры

Процедура УстановитьПутьК2С()
	ФС=СоздатьОбъект("Файловая система");
	ФС.ВыбратьФайл(1,ПутьКБазе2С,,"Выбери файл конфигурации 2С");
КонецПроцедуры

Процедура ПриЗакрытии()
	СохранитьЗначение("ПутьКБазе77",ПутьКБазе77);
	СохранитьЗначение("ПутьКБазе2С",ПутьКБазе2С);
	СохранитьЗначение("Глобал",Глобал);
	СохранитьЗначение("Конст",Конст);
	СохранитьЗначение("Справ",Справ);
	СохранитьЗначение("Докум",Докум);
	СохранитьЗначение("Журн",Журн);
	СохранитьЗначение("Перич",Перич);
	СохранитьЗначение("Отч",Отч);
	СохранитьЗначение("Обр",Обр);
	СохранитьЗначение("ПланСч",ПланСч);
	СохранитьЗначение("ВидыСубк",ВидыСубк);
	СохранитьЗначение("Регис",Регис);
	СохранитьЗначение("ЖурнРасч",ЖурнРасч);
	СохранитьЗначение("ВидыРасч",ВидыРасч);
	СохранитьЗначение("ГруппыРасч",ГруппыРасч);
	СохранитьЗначение("Календ",Календ);

	СохранитьЗначение("Комментарии",Комментарии);
КонецПроцедуры//ПриЗакрытии

