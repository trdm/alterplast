//Автор:  Alex_Bob 
//E-mail: asbobylk@svsokol.lipetsk.ru
//Версия модуля: 1.01 от 22.07.2004
//Релиз платформы: 06.07.2004

//******************************************************************************************
//Предопределенные процедуры и функции в режиме Предприятия
//******************************************************************************************
Перем НаборПрав;
Перем ФлагАвторизации;
Перем ФлагОтменыСобытияЗапись;
Перем Интерфейс;
//-------------------------------------------
Процедура ПриНачалеРаботыСистемы()
#Если INITGRANT
    ИнициализацияПодсистемыДоступа();
#КонецЕсли    
    Меню=СоздатьОбъект("Меню");
    ПодписатьсяНаСобытие("ПриОткрытииФормы","ОбработкаСобытияПриОткрытииФормы");
    ПодписатьсяНаСобытие("ПередЗаписьюСправочника","ОбработкаСобытияПередЗаписьюСправочника");
    ПодписатьсяНаСобытие("ПередУдалениемСправочника","ОбработкаСобытияПередУдалениемСправочника");
    ПодписатьсяНаСобытие("ПередПроведением","ОбработкаСобытияПередПроведением");
    ПодписатьсяНаСобытие("ПередОтменойПроведения","ОбработкаСобытияПередОтменойПроведения");
    //Меню.ЗагрузитьМеню();
    Меню.УдалитьМеню();
    Меню.УдалитьМеню();
    Меню.УдалитьМеню();	
	Логин();
	
    Рез=ПроверкаАвторизации();
	Если Рез=1 Тогда
//	    ФлагАвторизации=1;
	    ГМ=СоздатьОбъект("ГлавноеМеню");
	    ГМ.ВыбратьЭлементыМеню(Интерфейс,0);
	    Пока ГМ.ПолучитьЭлемент()=1 Цикл
	    	Меню=СоздатьОбъект("Меню");
	    	ГМ1=СоздатьОбъект("ГлавноеМеню");
	    	ГМ1.ВыбратьЭлементыМеню(Интерфейс,ГМ.ИД);
	    	Пока ГМ1.ПолучитьЭлемент()=1 Цикл
	    		Если СтрДлина(СокрЛП(ГМ1.Объект))>0 Тогда
	    			Обработчик=СоздатьОбъект(ГМ1.Объект);
	    			Меню.ДобавитьМеню(ГМ1.Заголовок,Обработчик,"ОткрытьСписок");
	    		Иначе	 
	    		    Меню.ДобавитьМеню(ГМ1.Заголовок,"ОбработкаМеню",ГМ1.Команда+"::1"+ГМ1.Параметр+"::2"+ГМ1.Модальность); 
	    		КонецЕсли
	    	КонецЦикла
	    	Меню.ПоказатьМеню(ГМ.Заголовок);
	    КонецЦикла
	    
	    ПИ=СоздатьОбъект("ПанелиИнструментовПользователя");
	    ПИ.ВыбратьЭлементыПанели(Интерфейс,0);
	    Пока ПИ.ПолучитьЭлемент()=1 Цикл
	    	Панель=СоздатьОбъект("ПанельИнструментов");
	    	Панель.ИмяПанели(ПИ.Заголовок);
	    	ПИ1=СоздатьОбъект("ПанелиИнструментовПользователя");
	    	ПИ1.ВыбратьЭлементыПанели(Интерфейс,ПИ.ИД);
	    	Пока ПИ1.ПолучитьЭлемент()=1 Цикл
	    		Если СтрДлина(СокрЛП(ПИ1.Объект))>0 Тогда
	    			Обработчик=СоздатьОбъект(ПИ1.Объект);
	    			Панель.Добавить(ПИ1.Пиктограмма,Обработчик,"ОткрытьСписок","",ПИ1.Заголовок,ПИ1.Заголовок);
	    		Иначе	 
	    		    Панель.Добавить(ПИ1.Пиктограмма,"ОбработкаПанели",ПИ1.Команда+"::1"+ПИ1.Параметр+"::2"+ПИ1.Модальность,"",ПИ1.Заголовок,ПИ1.Заголовок); 
	       		КонецЕсли
	    	КонецЦикла
	    	//Меню.ПоказатьМеню(ПИ.Заголовок);
	    КонецЦикла
//	    Меню.ДобавитьМеню("Наборы прав","НаборыПрав");
//		Меню.ДобавитьМеню("Пользователи","Пользователи");
//		Меню.ДобавитьМеню("Интерфейсы","Интерфейсы");
//		Меню.ПоказатьМеню("Администрирование");
	ИначеЕсли Рез=0 Тогда
	    ЗавершитьРаботуСистемы();
	Иначе 
	    ФлагАвторизации=0;    	 
	КонецЕсли;
	
КонецПроцедуры
//-------------------------------------------
Процедура ПриЗавершенииРаботыСистемы()
	//Предупреждение("Завершение работы системы");
	
КонецПроцедуры 
//-------------------------------------------
Функция ПравоДоступаФорма(НаборПрав,НазваниеПрава,Объект)
	Если (Объект="Объекты\БазаДанныхЛокально\Формы\ПАРАМЕТРЫ ПОДКЛЮЧЕНИЯ") ИЛИ
		 (Объект="Объекты\Пользователи\Формы\АвторизацияПредприятие") Тогда
		Возврат 1;
	Иначе
		Доступ=СоздатьОбъект("ПраваДоступа");
		Если (Лев(Объект,11)="Метаданные\") Тогда
		    Возврат Доступ.ПравоДоступаФорма(НаборПрав,НазваниеПрава,Объект);
		ИначеЕсли (Лев(Объект,8)="Объекты\") Тогда
		    Возврат Доступ.ПравоДоступаАдм(НаборПрав);
		ИначеЕсли (ВРег(Прав(Объект,3))=".FD") Тогда
		    Возврат Доступ.ПравоДоступаВнешние(НаборПрав);
		Иначе         
			//Объект="Общие формы\"+Объект;
			Возврат Доступ.ПравоДоступаАдм(НаборПрав);
		КонецЕсли
	КонецЕсли
КонецФункции//ПравоДоступаФорма
//-------------------------------------------
Функция ПравоДоступаОбъект(НаборПрав,НазваниеПрава,Объект)
	Доступ=СоздатьОбъект("ПраваДоступа");
	Возврат Доступ.ПравоДоступаОбъект(НаборПрав,НазваниеПрава,Объект);
КонецФункции//ПравоДоступаОбъект
//-------------------------------------------
Функция ПравоДоступа(НазваниеПрава,Объект) Экспорт
	//Сообщить(НазваниеПрава);
	//Сообщить(Объект);
	Если ФлагАвторизации=0 Тогда
		//Поддержка прав доступа не включена
		Сообщить("Проверка прав выключена");
		Возврат -1; 
	КонецЕсли
	
	Если ТипЗначенияСтр(Объект)="Число" Тогда
	    //Проверка доступа к объекту
	    Возврат ПравоДоступаОбъект(НаборПрав,НазваниеПрава,Объект);
	КонецЕсли
	Если ТипЗначения(Объект)>10 Тогда
	    //Проверка доступа к объекту
	    НомерОбъекта=Объект.НомерТаблицыОбъекта();
	    Возврат ПравоДоступаОбъект(НаборПрав,НазваниеПрава,НомерОбъекта);
	КонецЕсли
	Если ТипЗначенияСтр(Объект)="Строка" Тогда
	    //Проверка права доступа к форме
	    Возврат ПравоДоступаФорма(НаборПрав,НазваниеПрава,Объект);
	КонецЕсли
	
    Возврат 1;
КонецФункции 

//-------------------------------------------
Функция ПроверкаАвторизации()
    Попытка 
        Пользователь=СоздатьОбъект("Пользователи");
        Если Пользователь.КоличествоЭлементов()>0 Тогда
            Пользователь.УстановитьИмяИдентификатора("Имя");
            Пользователь.УстановитьИдентификаторОбъекта(ИмяПользователя());
            Если Пользователь.НайтиЭлементВБД()=1 Тогда
            	Если Пользователь.Пароль=ПарольПользователя() Тогда
            	    НаборПрав=Пользователь.НаборПрав;
            	    Интерфейс=Пользователь.Интерфейс;
            		Возврат 1;
            	Иначе
            		Предупреждение("Неверное имя пользователя или пароль!");
            		Возврат 0;	 
            	КонецЕсли
            Иначе
                Предупреждение("Неверное имя пользователя или пароль!");
                Возврат 0;
            КонецЕсли;
        Иначе
            //Поддержка проверки прав не функционирует
            Возврат -1;
        КонецЕсли;
    Исключение
        Предупреждение("Ошибка авторизации: Не найден объект <Пользователи>!");     
        Сообщить("Авторизация выключена!");
       	Возврат -1;         
    КонецПопытки;
    
КонецФункции 

//******************************************************************************************
//Предопределенные процедуры и функции в режиме Конфигуратора
//******************************************************************************************
Процедура ПриНачалеРаботыКонфигуратора()
	ЛогинКонфиг();
	
	Сп=СоздатьОбъект("СписокЗначений");
	ФС=СоздатьОбъект("Файловая система");
	ФС.УстТекКаталог(КаталогИБ()+"USERS\");
	ИмяФайла="";
	ИмяФайла=ФС.НайтиПервыйФайл("*.usr");
	Если ПустоеЗначение(ИмяФайла)=0 Тогда
		ЗначениеИзФайла(ИмяФайла,Сп);
		НомерЗначения=Сп.НайтиЗначение(ИмяПользователя());
		Если НомерЗначения>0 Тогда
			Hash="";
			Сп.ПолучитьЗначение(НомерЗначения,Hash);
			Если ПарольПользователя()=Hash Тогда
				Возврат;	 
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	Пока 1=1 Цикл
		ИмяФайла=ФС.НайтиСледующийФайл("*.usr");
		Если ПустоеЗначение(ИмяФайла)=0 Тогда
			ЗначениеИзФайла(ИмяФайла,Сп);
			НомерЗначения=Сп.НайтиЗначение(ИмяПользователя());
			Если НомерЗначения>0 Тогда
				Hash="";
				Сп.ПолучитьЗначение(НомерЗначения,Hash);
				Если ПарольПользователя()=Hash Тогда
					Возврат;	 
				КонецЕсли;
			КонецЕсли;
		Иначе
		    Прервать;	
		КонецЕсли;
	КонецЦикла
	Предупреждение("Данный пользователь не имеет прав на работу в режиме конфигуратора!");
	ЗавершитьРаботуСистемы();
КонецПроцедуры 
//-------------------------------------------

Процедура ПриЗавершенииРаботыКонфигуратора()
	ЗаписьВЛог(1,"Отключение");
	//Предупреждение("Завершение работы конфигуратора");
КонецПроцедуры 
//-------------------------------------------
Процедура ОбработкаМеню(КомандаПараметр)
     Поз1=Найти(КомандаПараметр,"::1");
     Если Поз1>0 Тогда
     	 Команда=Сред(КомандаПараметр,1,Поз1-1);
     	 Параметр=Сред(КомандаПараметр,Поз1+3);
     	 Поз2=Найти(Параметр,"::2");
     	 Если Поз2>0 Тогда
     	 	 Параметр=ЗначениеИзСтроки(Сред(Параметр,1,Поз1-1));
     	 	 Модальность=Число(Сред(Параметр,Поз1+3));
     	 Иначе
     	     Ошибка("Формирование меню: неверный параметр"); 
     	 КонецЕсли
     Иначе	 
         Ошибка("Формирование меню: неверный параметр"); 
     КонецЕсли
     Если Модальность=1 Тогда
         ОткрытьФормуМодально(Команда,Параметр);
     Иначе
         ОткрытьФорму(Команда,Параметр);    
     КонецЕсли
     	 
КонецПроцедуры//ОбработкаМеню
//-------------------------------------------
Процедура ОбработкаПанели(КомандаПараметр)
     Поз1=Найти(КомандаПараметр,"::1");
     Если Поз1>0 Тогда
     	 Команда=Сред(КомандаПараметр,1,Поз1-1);
     	 Параметр=Сред(КомандаПараметр,Поз1+3);
     	 Поз2=Найти(Параметр,"::2");
     	 Если Поз2>0 Тогда
     	 	 Параметр=ЗначениеИзСтроки(Сред(Параметр,1,Поз1-1));
     	 	 Модальность=Число(Сред(Параметр,Поз1+3));
     	 Иначе
     	     Ошибка("Формирование панели: неверный параметр"); 
     	 КонецЕсли
     Иначе	 
         Ошибка("Формирование панели: неверный параметр"); 
     КонецЕсли
     Если Модальность=1 Тогда
         ОткрытьФормуМодально(Команда,Параметр);
     Иначе
         ОткрытьФорму(Команда,Параметр);    
     КонецЕсли
     	 
КонецПроцедуры//ОбработкаПанели
//-------------------------------------------
Процедура НаборыПрав()
	 ОткрытьФорму("Объекты\НаборыПрав\Формы\СписокНаборовПрав",);
КонецПроцедуры//НаборыПрав
//-------------------------------------------
Процедура Пользователи()
	 ОткрытьФорму("Объекты\Пользователи\Формы\СписокПользователей",);
КонецПроцедуры//Пользователи
//-------------------------------------------
Процедура Интерфейсы()
	 ОткрытьФорму("Объекты\Интерфейсы\Формы\СписокИнтерфейсов",);
КонецПроцедуры//Пользователи

//___________________________________________________________________________________________
Процедура Логин()
	Если ИмяПользователя()="" Тогда
         ОткрытьФормуМодально("Объекты\Пользователи\Формы\АвторизацияПредприятие");
	КонецЕсли
	ЖурналСоб=СоздатьОбъект("ЖурналСобытий");
	ЖурналСоб.ЗаписатьСобытие(1,"Подключение");
КонецПроцедуры//Логин
//___________________________________________________________________________________________
Процедура ЛогинКонфиг()
	Если ИмяПользователя()="" Тогда
         ОткрытьФормуМодально("Объекты\Пользователи\Формы\АвторизацияКонфигуратор");
	КонецЕсли
	ЗаписьВЛог(1,"Подключение");
КонецПроцедуры//ЛогинКонфиг
//___________________________________________________________________________________________
Процедура ЗаписьВЛог(чТип,сСобытие)
	
	БДЛог=СоздатьОбъект("SQLLite");
    БДЛог.Соединение(КаталогИБ()+"main.db");	
	Если БДЛог.СуществуетТаблица("log")=0 Тогда
	    БДЛог.Запрос("create table log (id int,datetime decimal(16,0),reg int,user char(30),comp char(30),eventtype int, event char(30),obj decimal(20,0),objview text)");
	КонецЕсли;  
	БДЛог.Запрос("select max(id) from log");
	Если БДЛог.ПолучитьСтроку()=1 Тогда
		ИД=Число(БДЛог.ПолучитьПоле(1))+1;
	Иначе
		ИД=1;	
	КонецЕсли;
	сВремя=СтрЗаменить(ТекущееВремя(),":","");
	ДатаВремя=Число(ДатаВСтроку(ТекущаяДата(),сВремя));
	Если МонопольныйРежим() Тогда
		Реж=2;
	Иначе
		Реж=0;	
	КонецЕсли
	Сообщить("Подключение");
    Пользователь=ИмяПользователя();
    Компьютер=ИмяКомпьютера();
    БДЛог.Запрос("insert into log (id,datetime,reg,user,comp,eventtype,event,obj,objview) values ("+ИД+","+ДатаВремя+","+Реж+",'"+Пользователь+"','"+Компьютер+"',"+чТип+",'"+сСобытие+"',0,'')");
КонецПроцедуры//ЗаписьВЛог

//___________________________________________________________________________________________
Процедура ИнициализацияПодсистемыДоступа()
	Ответ=Вопрос("Система запущена с параметром INITGRANT - инициализация подсистемы прав доступа. Предыдущая информация о правах, пользователях и интерфейсах будет уничтожена. Продолжать?",4); 
	Если Ответ=6 Тогда
		БД=СоздатьОбъект("БазаДанных");
		БД.Запрос("drop table users");
		БД.Запрос("drop table rights");
		БД.Запрос("drop table rights_list");
		БД.Запрос("drop table interface");
		БД.Запрос("drop table mainmenu");
		БД.Запрос("drop table toolbar");
		БД.Запрос("DELETE FROM metadata WHERE prefix='users'");
		БД.Запрос("DELETE FROM metadata WHERE prefix='rights'");
		БД.Запрос("DELETE FROM metadata WHERE prefix='rights_list'");
		БД.Запрос("DELETE FROM metadata WHERE prefix='interface'");
		БД.Запрос("DELETE FROM metadata WHERE prefix='mainmenu'");
		БД.Запрос("DELETE FROM metadata WHERE prefix='toolbar'");
	КонецЕсли
	ЗавершитьРаботуСистемы();	
КонецПроцедуры//ИнициализацияПодсистемыДоступа
//___________________________________________________________________________________________
Функция ОбработкаСобытияПриОткрытииФормы(ФлагЗапрета,ИмяФормы)
	ФлагЗапрета=НЕ(ПравоДоступа("use",ИмяФормы));
	Если ФлагЗапрета Тогда
		Предупреждение("Недостаточно прав доступа!");
	Иначе
		ЖурналСоб=СоздатьОбъект("ЖурналСобытий");
		ЖурналСоб.ЗаписатьСобытие(1,"Открыта форма",ИмяФормы);
	КонецЕсли
	
	Возврат ФлагЗапрета;
КонецФункции//ОбработкаСобытияПриОткрытииФормы(ФлагЗапрета,ИмяФормы)
//___________________________________________________________________________________________
Функция ОбработкаСобытияПередЗаписьюСправочника(ФлагЗапрета,Объект)
	Если ФлагОтменыСобытияЗапись Тогда
		ФлагОтменыСобытияЗапись=0;
		Возврат 0;
	КонецЕсли

	ФлагЗапрета=НЕ(ПравоДоступа("write",Объект));
	Если ФлагЗапрета Тогда
		Предупреждение("Недостаточно прав доступа!");
	КонецЕсли

	Возврат ФлагЗапрета;
КонецФункции//ОбработкаСобытияПередЗаписьюСправочника()
//___________________________________________________________________________________________
Функция ОбработкаСобытияПередУдалениемСправочника(ФлагЗапрета,Объект)
	ФлагЗапрета=НЕ(ПравоДоступа("delete",Объект));
	Если ФлагЗапрета Тогда
		Предупреждение("Недостаточно прав доступа!");
	КонецЕсли
    ФлагОтменыСобытияЗапись=1; 
	Возврат ФлагЗапрета;
КонецФункции//ОбработкаСобытияПередУдалениемСправочника()
//___________________________________________________________________________________________
Функция ОбработкаСобытияПередПроведением(ФлагЗапрета,Объект)
	ФлагЗапрета=НЕ(ПравоДоступа("action",Объект));
	Если ФлагЗапрета Тогда
		Предупреждение("Недостаточно прав доступа!");
	КонецЕсли
    ФлагОтменыСобытияЗапись=1; 
	Возврат ФлагЗапрета;
КонецФункции//ОбработкаСобытияПередПроведением
//___________________________________________________________________________________________
Функция ОбработкаСобытияПередОтменойПроведения(ФлагЗапрета,Объект)
	ФлагЗапрета=НЕ(ПравоДоступа("action",Объект));
	Если ФлагЗапрета Тогда
		Предупреждение("Недостаточно прав доступа!");
	КонецЕсли
    ФлагОтменыСобытияЗапись=1; 
	Возврат ФлагЗапрета;
КонецФункции//ОбработкаСобытияПередОтменойПроведения