#Задать ИмяФайлаБлокировки	КаталогИБ()+"enterprise.lck"
Перем блокФС;//блокФС:ФС
//******************************************************************************************
//Начальная инициализация модуля - процедура вызывается в режиме Конфигуратора и Предприятия
//******************************************************************************************
Процедура ИнициализацияМодуля()

	//Реализация монопольно режима работы
	Если РежимРаботы()="Предприятие" Тогда
		блокФС=СоздатьОбъект("ФС");
		блокФС.УдалитьФайл(ИмяФайлаБлокировки);
		РазмерФайла=0;
		Если блокФС.СуществуетФайл(ИмяФайлаБлокировки) Тогда
			блокФС.АтрибутыФайла(ИмяФайлаБлокировки,РазмерФайла);
		КонецЕсли
		
		Попытка
		блокФС.ЗаписатьДанные(ИмяФайлаБлокировки,"#",РазмерФайла+1);//увеличиваем размер файла
		Исключение
		КонецПопытки

		Удача=0;
		Если МонопольныйРежим() Тогда
			Попытка
				блокФС.ЗаблокироватьФайл(ИмяФайлаБлокировки,0,РазмерФайла+1);//глобальная блокировка всего файла
				Удача=1;
			Исключение
			КонецПопытки
		Иначе
			Попытка
				блокФС.ЗаблокироватьФайл(ИмяФайлаБлокировки,0,1);//глобальная блокировка 0-го байта (проверка монопольного режима ранее запущенной системы)
				блокФС.РазблокироватьФайл(ИмяФайлаБлокировки,0,1);
				
				блокФС.ЗаблокироватьФайл(ИмяФайлаБлокировки,РазмерФайла+1,1);//блокировка одной позиции (текущая позиция данной задачи)
				Удача=1;
			Исключение
			КонецПопытки
		КонецЕсли
		
		Если НЕ Удача Тогда
			Предупреждение("Ошибка блокировки.
			|Возможно данные используются другой задачей.");
			ЗавершитьРаботуСистемы(-1);//аварийный выход
			Возврат;
		КонецЕсли
	КонецЕсли
КонецПроцедуры

//******************************************************************************************
//Предопределенные процедуры и функции в режиме Предприятия
//******************************************************************************************
Процедура ПриНачалеРаботыСистемы()

КонецПроцедуры

Процедура ПриЗавершенииРаботыСистемы()
	блокФС=СоздатьОбъект("ФС");
	блокФС.УдалитьФайл(ИмяФайлаБлокировки);
КонецПроцедуры 


//******************************************************************************************
//Предопределенные процедуры и функции в режиме Конфигуратора
//******************************************************************************************
Процедура ПриНачалеРаботыКонфигуратора()

КонецПроцедуры 


Процедура ПриЗавершенииРаботыКонфигуратора()

КонецПроцедуры 





//___________________________________________________________________________________________
Процедура БлокировкаФайла(МаксНеудач)
	КолНеудачныхБлокировок=0;
	Удача=0;
	Пока НЕ Удача Цикл
		Попытка
		блокФС.ЗаблокироватьФайл(ИмяФайлаБлокировки,0,1);
		Удача=1;
		Исключение
		КолНеудачныхБлокировок=КолНеудачныхБлокировок+1;
		Если КолНеудачныхБлокировок>МаксНеудач Тогда
			 Предупреждение("Ошибка блокировки.
			 |Возможно данные используются другой задачей.");
			 ЗавершитьРаботуСистемы(-1);//аварийный выход
			 Возврат;
		КонецЕсли
		Пауза(30);
		КонецПопытки
	КонецЦикла
КонецПроцедуры//БлокировкаФайла


//___________________________________________________________________________________________
Процедура ГлобальнаяБлокировка(Флаг=1)Экспорт
	Если НЕ ТипЗначения(Флаг) Тогда
		 Флаг=1;
	КонецЕсли
	
	Если Флаг Тогда
		БлокировкаФайла(1000);
	Иначе
		Попытка
		блокФС.РазблокироватьФайл(ИмяФайлаБлокировки,0,1);
		Исключение
		КонецПопытки
	КонецЕсли
КонецПроцедуры//ГлобальнаяБлокировка

//удаляем определения
#Удалить ИмяФайлаБлокировки
